"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["911247"],{604153:function(n,i,e){e.r(i),e.d(i,{default:()=>d,frontMatter:()=>l,metadata:()=>t,assets:()=>r,toc:()=>o,contentTitle:()=>c});var t=JSON.parse('{"id":"query-acceleration/tuning/tuning-plan/reordering-join-with-leading-hint","title":"\u4F7F\u7528 Leading Hint \u63A7\u5236 Join \u987A\u5E8F","description":"\u6982\u8FF0","source":"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/query-acceleration/tuning/tuning-plan/reordering-join-with-leading-hint.md","sourceDirName":"query-acceleration/tuning/tuning-plan","slug":"/query-acceleration/tuning/tuning-plan/reordering-join-with-leading-hint","permalink":"/zh-CN/docs/dev/query-acceleration/tuning/tuning-plan/reordering-join-with-leading-hint","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"\u4F7F\u7528 Leading Hint \u63A7\u5236 Join \u987A\u5E8F","language":"zh-CN"},"sidebar":"docs","previous":{"title":"\u4F7F\u7528 Hint \u63A7\u5236\u4EE3\u4EF7\u6539\u5199","permalink":"/zh-CN/docs/dev/query-acceleration/tuning/tuning-plan/controlling-hints-with-cbo-rule"},"next":{"title":"\u4F7F\u7528 SQL Cache \u52A0\u901F\u67E5\u8BE2","permalink":"/zh-CN/docs/dev/query-acceleration/tuning/tuning-plan/accelerating-queries-with-sql-cache"}}'),a=e("785893"),s=e("250065");let l={title:"\u4F7F\u7528 Leading Hint \u63A7\u5236 Join \u987A\u5E8F",language:"zh-CN"},c=void 0,r={},o=[{value:"\u6982\u8FF0",id:"\u6982\u8FF0",level:2},{value:"\u6848\u4F8B 1\uFF1A\u8C03\u6574\u5DE6\u53F3\u8868\u987A\u5E8F",id:"\u6848\u4F8B-1\u8C03\u6574\u5DE6\u53F3\u8868\u987A\u5E8F",level:2},{value:"\u6848\u4F8B 2\uFF1A\u5F3A\u5236\u751F\u6210\u5DE6\u6DF1\u6811",id:"\u6848\u4F8B-2\u5F3A\u5236\u751F\u6210\u5DE6\u6DF1\u6811",level:2},{value:"\u6848\u4F8B 3\uFF1A\u5F3A\u5236\u751F\u6210\u53F3\u6DF1\u6811",id:"\u6848\u4F8B-3\u5F3A\u5236\u751F\u6210\u53F3\u6DF1\u6811",level:2},{value:"\u6848\u4F8B 4\uFF1A\u5F3A\u5236\u751F\u6210 bushy \u6811",id:"\u6848\u4F8B-4\u5F3A\u5236\u751F\u6210-bushy-\u6811",level:2},{value:"\u6848\u4F8B 5\uFF1Aview \u4F5C\u4E3A\u6574\u4F53\u53C2\u4E0E\u8FDE\u63A5",id:"\u6848\u4F8B-5view-\u4F5C\u4E3A\u6574\u4F53\u53C2\u4E0E\u8FDE\u63A5",level:2},{value:"\u6848\u4F8B 6\uFF1ADistributeHint \u4E0E LeadingHint \u6DF7\u7528",id:"\u6848\u4F8B-6distributehint-\u4E0E-leadinghint-\u6DF7\u7528",level:2},{value:"\u603B\u7ED3",id:"\u603B\u7ED3",level:2}];function h(n){let i={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.h2,{id:"\u6982\u8FF0",children:"\u6982\u8FF0"}),"\n",(0,a.jsxs)(i.p,{children:["Leading Hint \u7279\u6027\u5141\u8BB8\u7528\u6237\u624B\u5DE5\u6307\u5B9A\u67E5\u8BE2\u4E2D\u7684\u8868\u7684\u8FDE\u63A5\u987A\u5E8F\uFF0C\u5728\u7279\u5B9A\u573A\u666F\u4F18\u5316\u590D\u6742\u67E5\u8BE2\u6027\u80FD\u3002\u672C\u6587\u5C06\u8BE6\u7EC6\u4ECB\u7ECD\u5982\u4F55\u5728 Doris \u4E2D\u4F7F\u7528 Leading Hint \u6765\u63A7\u5236 join \u7684\u987A\u5E8F\u3002\u8BE6\u7EC6\u4F7F\u7528\u8BF4\u660E\uFF0C\u53EF\u53C2\u8003",(0,a.jsx)(i.a,{href:"/zh-CN/docs/dev/query-acceleration/hints/leading-hint",children:"leading hint"}),"\u6587\u6863\u3002"]}),"\n",(0,a.jsx)(i.admonition,{title:"\u6CE8\u610F",type:"caution",children:(0,a.jsx)(i.p,{children:"\u5F53\u524D Doris \u5DF2\u7ECF\u5177\u5907\u826F\u597D\u7684\u5F00\u7BB1\u5373\u7528\u7684\u80FD\u529B\uFF0C\u4E5F\u5C31\u610F\u5473\u7740\u5728\u7EDD\u5927\u591A\u6570\u573A\u666F\u4E0B\uFF0CDoris \u4F1A\u81EA\u9002\u5E94\u7684\u4F18\u5316\u5404\u79CD\u573A\u666F\u4E0B\u7684\u6027\u80FD\uFF0C\u65E0\u9700\u7528\u6237\u6765\u624B\u5DE5\u63A7\u5236 hint \u6765\u8FDB\u884C\u4E1A\u52A1\u8C03\u4F18\u3002\u672C\u7AE0\u4ECB\u7ECD\u7684\u5185\u5BB9\u4E3B\u8981\u9762\u5411\u4E13\u4E1A\u8C03\u4F18\u4EBA\u5458\uFF0C\u4E1A\u52A1\u4EBA\u5458\u4EC5\u505A\u7B80\u5355\u4E86\u89E3\u5373\u53EF\u3002"})}),"\n",(0,a.jsx)(i.h2,{id:"\u6848\u4F8B-1\u8C03\u6574\u5DE6\u53F3\u8868\u987A\u5E8F",children:"\u6848\u4F8B 1\uFF1A\u8C03\u6574\u5DE6\u53F3\u8868\u987A\u5E8F"}),"\n",(0,a.jsx)(i.p,{children:"\u5BF9\u4E8E\u5982\u4E0B\u67E5\u8BE2\uFF1A"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-sql",children:"mysql> explain shape plan select from t1 join t2 on t1.c1 = t2.c2;\n+------------------------------------------------------------------------------+\n| _Explain_ String(Nereids Planner)                                              |\n+------------------------------------------------------------------------------+\n| PhysicalResultSink                                                           |\n| --PhysicalDistribute[DistributionSpecGather]                                 |\n| ----PhysicalProject                                                          |\n| ------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=() |\n| --------PhysicalOlapScan[t1]                                                 |\n| --------PhysicalDistribute[DistributionSpecHash]                             |\n| ----------PhysicalOlapScan[t2]                                               |\n+------------------------------------------------------------------------------+\n"})}),"\n",(0,a.jsx)(i.p,{children:"\u53EF\u4EE5\u4F7F\u7528 Leading Hint\uFF0C\u5F3A\u5236\u6307\u5B9A join order \u4E3A t2 join t1\uFF0C\u8C03\u6574\u539F\u59CB\u8FDE\u63A5\u987A\u5E8F\u3002"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-sql",children:"mysql> explain shape plan select /*+ leading(t2 t1) */ * from t1 join t2 on t1.c1 = t2.c2;\n+------------------------------------------------------------------------------+\n| _Explain_ String(Nereids Planner)                                              |\n+------------------------------------------------------------------------------+\n| PhysicalResultSink                                                           |\n| --PhysicalDistribute[DistributionSpecGather]                                 |\n| ----PhysicalProject                                                          |\n| ------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=() |\n| --------PhysicalOlapScan[t2]                                                 |\n| --------PhysicalDistribute[DistributionSpecHash]                             |\n| ----------PhysicalOlapScan[t1]                                               |\n|                                                                              |\n| Hint log:                                                                    |\n| Used: leading(t2 t1)                                                         |\n| UnUsed:                                                                      |\n| SyntaxError:                                                                 |\n+------------------------------------------------------------------------------+\n"})}),"\n",(0,a.jsxs)(i.p,{children:["Hint log \u5C55\u793A\u4E86\u5E94\u7528\u6210\u529F\u7684 hint: ",(0,a.jsx)(i.code,{children:"Used: leading(t2 t1)"}),"\u3002"]}),"\n",(0,a.jsx)(i.h2,{id:"\u6848\u4F8B-2\u5F3A\u5236\u751F\u6210\u5DE6\u6DF1\u6811",children:"\u6848\u4F8B 2\uFF1A\u5F3A\u5236\u751F\u6210\u5DE6\u6DF1\u6811"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-sql",children:"mysql> explain shape plan select /*+ leading(t1 t2 t3) */ * from t1 join t2 on t1.c1 = t2.c2 join t3 on t2.c2 = t3.c3;\n+--------------------------------------------------------------------------------+\n| _Explain_ String(Nereids Planner)                                                |\n+--------------------------------------------------------------------------------+\n| PhysicalResultSink                                                             |\n| --PhysicalDistribute[DistributionSpecGather]                                   |\n| ----PhysicalProject                                                            |\n| ------hashJoin[INNER_JOIN] hashCondition=((t2.c2 = t3.c3)) otherCondition=()   |\n| --------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=() |\n| ----------PhysicalOlapScan[t1]                                                 |\n| ----------PhysicalDistribute[DistributionSpecHash]                             |\n| ------------PhysicalOlapScan[t2]                                               |\n| --------PhysicalDistribute[DistributionSpecHash]                               |\n| ----------PhysicalOlapScan[t3]                                                 |\n|                                                                                |\n| Hint log:                                                                      |\n| Used: leading(t1 t2 t3)                                                        |\n| UnUsed:                                                                        |\n| SyntaxError:                                                                   |\n+--------------------------------------------------------------------------------+\n"})}),"\n",(0,a.jsxs)(i.p,{children:["\u540C\u6837\uFF0CHint log \u5C55\u793A\u4E86\u5E94\u7528\u6210\u529F\u7684 hint: ",(0,a.jsx)(i.code,{children:"Used: leading(t1 t2 t3)"}),"\u3002"]}),"\n",(0,a.jsx)(i.h2,{id:"\u6848\u4F8B-3\u5F3A\u5236\u751F\u6210\u53F3\u6DF1\u6811",children:"\u6848\u4F8B 3\uFF1A\u5F3A\u5236\u751F\u6210\u53F3\u6DF1\u6811"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-sql",children:"mysql> explain shape plan select /*+ leading(t1 {t2 t3}) */ * from t1 join t2 on t1.c1 = t2.c2 join t3 on t2.c2 = t3.c3;\n+----------------------------------------------------------------------------------+\n| _Explain_ String(Nereids Planner)                                                  |\n+----------------------------------------------------------------------------------+\n| PhysicalResultSink                                                               |\n| --PhysicalDistribute[DistributionSpecGather]                                     |\n| ----PhysicalProject                                                              |\n| ------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=()     |\n| --------PhysicalOlapScan[t1]                                                     |\n| --------PhysicalDistribute[DistributionSpecHash]                                 |\n| ----------hashJoin[INNER_JOIN] hashCondition=((t2.c2 = t3.c3)) otherCondition=() |\n| ------------PhysicalOlapScan[t2]                                                 |\n| ------------PhysicalDistribute[DistributionSpecHash]                             |\n| --------------PhysicalOlapScan[t3]                                               |\n|                                                                                  |\n| Hint log:                                                                        |\n| Used: leading(t1 { t2 t3 })                                                      |\n| UnUsed:                                                                          |\n| SyntaxError:                                                                     |\n+----------------------------------------------------------------------------------+\n"})}),"\n",(0,a.jsxs)(i.p,{children:["\u540C\u6837\uFF0CHint log \u5C55\u793A\u4E86\u5E94\u7528\u6210\u529F\u7684 hint: ",(0,a.jsx)(i.code,{children:"Used: leading(t1 { t2 t3 })"}),"\u3002"]}),"\n",(0,a.jsx)(i.h2,{id:"\u6848\u4F8B-4\u5F3A\u5236\u751F\u6210-bushy-\u6811",children:"\u6848\u4F8B 4\uFF1A\u5F3A\u5236\u751F\u6210 bushy \u6811"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-sql",children:"mysql> explain shape plan select /*+ leading({t1 t2} {t3 t4}) */ * from t1 join t2 on t1.c1 = t2.c2 join t3 on t2.c2 = t3.c3 join t4 on t3.c3 = t4.c4;\n+-----------------------------------------------+\n| _Explain_ String                                |\n+-----------------------------------------------+\n| PhysicalResultSink                            |\n| --PhysicalDistribute                          |\n| ----PhysicalProject                           |\n| ------hashJoin[INNER_JOIN](t2.c2 = t3.c3)     |\n| --------hashJoin[INNER_JOIN](t1.c1 = t2.c2)   |\n| ----------PhysicalOlapScan[t1]                |\n| ----------PhysicalDistribute                  |\n| ------------PhysicalOlapScan[t2]              |\n| --------PhysicalDistribute                    |\n| ----------hashJoin[INNER_JOIN](t3.c3 = t4.c4) |\n| ------------PhysicalOlapScan[t3]              |\n| ------------PhysicalDistribute                |\n| --------------PhysicalOlapScan[t4]            |\n|                                               |\n| Used: leading({ t1 t2 } { t3 t4 })            |\n| UnUsed:                                       |\n| SyntaxError:                                  |\n+-----------------------------------------------+\n"})}),"\n",(0,a.jsxs)(i.p,{children:["\u540C\u6837\uFF0CHint log \u5C55\u793A\u4E86\u5E94\u7528\u6210\u529F\u7684 hint: ",(0,a.jsx)(i.code,{children:"Used: leading({ t1 t2 } { t3 t4 })"}),"\u3002"]}),"\n",(0,a.jsx)(i.h2,{id:"\u6848\u4F8B-5view-\u4F5C\u4E3A\u6574\u4F53\u53C2\u4E0E\u8FDE\u63A5",children:"\u6848\u4F8B 5\uFF1Aview \u4F5C\u4E3A\u6574\u4F53\u53C2\u4E0E\u8FDE\u63A5"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-sql",children:"mysql>  explain shape plan select /*+ leading(alias t1) */ count(*) from t1 join (select c2 from t2 join t3 on t2.c2 = t3.c3) as alias on t1.c1 = alias.c2;\n+--------------------------------------------------------------------------------------+\n| _Explain_ String(Nereids Planner)                                                      |\n+--------------------------------------------------------------------------------------+\n| PhysicalResultSink                                                                   |\n| --hashAgg[GLOBAL]                                                                    |\n| ----PhysicalDistribute[DistributionSpecGather]                                       |\n| ------hashAgg[LOCAL]                                                                 |\n| --------PhysicalProject                                                              |\n| ----------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = alias.c2)) otherCondition=()  |\n| ------------PhysicalProject                                                          |\n| --------------hashJoin[INNER_JOIN] hashCondition=((t2.c2 = t3.c3)) otherCondition=() |\n| ----------------PhysicalProject                                                      |\n| ------------------PhysicalOlapScan[t2]                                               |\n| ----------------PhysicalDistribute[DistributionSpecHash]                             |\n| ------------------PhysicalProject                                                    |\n| --------------------PhysicalOlapScan[t3]                                             |\n| ------------PhysicalDistribute[DistributionSpecHash]                                 |\n| --------------PhysicalProject                                                        |\n| ----------------PhysicalOlapScan[t1]                                                 |\n|                                                                                      |\n| Hint log:                                                                            |\n| Used: leading(alias t1)                                                              |\n| UnUsed:                                                                              |\n| SyntaxError:                                                                         |\n+--------------------------------------------------------------------------------------+\n"})}),"\n",(0,a.jsxs)(i.p,{children:["\u540C\u6837\uFF0CHint log \u5C55\u793A\u4E86\u5E94\u7528\u6210\u529F\u7684 hint: ",(0,a.jsx)(i.code,{children:"Used: leading(alias t1)"}),"\u3002"]}),"\n",(0,a.jsx)(i.h2,{id:"\u6848\u4F8B-6distributehint-\u4E0E-leadinghint-\u6DF7\u7528",children:"\u6848\u4F8B 6\uFF1ADistributeHint \u4E0E LeadingHint \u6DF7\u7528"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-sql",children:"explain shape plan\n    select \n        nation,\n        o_year,\n        sum(amount) as sum_profit\n    from\n        (\n            select\n                /*+ leading(orders shuffle {lineitem shuffle part} shuffle {supplier broadcast nation} shuffle partsupp) */\n                n_name as nation,\n                extract(year from o_orderdate) as o_year,\n                l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount\n            from\n                part,\n                supplier,\n                lineitem,\n                partsupp,\n                orders,\n                nation\n            where\n                s_suppkey = l_suppkey\n                and ps_suppkey = l_suppkey\n                and ps_partkey = l_partkey\n                and p_partkey = l_partkey\n                and o_orderkey = l_orderkey\n                and s_nationkey = n_nationkey\n                and p_name like '%green%'\n        ) as profit\n    group by\n        nation,\n        o_year\n    order by\n        nation,\n        o_year desc;\n"})}),"\n",(0,a.jsxs)(i.p,{children:["\u4E0A\u8FF0 ",(0,a.jsx)(i.code,{children:"/*+ leading(orders shuffle {lineitem shuffle part} shuffle {supplier broadcast nation} shuffle partsupp) */"})," hint \u6307\u5B9A\u65B9\u5F0F\uFF0C\u6DF7\u7528\u4E86 leading \u548C distribute hint \u4E24\u79CD\u683C\u5F0F\u3002leading \u7528\u4E8E\u63A7\u5236\u603B\u4F53\u7684\u8868\u4E4B\u95F4\u7684\u76F8\u5BF9 join \u987A\u5E8F\uFF0C\u800C ",(0,a.jsx)(i.code,{children:"shuffle"})," \u548C ",(0,a.jsx)(i.code,{children:"broadcast"})," \u5206\u522B\u7528\u4E8E\u6307\u5B9A\u7279\u5B9A join \u4F7F\u7528\u4F55\u79CD shuffle \u65B9\u5F0F\u3002\u901A\u8FC7\u4E24\u79CD\u7ED3\u5408\u4F7F\u7528\uFF0C\u53EF\u4EE5\u7075\u6D3B\u7684\u63A7\u5236\u8FDE\u63A5\u987A\u5E8F\u548C\u8FDE\u63A5\u65B9\u5F0F\uFF0C\u4FBF\u4E8E\u624B\u5DE5\u63A7\u5236\u7528\u6237\u671F\u671B\u7684\u8BA1\u5212\u884C\u4E3A\u3002"]}),"\n",(0,a.jsx)(i.admonition,{title:"\u4F7F\u7528\u5EFA\u8BAE",type:"caution",children:(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"\u5EFA\u8BAE\u4F7F\u7528 EXPLAIN \u6765\u4ED4\u7EC6\u5206\u6790\u6267\u884C\u8BA1\u5212\uFF0C\u4EE5\u786E\u4FDD Leading Hint \u80FD\u8FBE\u5230\u9884\u671F\u7684\u6548\u679C\u3002"}),"\n",(0,a.jsx)(i.li,{children:"Doris \u7248\u672C\u5347\u7EA7\u6216\u8005\u4E1A\u52A1\u6570\u636E\u53D8\u66F4\u65F6\uFF0C\u5E94\u91CD\u65B0\u8BC4\u4F30 Leading Hint \u7684\u6548\u679C\uFF0C\u505A\u5230\u53CA\u65F6\u8BB0\u5F55\u548C\u8C03\u6574\u3002"}),"\n"]})}),"\n",(0,a.jsx)(i.h2,{id:"\u603B\u7ED3",children:"\u603B\u7ED3"}),"\n",(0,a.jsx)(i.p,{children:"Leading Hint \u662F\u4E00\u79CD\u5F3A\u5927\u7684\u53EF\u4EE5\u624B\u5DE5\u63A7\u5236\u8FDE\u63A5\u987A\u5E8F\u7684\u529F\u80FD\uFF0C\u4E8E\u6B64\u540C\u65F6\uFF0C\u4E5F\u53EF\u4EE5\u548C shuffle hint \u7ED3\u5408\u4F7F\u7528\uFF0C\u540C\u65F6\u63A7\u5236 join \u5206\u53D1\u65B9\u5F0F\uFF0C\u8FDB\u800C\u4F18\u5316\u67E5\u8BE2\u6027\u80FD\u3002\u6CE8\u610F\u8FD9\u79CD\u9AD8\u7EA7\u7279\u6027\uFF0C\u5E94\u5F53\u5728\u5145\u5206\u7406\u89E3\u67E5\u8BE2\u7279\u6027\u53CA\u6570\u636E\u5206\u5E03\u7684\u57FA\u7840\u4E0A\u8C28\u614E\u4F7F\u7528\u3002"})]})}function d(n={}){let{wrapper:i}={...(0,s.a)(),...n.components};return i?(0,a.jsx)(i,{...n,children:(0,a.jsx)(h,{...n})}):h(n)}},250065:function(n,i,e){e.d(i,{Z:function(){return c},a:function(){return l}});var t=e(667294);let a={},s=t.createContext(a);function l(n){let i=t.useContext(s);return t.useMemo(function(){return"function"==typeof n?n(i):{...i,...n}},[i,n])}function c(n){let i;return i=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:l(n.components),t.createElement(s.Provider,{value:i},n.children)}}}]);