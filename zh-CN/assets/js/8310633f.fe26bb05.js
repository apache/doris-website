"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["498652"],{326917:function(e,a,c){c.r(a),c.d(a,{default:()=>o,frontMatter:()=>i,metadata:()=>r,assets:()=>s,toc:()=>t,contentTitle:()=>d});var r=JSON.parse('{"id":"admin-manual/memory-management/memory-limit-exceeded-analysis","title":"\u5185\u5B58\u8D85\u9650\u9519\u8BEF\u5206\u6790","description":"\u5F53\u67E5\u8BE2\u6216\u5BFC\u5165\u62A5\u9519Memory limit exceeded\u65F6\uFF0C\u53EF\u80FD\u7684\u539F\u56E0\uFF1A\u8FDB\u7A0B\u5185\u5B58\u8D85\u9650\u3001\u7CFB\u7EDF\u5269\u4F59\u53EF\u7528\u5185\u5B58\u4E0D\u8DB3\u3001\u8D85\u8FC7\u5355\u6B21\u67E5\u8BE2\u6267\u884C\u7684\u5185\u5B58\u4E0A\u9650\u3002","source":"@site/i18n/zh-CN/docusaurus-plugin-content-docs/version-2.0/admin-manual/memory-management/memory-limit-exceeded-analysis.md","sourceDirName":"admin-manual/memory-management","slug":"/admin-manual/memory-management/memory-limit-exceeded-analysis","permalink":"/zh-CN/docs/2.0/admin-manual/memory-management/memory-limit-exceeded-analysis","draft":false,"unlisted":false,"tags":[],"version":"2.0","frontMatter":{"title":"\u5185\u5B58\u8D85\u9650\u9519\u8BEF\u5206\u6790","language":"zh-CN"},"sidebar":"docs","previous":{"title":"\u5185\u5B58\u8DDF\u8E2A\u5668","permalink":"/zh-CN/docs/2.0/admin-manual/memory-management/memory-tracker"},"next":{"title":"BE OOM \u5206\u6790","permalink":"/zh-CN/docs/2.0/admin-manual/memory-management/be-oom-analysis"}}'),n=c("785893"),l=c("250065");let i={title:"\u5185\u5B58\u8D85\u9650\u9519\u8BEF\u5206\u6790",language:"zh-CN"},d=void 0,s={},t=[{value:"\u8FDB\u7A0B\u5185\u5B58\u8D85\u9650 OR \u7CFB\u7EDF\u5269\u4F59\u53EF\u7528\u5185\u5B58\u4E0D\u8DB3",id:"\u8FDB\u7A0B\u5185\u5B58\u8D85\u9650-or-\u7CFB\u7EDF\u5269\u4F59\u53EF\u7528\u5185\u5B58\u4E0D\u8DB3",level:2},{value:"\u9519\u8BEF\u4FE1\u606F\u5206\u6790",id:"\u9519\u8BEF\u4FE1\u606F\u5206\u6790",level:3},{value:"\u65E5\u5FD7\u5206\u6790",id:"\u65E5\u5FD7\u5206\u6790",level:3},{value:"\u7CFB\u7EDF\u5269\u4F59\u53EF\u7528\u5185\u5B58\u8BA1\u7B97",id:"\u7CFB\u7EDF\u5269\u4F59\u53EF\u7528\u5185\u5B58\u8BA1\u7B97",level:3},{value:"\u67E5\u8BE2\u6216\u5BFC\u5165\u5355\u6B21\u6267\u884C\u5185\u5B58\u8D85\u9650",id:"\u67E5\u8BE2\u6216\u5BFC\u5165\u5355\u6B21\u6267\u884C\u5185\u5B58\u8D85\u9650",level:2},{value:"\u9519\u8BEF\u4FE1\u606F\u5206\u6790",id:"\u9519\u8BEF\u4FE1\u606F\u5206\u6790-1",level:3},{value:"\u65E5\u5FD7\u5206\u6790",id:"\u65E5\u5FD7\u5206\u6790-1",level:3}];function m(e){let a={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,l.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a.p,{children:["\u5F53\u67E5\u8BE2\u6216\u5BFC\u5165\u62A5\u9519",(0,n.jsx)(a.code,{children:"Memory limit exceeded"}),"\u65F6\uFF0C\u53EF\u80FD\u7684\u539F\u56E0\uFF1A\u8FDB\u7A0B\u5185\u5B58\u8D85\u9650\u3001\u7CFB\u7EDF\u5269\u4F59\u53EF\u7528\u5185\u5B58\u4E0D\u8DB3\u3001\u8D85\u8FC7\u5355\u6B21\u67E5\u8BE2\u6267\u884C\u7684\u5185\u5B58\u4E0A\u9650\u3002"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-shell",children:"ERROR 1105 (HY000): errCode = 2, detailMessage = Memory limit exceeded:<consuming tracker:<xxx>, xxx. backend 172.1.1.1 process memory used xxx GB, limit xxx GB. If query tracker exceed, `set exec_mem_limit=8G` to change limit, details mem usage see be.INFO.\n"})}),"\n",(0,n.jsx)(a.admonition,{type:"note",children:(0,n.jsx)(a.p,{children:"\u81EA Doris 1.2 \u7248\u672C\u5F00\u59CB\u652F\u6301\u8BE5\u529F\u80FD"})}),"\n",(0,n.jsxs)(a.p,{children:["\u6709\u5173\u5185\u5B58\u7BA1\u7406\u7684\u66F4\u591A\u4ECB\u7ECD\u53C2\u8003\u6587\u6863\uFF1A",(0,n.jsx)(a.a,{href:"https://doris.apache.org/blog/Say-Goodbye-to-OOM-Crashes/",children:"Say-Goodbye-to-OOM-Crashes-en"}),"\uFF0C ",(0,n.jsx)(a.a,{href:"https://mp.weixin.qq.com/s/Z5N-uZrFE3Qhn5zTyEDomQ",children:"Say-Goodbye-to-OOM-Crashes-zh-CN"})]}),"\n",(0,n.jsx)(a.h2,{id:"\u8FDB\u7A0B\u5185\u5B58\u8D85\u9650-or-\u7CFB\u7EDF\u5269\u4F59\u53EF\u7528\u5185\u5B58\u4E0D\u8DB3",children:"\u8FDB\u7A0B\u5185\u5B58\u8D85\u9650 OR \u7CFB\u7EDF\u5269\u4F59\u53EF\u7528\u5185\u5B58\u4E0D\u8DB3"}),"\n",(0,n.jsx)(a.p,{children:"\u5F53\u8FD4\u56DE\u5982\u4E0B\u62A5\u9519\u65F6\uFF0C\u8BF4\u660E\u8FDB\u7A0B\u5185\u5B58\u8D85\u9650\uFF0C\u6216\u8005\u7CFB\u7EDF\u5269\u4F59\u53EF\u7528\u5185\u5B58\u4E0D\u8DB3\uFF0C\u5177\u4F53\u539F\u56E0\u770B\u5185\u5B58\u7EDF\u8BA1\u503C\u3002"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:"ERROR 1105 (HY000): errCode = 2, detailMessage = Memory limit exceeded:<consuming tracker:<Query#Id=3c88608cf35c461d-95fe88969aa6fc30>, process memory used 2.68 GB exceed limit 2.47 GB or sys mem available 50.95 GB less than low water mark 3.20 GB, failed alloc size 2.00 MB>, executing msg:<execute:<ExecNode:VAGGREGATION_NODE (id=7)>>. backend 172.1.1.1 process memory used 2.68 GB, limit 2.47 GB. If query tracker exceed, `set exec_mem_limit=8G` to change limit, details mem usage see be.INFO\n"})}),"\n",(0,n.jsx)(a.h3,{id:"\u9519\u8BEF\u4FE1\u606F\u5206\u6790",children:"\u9519\u8BEF\u4FE1\u606F\u5206\u6790"}),"\n",(0,n.jsx)(a.p,{children:"\u9519\u8BEF\u4FE1\u606F\u5206\u4E3A\u4E09\u90E8\u5206\uFF1A"}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"Memory limit exceeded:<consuming tracker:<Query#Id=3c88608cf35c461d-95fe88969aa6fc30>"}),"\uFF1A\u5F53\u524D\u6B63\u5728\u6267\u884C query ",(0,n.jsx)(a.code,{children:"3c88608cf35c461d-95fe88969aa6fc30"}),"\u7684\u5185\u5B58\u7533\u8BF7\u8FC7\u7A0B\u4E2D\u53D1\u73B0\u5185\u5B58\u8D85\u9650\u3002"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"process memory used 2.68 GB exceed limit 2.47 GB or sys mem available 50.95 GB less than low water mark 3.20 GB, failed alloc size 2.00 MB"}),"\uFF1A\u8D85\u9650\u7684\u539F\u56E0\u662F BE \u8FDB\u7A0B\u4F7F\u7528\u7684\u5185\u5B58 2.68GB \u8D85\u8FC7\u4E86 2.47GB \u7684 limit\uFF0Climit \u7684\u503C\u6765\u81EA be.conf \u4E2D\u7684 mem_limit * system MemTotal\uFF0C\u9ED8\u8BA4\u7B49\u4E8E\u64CD\u4F5C\u7CFB\u7EDF\u603B\u5185\u5B58\u7684 80%\uFF0C\u5F53\u524D\u64CD\u4F5C\u7CFB\u7EDF\u5269\u4F59\u53EF\u7528\u5185\u5B58 50.95 GB \u4ECD\u9AD8\u4E8E\u6700\u4F4E\u6C34\u4F4D 3.2GB\uFF0C\u672C\u6B21\u5C1D\u8BD5\u7533\u8BF7 2MB \u7684\u5185\u5B58\u3002"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"executing msg:<execute:<ExecNode:VAGGREGATION_NODE (id=7)>>, backend 172.24.47.117 process memory used 2.68 GB, limit 2.47 GB"}),"\uFF1A\u672C\u6B21\u5185\u5B58\u7533\u8BF7\u7684\u4F4D\u7F6E\u662F",(0,n.jsx)(a.code,{children:"ExecNode:VAGGREGATION_NODE (id=7)>"}),"\uFF0C\u5F53\u524D BE \u8282\u70B9\u7684 IP \u662F 172.1.1.1\uFF0C\u4EE5\u53CA\u518D\u6B21\u6253\u5370 BE \u8282\u70B9\u7684\u5185\u5B58\u7EDF\u8BA1\u3002"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(a.h3,{id:"\u65E5\u5FD7\u5206\u6790",children:"\u65E5\u5FD7\u5206\u6790"}),"\n",(0,n.jsx)(a.p,{children:"\u540C\u65F6\u53EF\u4EE5\u5728 log/be.INFO \u4E2D\u627E\u5230\u5982\u4E0B\u65E5\u5FD7\uFF0C\u786E\u8BA4\u5F53\u524D\u8FDB\u7A0B\u5185\u5B58\u4F7F\u7528\u662F\u5426\u7B26\u5408\u9884\u671F\uFF0C\u65E5\u5FD7\u540C\u6837\u5206\u4E3A\u4E09\u90E8\u5206\uFF1A"}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"Process Memory Summary"}),"\uFF1A\u8FDB\u7A0B\u5185\u5B58\u7EDF\u8BA1\u3002"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"Alloc Stacktrace"}),"\uFF1A\u89E6\u53D1\u5185\u5B58\u8D85\u9650\u68C0\u6D4B\u7684\u6808\uFF0C\u8FD9\u4E0D\u4E00\u5B9A\u662F\u5927\u5185\u5B58\u7533\u8BF7\u7684\u4F4D\u7F6E\u3002"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"Memory Tracker Summary"}),"\uFF1A\u8FDB\u7A0B memory tracker \u7EDF\u8BA1\uFF0C\u53C2\u8003 ",(0,n.jsx)(a.a,{href:"/zh-CN/docs/2.0/admin-manual/memory-management/memory-tracker",children:"Memory Tracker"})," \u5206\u6790\u4F7F\u7528\u5185\u5B58\u7684\u4F4D\u7F6E\u3002"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(a.admonition,{type:"caution",children:[(0,n.jsx)(a.p,{children:"\u6CE8\u610F\uFF1A"}),(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:["\u8FDB\u7A0B\u5185\u5B58\u8D85\u9650\u65E5\u5FD7\u7684\u6253\u5370\u95F4\u9694\u662F 1s\uFF0C\u8FDB\u7A0B\u5185\u5B58\u8D85\u9650\u540E\uFF0CBE \u5927\u591A\u6570\u4F4D\u7F6E\u7684\u5185\u5B58\u7533\u8BF7\u90FD\u4F1A\u611F\u77E5\uFF0C\u5E76\u5C1D\u8BD5\u505A\u51FA\u9884\u5B9A\u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u5E76\u6253\u5370\u8FDB\u7A0B\u5185\u5B58\u8D85\u9650\u65E5\u5FD7\uFF0C\u6240\u4EE5\u5982\u679C\u65E5\u5FD7\u4E2D Try Alloc \u7684\u503C\u5F88\u5C0F\uFF0C\u5219\u65E0\u987B\u5173\u6CE8",(0,n.jsx)(a.code,{children:"Alloc Stacktrace"}),"\uFF0C\u76F4\u63A5\u5206\u6790",(0,n.jsx)(a.code,{children:"Memory Tracker Summary"}),"\u5373\u53EF\u3002"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsx)(a.p,{children:"\u5F53\u8FDB\u7A0B\u5185\u5B58\u8D85\u9650\u540E\uFF0CBE \u4F1A\u89E6\u53D1\u5185\u5B58 GC\u3002"}),"\n"]}),"\n"]})]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-shell",children:"W1127 17:23:16.372572 19896 mem_tracker_limiter.cpp:214] System Mem Exceed Limit Check Failed, Try Alloc: 1062688\nProcess Memory Summary:\n    process memory used 2.68 GB limit 2.47 GB, sys mem available 50.95 GB min reserve 3.20 GB, tc/jemalloc allocator cache 51.97 MB\nAlloc Stacktrace:\n    @          0x50028e8  doris::MemTrackerLimiter::try_consume()\n    @          0x50027c1  doris::ThreadMemTrackerMgr::flush_untracked_mem<>()\n    @          0x595f234  malloc\n    @          0xb888c18  operator new()\n    @          0x8f316a2  google::LogMessage::Init()\n    @          0x5813fef  doris::FragmentExecState::coordinator_callback()\n    @          0x58383dc  doris::PlanFragmentExecutor::send_report()\n    @          0x5837ea8  doris::PlanFragmentExecutor::update_status()\n    @          0x58355b0  doris::PlanFragmentExecutor::open()\n    @          0x5815244  doris::FragmentExecState::execute()\n    @          0x5817965  doris::FragmentMgr::_exec_actual()\n    @          0x581fffb  std::_Function_handler<>::_M_invoke()\n    @          0x5a6f2c1  doris::ThreadPool::dispatch_thread()\n    @          0x5a6843f  doris::Thread::supervise_thread()\n    @     0x7feb54f931ca  start_thread\n    @     0x7feb5576add3  __GI___clone\n    @              (nil)  (unknown)\n\nMemory Tracker Summary:\n    Type=consistency, Used=0(0 B), Peak=0(0 B)\n    Type=batch_load, Used=0(0 B), Peak=0(0 B)\n    Type=clone, Used=0(0 B), Peak=0(0 B)\n    Type=schema_change, Used=0(0 B), Peak=0(0 B)\n    Type=compaction, Used=0(0 B), Peak=0(0 B)\n    Type=load, Used=0(0 B), Peak=0(0 B)\n    Type=query, Used=206.67 MB(216708729 B), Peak=565.26 MB(592723181 B)\n    Type=global, Used=930.42 MB(975614571 B), Peak=1017.42 MB(1066840223 B)\n    Type=tc/jemalloc_cache, Used=51.97 MB(54494616 B), Peak=-1.00 B(-1 B)\n    Type=process, Used=1.16 GB(1246817916 B), Peak=-1.00 B(-1 B)\n    MemTrackerLimiter Label=Orphan, Type=global, Limit=-1.00 B(-1 B), Used=474.20 MB(497233597 B), Peak=649.18 MB(680718208 B)\n    MemTracker Label=BufferAllocator, Parent Label=Orphan, Used=0(0 B), Peak=0(0 B)\n    MemTracker Label=LoadChannelMgr, Parent Label=Orphan, Used=0(0 B), Peak=0(0 B)\n    MemTracker Label=StorageEngine, Parent Label=Orphan, Used=320.56 MB(336132488 B), Peak=322.56 MB(338229824 B)\n    MemTracker Label=SegCompaction, Parent Label=Orphan, Used=0(0 B), Peak=0(0 B)\n    MemTracker Label=SegmentMeta, Parent Label=Orphan, Used=948.64 KB(971404 B), Peak=943.64 KB(966285 B)\n    MemTracker Label=TabletManager, Parent Label=Orphan, Used=0(0 B), Peak=0(0 B)\n    MemTrackerLimiter Label=DataPageCache, Type=global, Limit=-1.00 B(-1 B), Used=455.22 MB(477329882 B), Peak=454.18 MB(476244180 B)\n    MemTrackerLimiter Label=IndexPageCache, Type=global, Limit=-1.00 B(-1 B), Used=1.00 MB(1051092 B), Peak=0(0 B)\n    MemTrackerLimiter Label=SegmentCache, Type=global, Limit=-1.00 B(-1 B), Used=0(0 B), Peak=0(0 B)\n    MemTrackerLimiter Label=DiskIO, Type=global, Limit=2.47 GB(2655423201 B), Used=0(0 B), Peak=0(0 B)\n    MemTrackerLimiter Label=ChunkAllocator, Type=global, Limit=-1.00 B(-1 B), Used=0(0 B), Peak=0(0 B)\n    MemTrackerLimiter Label=LastestSuccessChannelCache, Type=global, Limit=-1.00 B(-1 B), Used=0(0 B), Peak=0(0 B)\n    MemTrackerLimiter Label=DeleteBitmap AggCache, Type=global, Limit=-1.00 B(-1 B), Used=0(0 B), Peak=0(0 B)\n"})}),"\n",(0,n.jsx)(a.h3,{id:"\u7CFB\u7EDF\u5269\u4F59\u53EF\u7528\u5185\u5B58\u8BA1\u7B97",children:"\u7CFB\u7EDF\u5269\u4F59\u53EF\u7528\u5185\u5B58\u8BA1\u7B97"}),"\n",(0,n.jsxs)(a.p,{children:["\u5F53\u9519\u8BEF\u4FE1\u606F\u4E2D\u7CFB\u7EDF\u53EF\u7528\u5185\u5B58\u5C0F\u4E8E\u4F4E\u6C34\u4F4D\u7EBF\u65F6\uFF0C\u540C\u6837\u5F53\u4F5C\u8FDB\u7A0B\u5185\u5B58\u8D85\u9650\u5904\u7406\uFF0C\u5176\u4E2D\u7CFB\u7EDF\u53EF\u7528\u5185\u5B58\u7684\u503C\u6765\u81EA\u4E8E",(0,n.jsx)(a.code,{children:"/proc/meminfo"}),"\u4E2D\u7684",(0,n.jsx)(a.code,{children:"MemAvailable"}),"\uFF0C\u5F53",(0,n.jsx)(a.code,{children:"MemAvailable"}),"\u4E0D\u8DB3\u65F6\u7EE7\u7EED\u5185\u5B58\u7533\u8BF7\u53EF\u80FD\u8FD4\u56DE std::bad_alloc \u6216\u8005\u5BFC\u81F4 BE \u8FDB\u7A0B OOM\uFF0C\u56E0\u4E3A\u5237\u65B0\u8FDB\u7A0B\u5185\u5B58\u7EDF\u8BA1\u548C BE \u5185\u5B58 GC \u90FD\u5177\u6709\u4E00\u5B9A\u7684\u6EDE\u540E\u6027\uFF0C\u6240\u4EE5\u9884\u7559\u5C0F\u90E8\u5206\u5185\u5B58 buffer \u4F5C\u4E3A\u4F4E\u6C34\u4F4D\u7EBF\uFF0C\u5C3D\u53EF\u80FD\u907F\u514D OOM\u3002"]}),"\n",(0,n.jsxs)(a.p,{children:["\u5176\u4E2D",(0,n.jsx)(a.code,{children:"MemAvailable"}),"\u662F\u64CD\u4F5C\u7CFB\u7EDF\u7EFC\u5408\u8003\u8651\u5F53\u524D\u7A7A\u95F2\u7684\u5185\u5B58\u3001buffer\u3001cache\u3001\u5185\u5B58\u788E\u7247\u7B49\u56E0\u7D20\u7ED9\u51FA\u7684\u4E00\u4E2A\u5728\u5C3D\u53EF\u80FD\u4E0D\u89E6\u53D1 swap \u7684\u60C5\u51B5\u4E0B\u53EF\u4EE5\u63D0\u4F9B\u7ED9\u7528\u6237\u8FDB\u7A0B\u4F7F\u7528\u7684\u5185\u5B58\u603B\u91CF\uFF0C\u4E00\u4E2A\u7B80\u5355\u7684\u8BA1\u7B97\u516C\u5F0F\uFF1AMemAvailable = MemFree - LowWaterMark + (PageCache - min(PageCache / 2, LowWaterMark))\uFF0C\u548C cmd ",(0,n.jsx)(a.code,{children:"free"}),"\u770B\u5230\u7684",(0,n.jsx)(a.code,{children:"available"}),"\u503C\u76F8\u540C\uFF0C\u5177\u4F53\u53EF\u53C2\u8003\uFF1A\n",(0,n.jsx)(a.a,{href:"https://serverfault.com/questions/940196/why-is-memavailable-a-lot-less-than-memfreebufferscached",children:"https://serverfault.com/questions/940196/why-is-memavailable-a-lot-less-than-memfreebufferscached"}),"\n",(0,n.jsx)(a.a,{href:"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=34e431b0ae398fc54ea69ff85ec700722c9da773",children:"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=34e431b0ae398fc54ea69ff85ec700722c9da773"})]}),"\n",(0,n.jsxs)(a.p,{children:["\u4F4E\u6C34\u4F4D\u7EBF\u9ED8\u8BA4\u6700\u5927 1.6G\uFF0C\u6839\u636E",(0,n.jsx)(a.code,{children:"MemTotal"}),"\u3001",(0,n.jsx)(a.code,{children:"vm/min_free_kbytes"}),"\u3001",(0,n.jsx)(a.code,{children:"confg::mem_limit"}),"\u3001",(0,n.jsx)(a.code,{children:"config::max_sys_mem_available_low_water_mark_bytes"}),"\u5171\u540C\u7B97\u51FA\uFF0C\u5E76\u907F\u514D\u6D6A\u8D39\u8FC7\u591A\u5185\u5B58\u3002\u5176\u4E2D",(0,n.jsx)(a.code,{children:"MemTotal"}),"\u662F\u7CFB\u7EDF\u603B\u5185\u5B58\uFF0C\u53D6\u503C\u540C\u6837\u6765\u81EA",(0,n.jsx)(a.code,{children:"/proc/meminfo"}),"\uFF1B",(0,n.jsx)(a.code,{children:"vm/min_free_kbytes"}),"\u662F\u64CD\u4F5C\u7CFB\u7EDF\u7ED9\u5185\u5B58 GC \u8FC7\u7A0B\u9884\u7559\u7684 buffer\uFF0C\u53D6\u503C\u901A\u5E38\u5728 0.4% \u5230 5% \u4E4B\u95F4\uFF0C\u67D0\u4E9B\u4E91\u670D\u52A1\u5668\u4E0A",(0,n.jsx)(a.code,{children:"vm/min_free_kbytes"}),"\u53EF\u80FD\u4E3A 5%\uFF0C\u8FD9\u4F1A\u5BFC\u81F4\u76F4\u89C2\u4E0A\u7CFB\u7EDF\u53EF\u7528\u5185\u5B58\u6BD4\u771F\u5B9E\u503C\u5C11\uFF1B\u8C03\u5927",(0,n.jsx)(a.code,{children:"config::max_sys_mem_available_low_water_mark_bytes"}),"\u5C06\u5728\u5927\u4E8E 16G \u5185\u5B58\u7684\u673A\u5668\u4E0A\uFF0C\u4E3A Full GC \u9884\u7559\u66F4\u591A\u7684\u5185\u5B58 buffer\uFF0C\u53CD\u4E4B\u8C03\u5C0F\u5C06\u5C3D\u53EF\u80FD\u5145\u5206\u4F7F\u7528\u5185\u5B58\u3002"]}),"\n",(0,n.jsx)(a.h2,{id:"\u67E5\u8BE2\u6216\u5BFC\u5165\u5355\u6B21\u6267\u884C\u5185\u5B58\u8D85\u9650",children:"\u67E5\u8BE2\u6216\u5BFC\u5165\u5355\u6B21\u6267\u884C\u5185\u5B58\u8D85\u9650"}),"\n",(0,n.jsx)(a.p,{children:"\u5F53\u8FD4\u56DE\u5982\u4E0B\u62A5\u9519\u65F6\uFF0C\u8BF4\u660E\u8D85\u8FC7\u5355\u6B21\u6267\u884C\u5185\u5B58\u9650\u5236\u3002"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-shell",children:"ERROR 1105 (HY000): errCode = 2, detailMessage = Memory limit exceeded:<consuming tracker:<Query#Id=f78208b15e064527-a84c5c0b04c04fcf>, failed alloc size 1.03 MB, exceeded tracker:<Query#Id=f78208b15e064527-a84c5c0b04c04fcf>, limit 100.00 MB, peak used 99.29 MB, current used 99.25 MB>, executing msg:<execute:<ExecNode:VHASH_JOIN_NODE (id=4)>>. backend 172.24.47.117 process memory used 1.13 GB, limit 98.92 GB. If query tracker exceed, `set exec_mem_limit=8G` to change limit, details mem usage see log/be.INFO.\n"})}),"\n",(0,n.jsx)(a.h3,{id:"\u9519\u8BEF\u4FE1\u606F\u5206\u6790-1",children:"\u9519\u8BEF\u4FE1\u606F\u5206\u6790"}),"\n",(0,n.jsx)(a.p,{children:"\u9519\u8BEF\u4FE1\u606F\u5206\u4E3A\u4E09\u90E8\u5206\uFF1A"}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"Memory limit exceeded:<consuming tracker:<Query#Id=f78208b15e064527-a84c5c0b04c04fcf>"}),"\uFF1A\u5F53\u524D\u6B63\u5728\u6267\u884C query ",(0,n.jsx)(a.code,{children:"f78208b15e064527-a84c5c0b04c04fcf"}),"\u7684\u5185\u5B58\u7533\u8BF7\u8FC7\u7A0B\u4E2D\u53D1\u73B0\u5185\u5B58\u8D85\u9650\u3002"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"failed alloc size 1.03 MB, exceeded tracker:<Query#Id=f78208b15e064527-a84c5c0b04c04fcf>, limit 100.00 MB, peak used 99.29 MB, current used 99.25 MB"}),"\uFF1A\u672C\u6B21\u5C1D\u8BD5\u7533\u8BF7 1.03MB \u7684\u5185\u5B58\uFF0C\u4F46\u6B64\u65F6 query ",(0,n.jsx)(a.code,{children:"f78208b15e064527-a84c5c0b04c04fcf"})," memory tracker \u7684\u5F53\u524D consumption \u4E3A 99.28MB \u52A0\u4E0A 1.03MB \u540E\u8D85\u8FC7\u4E86 100MB \u7684 limit\uFF0Climit \u7684\u503C\u6765\u81EA session variables \u4E2D\u7684 ",(0,n.jsx)(a.code,{children:"exec_mem_limit"}),"\uFF0C\u9ED8\u8BA4 4G\u3002"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"executing msg:<execute:<ExecNode:VHASH_JOIN_NODE (id=4)>>. backend 172.24.47.117 process memory used 1.13 GB, limit 98.92 GB. If query tracker exceed, "}),"set exec_mem_limit=8G",(0,n.jsx)(a.code,{children:" to change limit, details mem usage see be.INFO."}),"\uFF1A\u672C\u6B21\u5185\u5B58\u7533\u8BF7\u7684\u4F4D\u7F6E\u662F",(0,n.jsx)(a.code,{children:"VHASH_JOIN_NODE (id=4)"}),"\uFF0C\u5E76\u63D0\u793A\u53EF\u901A\u8FC7 ",(0,n.jsx)(a.code,{children:"set exec_mem_limit"})," \u6765\u8C03\u9AD8\u5355\u6B21\u67E5\u8BE2\u7684\u5185\u5B58\u4E0A\u9650\u3002"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(a.h3,{id:"\u65E5\u5FD7\u5206\u6790-1",children:"\u65E5\u5FD7\u5206\u6790"}),"\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"set global enable_profile=true"}),"\u540E\uFF0C\u53EF\u4EE5\u5728\u5355\u6B21\u67E5\u8BE2\u5185\u5B58\u8D85\u9650\u65F6\uFF0C\u5728 log/be.INFO \u4E2D\u6253\u5370\u65E5\u5FD7\uFF0C\u7528\u4E8E\u786E\u8BA4\u5F53\u524D\u67E5\u8BE2\u5185\u5B58\u4F7F\u7528\u662F\u5426\u7B26\u5408\u9884\u671F\u3002\n\u540C\u65F6\u53EF\u4EE5\u5728 log/be.INFO \u4E2D\u627E\u5230\u5982\u4E0B\u65E5\u5FD7\uFF0C\u786E\u8BA4\u5F53\u524D\u67E5\u8BE2\u5185\u5B58\u4F7F\u7528\u662F\u5426\u7B26\u5408\u9884\u671F\uFF0C\u65E5\u5FD7\u540C\u6837\u5206\u4E3A\u4E09\u90E8\u5206\uFF1A"]}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"Process Memory Summary"}),"\uFF1A\u8FDB\u7A0B\u5185\u5B58\u7EDF\u8BA1\u3002"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"Alloc Stacktrace"}),"\uFF1A\u89E6\u53D1\u5185\u5B58\u8D85\u9650\u68C0\u6D4B\u7684\u6808\uFF0C\u8FD9\u4E0D\u4E00\u5B9A\u662F\u5927\u5185\u5B58\u7533\u8BF7\u7684\u4F4D\u7F6E\u3002"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"Memory Tracker Summary"}),"\uFF1A\u5F53\u524D\u67E5\u8BE2\u7684 memory tracker \u7EDF\u8BA1\uFF0C\u53EF\u4EE5\u770B\u5230\u67E5\u8BE2\u6BCF\u4E2A\u7B97\u5B50\u5F53\u524D\u4F7F\u7528\u7684\u5185\u5B58\u548C\u5CF0\u503C\uFF0C\u5177\u4F53\u53EF\u53C2\u8003 ",(0,n.jsx)(a.a,{href:"../memory-management/memory-tracker",children:"Memory Tracker"}),"\u3002\n\u6CE8\u610F\uFF1A\u4E00\u4E2A\u67E5\u8BE2\u5728\u5185\u5B58\u8D85\u9650\u540E\u53EA\u4F1A\u6253\u5370\u4E00\u6B21\u65E5\u5FD7\uFF0C\u6B64\u65F6\u67E5\u8BE2\u7684\u591A\u4E2A\u7EBF\u7A0B\u90FD\u4F1A\u611F\u77E5\uFF0C\u5E76\u5C1D\u8BD5\u7B49\u5F85\u5185\u5B58\u91CA\u653E\uFF0C\u6216\u8005 cancel \u5F53\u524D\u67E5\u8BE2\uFF0C\u5982\u679C\u65E5\u5FD7\u4E2D Try Alloc \u7684\u503C\u5F88\u5C0F\uFF0C\u5219\u65E0\u987B\u5173\u6CE8",(0,n.jsx)(a.code,{children:"Alloc Stacktrace"}),"\uFF0C\u76F4\u63A5\u5206\u6790",(0,n.jsx)(a.code,{children:"Memory Tracker Summary"}),"\u5373\u53EF\u3002"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-shell",children:"W1128 01:34:11.016165 357796 mem_tracker_limiter.cpp:191] Memory limit exceeded:<consuming tracker:<Query#Id=78208b15e064527-a84c5c0b04c04fcf>, failed alloc size 4.00 MB, exceeded tracker:<Query#Id=78208b15e064527-a84c5c0b04c04fcf>, limit 100.00 MB, peak used 98.59 MB,\ncurrent used 96.88 MB>, executing msg:<execute:<ExecNode:VHASH_JOIN_NODE (id=2)>>. backend 172.24.47.117 process memory used 1.13 GB, limit 98.92 GB. If query tracker exceed, `set exec_mem_limit=8G` to change limit, details mem usage see be.INFO.\nProcess Memory Summary:    \n    process memory used 1.13 GB limit 98.92 GB, sys mem available 45.15 GB min reserve 3.20 GB, tc/jemalloc allocator cache 27.62 MB\nAlloc Stacktrace:    \n    @          0x66cf73a  doris::vectorized::HashJoinNode::_materialize_build_side()\n    @          0x69cb1ee  doris::vectorized::VJoinNodeBase::open()\n    @          0x66ce27a  doris::vectorized::HashJoinNode::open()\n    @          0x5835dad  doris::PlanFragmentExecutor::open_vectorized_internal()\n    @          0x58351d2  doris::PlanFragmentExecutor::open()\n    @          0x5815244  doris::FragmentExecState::execute()\n    @          0x5817965  doris::FragmentMgr::_exec_actual()\n    @          0x581fffb  std::_Function_handler<>::_M_invoke()\n    @          0x5a6f2c1  doris::ThreadPool::dispatch_thread()\n    @          0x5a6843f  doris::Thread::supervise_thread()\n    @     0x7f6faa94a1ca  start_thread\n    @     0x7f6fab121dd3  __GI___clone\n    @              (nil)  (unknown)\n\nMemory Tracker Summary:\n    MemTrackerLimiter Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Type=query, Limit=100.00 MB(104857600 B), Used=64.75 MB(67891182 B), Peak=104.70 MB(109786406 B)\n    MemTracker Label=Scanner#QueryId=78208b15e064527-a84c5c0b04c04fcf, Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=0(0 B), Peak=0(0 B)\n    MemTracker Label=RuntimeFilterMgr, Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=2.09 KB(2144 B), Peak=0(0 B)\n    MemTracker Label=BufferedBlockMgr2, Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=0(0 B), Peak=0(0 B)\n    MemTracker Label=ExecNode:VHASH_JOIN_NODE (id=2), Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=-61.44 MB(-64426656 B), Peak=290.33 KB(297296 B)\n    MemTracker Label=ExecNode:VEXCHANGE_NODE (id=9), Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=6.12 KB(6264 B), Peak=5.84 KB(5976 B)\n    MemTracker Label=VDataStreamRecvr:78208b15e064527-a84c5c0b04c04fd2, Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=6.12 KB(6264 B), Peak=5.84 KB(5976 B)\n    MemTracker Label=ExecNode:VEXCHANGE_NODE (id=10), Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=-41.20 MB(-43198024 B), Peak=1.46 MB(1535656 B)\n    MemTracker Label=VDataStreamRecvr:78208b15e064527-a84c5c0b04c04fd2, Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=-41.20 MB(-43198024 B), Peak=1.46 MB(1535656 B)\n    MemTracker Label=VDataStreamSender:78208b15e064527-a84c5c0b04c04fd2, Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=2.34 KB(2400 B), Peak=0(0 B)\n    MemTracker Label=Scanner#QueryId=78208b15e064527-a84c5c0b04c04fcf, Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=58.12 MB(60942224 B), Peak=57.41 MB(60202848 B)\n    MemTracker Label=RuntimeFilterMgr, Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=0(0 B), Peak=0(0 B)\n    MemTracker Label=BufferedBlockMgr2, Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=0(0 B), Peak=0(0 B)\n    MemTracker Label=ExecNode:VNewOlapScanNode(customer) (id=1), Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=9.55 MB(10013424 B), Peak=10.20 MB(10697136 B)\n    MemTracker Label=VDataStreamSender:78208b15e064527-a84c5c0b04c04fd1, Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=59.80 MB(62701880 B), Peak=59.16 MB(62033048 B)\n    MemTracker Label=Scanner#QueryId=78208b15e064527-a84c5c0b04c04fcf, Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=0(0 B), Peak=0(0 B)\n    MemTracker Label=RuntimeFilterMgr, Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=13.62 KB(13952 B), Peak=0(0 B)\n    MemTracker Label=BufferedBlockMgr2, Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=0(0 B), Peak=0(0 B)\n    MemTracker Label=ExecNode:VNewOlapScanNode(lineorder) (id=0), Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=6.03 MB(6318064 B), Peak=4.02 MB(4217664 B)\n    MemTracker Label=VDataStreamSender:78208b15e064527-a84c5c0b04c04fd0, Parent Label=Query#Id=78208b15e064527-a84c5c0b04c04fcf, Used=2.34 KB(2400 B), Peak=0(0 B)\n"})})]})}function o(e={}){let{wrapper:a}={...(0,l.a)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},250065:function(e,a,c){c.d(a,{Z:function(){return d},a:function(){return i}});var r=c(667294);let n={},l=r.createContext(n);function i(e){let a=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(l.Provider,{value:a},e.children)}}}]);