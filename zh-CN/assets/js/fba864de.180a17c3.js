"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["241318"],{356899:function(n,e,l){l.r(e),l.d(e,{default:()=>A,frontMatter:()=>i,metadata:()=>s,assets:()=>t,toc:()=>c,contentTitle:()=>d});var s=JSON.parse('{"id":"sql-manual/basic-element/sql-data-types/conversion/json-conversion","title":"\u8F6C\u6362\u4E3A/\u4ECE JSON \u7C7B\u578B","description":"Doris \u4E2D\u7684 JSON \u7C7B\u578B\u91C7\u7528\u4E8C\u8FDB\u5236\u7F16\u7801\u5B58\u50A8\uFF0C\u800C\u4E0D\u662F\u6587\u672C\u5B58\u50A8\uFF0C\u63D0\u4F9B\u66F4\u9AD8\u6548\u7684\u5904\u7406\u548C\u5B58\u50A8\u65B9\u5F0F\u3002JSON \u7C7B\u578B\u4E0E Doris \u5185\u90E8\u7C7B\u578B\u5B58\u5728\u4E00\u4E00\u5BF9\u5E94\u7684\u5173\u7CFB\u3002","source":"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/sql-manual/basic-element/sql-data-types/conversion/json-conversion.md","sourceDirName":"sql-manual/basic-element/sql-data-types/conversion","slug":"/sql-manual/basic-element/sql-data-types/conversion/json-conversion","permalink":"/zh-CN/docs/dev/sql-manual/basic-element/sql-data-types/conversion/json-conversion","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"\u8F6C\u6362\u4E3A/\u4ECE JSON \u7C7B\u578B","language":"zh-CN"},"sidebar":"docs","previous":{"title":"\u8F6C\u6362\u4E3A IP \u7C7B\u578B","permalink":"/zh-CN/docs/dev/sql-manual/basic-element/sql-data-types/conversion/ip-conversion"},"next":{"title":"\u8F6C\u6362\u4E3A MAP \u7C7B\u578B","permalink":"/zh-CN/docs/dev/sql-manual/basic-element/sql-data-types/conversion/map-conversion"}}'),S=l("785893"),r=l("250065");let i={title:"\u8F6C\u6362\u4E3A/\u4ECE JSON \u7C7B\u578B",language:"zh-CN"},d=void 0,t={},c=[{value:"\u8F6C\u6362\u4E3A JSON",id:"\u8F6C\u6362\u4E3A-json",level:2},{value:"FROM String",id:"from-string",level:3},{value:"\u5B57\u7B26\u4E32\u89E3\u6790\u89C4\u5219",id:"\u5B57\u7B26\u4E32\u89E3\u6790\u89C4\u5219",level:4},{value:"\u6570\u5B57\u89E3\u6790\u89C4\u5219",id:"\u6570\u5B57\u89E3\u6790\u89C4\u5219",level:4},{value:"\u9519\u8BEF\u5904\u7406",id:"\u9519\u8BEF\u5904\u7406",level:4},{value:"FROM \u5176\u4ED6 Doris \u7C7B\u578B",id:"from-\u5176\u4ED6-doris-\u7C7B\u578B",level:3},{value:"\u793A\u4F8B",id:"\u793A\u4F8B",level:4},{value:"\u4E0D\u76F4\u63A5\u652F\u6301\u7684\u7C7B\u578B",id:"\u4E0D\u76F4\u63A5\u652F\u6301\u7684\u7C7B\u578B",level:4},{value:"\u4ECE JSON \u8F6C\u6362",id:"\u4ECE-json-\u8F6C\u6362",level:2},{value:"TO Boolean",id:"to-boolean",level:3},{value:"TO \u6570\u503C\u7C7B\u578B",id:"to-\u6570\u503C\u7C7B\u578B",level:3},{value:"TO String",id:"to-string",level:3},{value:"TO Array",id:"to-array",level:3},{value:"TO Struct",id:"to-struct",level:3},{value:"JSON Null \u5904\u7406",id:"json-null-\u5904\u7406",level:3},{value:"\u7C7B\u578B\u8F6C\u6362\u603B\u7ED3\u8868",id:"\u7C7B\u578B\u8F6C\u6362\u603B\u7ED3\u8868",level:2},{value:"keywords",id:"keywords",level:3}];function T(n){let e={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...n.components};return(0,S.jsxs)(S.Fragment,{children:[(0,S.jsx)(e.p,{children:"Doris \u4E2D\u7684 JSON \u7C7B\u578B\u91C7\u7528\u4E8C\u8FDB\u5236\u7F16\u7801\u5B58\u50A8\uFF0C\u800C\u4E0D\u662F\u6587\u672C\u5B58\u50A8\uFF0C\u63D0\u4F9B\u66F4\u9AD8\u6548\u7684\u5904\u7406\u548C\u5B58\u50A8\u65B9\u5F0F\u3002JSON \u7C7B\u578B\u4E0E Doris \u5185\u90E8\u7C7B\u578B\u5B58\u5728\u4E00\u4E00\u5BF9\u5E94\u7684\u5173\u7CFB\u3002"}),"\n",(0,S.jsx)(e.h2,{id:"\u8F6C\u6362\u4E3A-json",children:"\u8F6C\u6362\u4E3A JSON"}),"\n",(0,S.jsx)(e.h3,{id:"from-string",children:"FROM String"}),"\n",(0,S.jsxs)(e.p,{children:["\u5F53\u5C06\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A JSON \u65F6\uFF0C\u5B57\u7B26\u4E32\u5185\u5BB9\u5FC5\u987B\u7B26\u5408 ",(0,S.jsx)(e.a,{href:"https://datatracker.ietf.org/doc/html/rfc7159",children:"RFC7159"})," \u5B9A\u4E49\u7684\u6709\u6548 JSON \u8BED\u6CD5\u3002\u89E3\u6790\u5668\u4F1A\u9A8C\u8BC1\u5B57\u7B26\u4E32\u5E76\u5C06\u5176\u8F6C\u6362\u4E3A\u76F8\u5E94\u7684 JSON \u4E8C\u8FDB\u5236\u683C\u5F0F\u3002"]}),"\n",(0,S.jsx)(e.h4,{id:"\u5B57\u7B26\u4E32\u89E3\u6790\u89C4\u5219",children:"\u5B57\u7B26\u4E32\u89E3\u6790\u89C4\u5219"}),"\n",(0,S.jsxs)(e.ul,{children:["\n",(0,S.jsxs)(e.li,{children:["\n",(0,S.jsx)(e.p,{children:"\u5982\u679C\u5B57\u7B26\u4E32\u5305\u542B\u6709\u6548\u7684 JSON \u7ED3\u6784\uFF08\u5BF9\u8C61\u3001\u6570\u7EC4\u3001\u6570\u5B57\u3001\u5E03\u5C14\u503C\u6216 null\uFF09\uFF0C\u5C06\u89E3\u6790\u4E3A\u5BF9\u5E94\u7684 JSON \u7C7B\u578B\uFF1A"}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:"mysql> SELECT CAST('[1,2,3,4]' AS JSON); -- \u8F93\u51FA\uFF1A[1,2,3,4]\uFF08\u89E3\u6790\u4E3A JSON \u6570\u7EC4\uFF09\n+---------------------------+\n| CAST('[1,2,3,4]' AS JSON) |\n+---------------------------+\n| [1,2,3,4]                 |\n+---------------------------+\n"})}),"\n"]}),"\n",(0,S.jsxs)(e.li,{children:["\n",(0,S.jsxs)(e.p,{children:["\u8981\u521B\u5EFA JSON \u5B57\u7B26\u4E32\u503C\uFF08\u5C06\u5B57\u7B26\u4E32\u672C\u8EAB\u89C6\u4E3A JSON \u5B57\u7B26\u4E32\u503C\u800C\u4E0D\u662F\u89E3\u6790\u5B83\uFF09\uFF0C\u8BF7\u4F7F\u7528 ",(0,S.jsx)(e.code,{children:"TO_JSON"})," \u51FD\u6570\uFF1A"]}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:"mysql> SELECT TO_JSON('[1,2,3,4]'); -- \u8F93\u51FA\uFF1A\"[1,2,3,4]\"\uFF08\u5E26\u5F15\u53F7\u7684 JSON \u5B57\u7B26\u4E32\uFF09\n+----------------------+\n| TO_JSON('[1,2,3,4]') |\n+----------------------+\n| \"[1,2,3,4]\"          |\n+----------------------+\n"})}),"\n"]}),"\n"]}),"\n",(0,S.jsx)(e.h4,{id:"\u6570\u5B57\u89E3\u6790\u89C4\u5219",children:"\u6570\u5B57\u89E3\u6790\u89C4\u5219"}),"\n",(0,S.jsx)(e.p,{children:"\u4ECE JSON \u5B57\u7B26\u4E32\u89E3\u6790\u6570\u503C\u65F6\uFF1A"}),"\n",(0,S.jsxs)(e.ul,{children:["\n",(0,S.jsxs)(e.li,{children:["\n",(0,S.jsx)(e.p,{children:"\u5982\u679C\u6570\u5B57\u5305\u542B\u5C0F\u6570\u70B9\uFF0C\u5C06\u8F6C\u6362\u4E3A JSON Double \u7C7B\u578B\uFF1A"}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:"mysql> SELECT JSON_TYPE(CAST('{\"key\":123.45}' AS JSON), '$.key');\n+------------------------------------------------------+\n| JSON_TYPE(CAST('{\"key\":123.45}' AS JSON), '$.key')   |\n+------------------------------------------------------+\n| double                                               |\n+------------------------------------------------------+\n"})}),"\n"]}),"\n",(0,S.jsxs)(e.li,{children:["\n",(0,S.jsx)(e.p,{children:"\u5982\u679C\u6570\u5B57\u662F\u6574\u6570\u5F62\u5F0F\uFF0C\u5C06\u5B58\u50A8\u4E3A\u6700\u5C0F\u517C\u5BB9\u6574\u6570\u7C7B\u578B\uFF1A"}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:"mysql> SELECT JSON_TYPE(CAST('{\"key\":123456789}' AS JSON), '$.key');\n+---------------------------------------------------------+\n| JSON_TYPE(CAST('{\"key\":123456789}' AS JSON), '$.key')   |\n+---------------------------------------------------------+\n| int                                                     |\n+---------------------------------------------------------+\n"})}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:"mysql> SELECT JSON_TYPE(CAST('{\"key\":1234567891234}' AS JSON), '$.key');\n+-------------------------------------------------------------+\n| JSON_TYPE(CAST('{\"key\":1234567891234}' AS JSON), '$.key')   |\n+-------------------------------------------------------------+\n| bigint                                                      |\n+-------------------------------------------------------------+\n"})}),"\n"]}),"\n",(0,S.jsxs)(e.li,{children:["\n",(0,S.jsx)(e.p,{children:"\u7279\u522B\u5730\uFF0C\u5982\u679C\u6574\u6570\u8D85\u51FA Int128 \u8303\u56F4\uFF0C\u4F1A\u4F7F\u7528 double \u7C7B\u578B\u5B58\u50A8\uFF0C\u8FD9\u65F6\u4F1A\u4E22\u5931\u7CBE\u5EA6\uFF1A"}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:"mysql> SELECT JSON_TYPE(CAST('{\"key\":12345678901234567890123456789012345678901234567890}' AS JSON), '$.key');\n+--------------------------------------------------------------------------------------------------+\n| JSON_TYPE(CAST('{\"key\":12345678901234567890123456789012345678901234567890}' AS JSON), '$.key')   |\n+--------------------------------------------------------------------------------------------------+\n| double                                                                                           |\n+--------------------------------------------------------------------------------------------------+\n"})}),"\n"]}),"\n"]}),"\n",(0,S.jsx)(e.h4,{id:"\u9519\u8BEF\u5904\u7406",children:"\u9519\u8BEF\u5904\u7406"}),"\n",(0,S.jsx)(e.p,{children:"\u5C06\u5B57\u7B26\u4E32\u89E3\u6790\u4E3A JSON \u65F6\uFF1A"}),"\n",(0,S.jsxs)(e.ul,{children:["\n",(0,S.jsx)(e.li,{children:"\u5728\u4E25\u683C\u6A21\u5F0F\uFF08\u9ED8\u8BA4\uFF09\u4E0B\uFF0C\u65E0\u6548\u7684 JSON \u8BED\u6CD5\u4F1A\u5BFC\u81F4\u9519\u8BEF"}),"\n",(0,S.jsx)(e.li,{children:"\u5728\u975E\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF0C\u65E0\u6548\u7684 JSON \u8BED\u6CD5\u4F1A\u8FD4\u56DE NULL"}),"\n"]}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:"mysql> SET enable_strict_cast = false;\nmysql> SELECT CAST('{\"invalid JSON' AS JSON);\n+-----------------------------+\n| CAST('{\"invalid JSON' AS JSON) |\n+-----------------------------+\n| NULL                        |\n+-----------------------------+\n\nmysql> SET enable_strict_cast = true;\nmysql> SELECT CAST('{\"invalid JSON' AS JSON);\nERROR 1105 (HY000): errCode = 2, detailMessage = (127.0.0.1)[INVALID_ARGUMENT]Failed to parse json string: {\"invalid JSON, ...\n"})}),"\n",(0,S.jsx)(e.h3,{id:"from-\u5176\u4ED6-doris-\u7C7B\u578B",children:"FROM \u5176\u4ED6 Doris \u7C7B\u578B"}),"\n",(0,S.jsx)(e.p,{children:"\u4EE5\u4E0B Doris \u7C7B\u578B\u53EF\u4EE5\u76F4\u63A5\u8F6C\u6362\u4E3A JSON \u800C\u4E0D\u4E22\u5931\u7CBE\u5EA6\uFF1A"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,S.jsxs)(e.table,{children:[(0,S.jsx)(e.thead,{children:(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.th,{children:"Doris \u7C7B\u578B"}),(0,S.jsx)(e.th,{children:"JSON \u7C7B\u578B"})]})}),(0,S.jsxs)(e.tbody,{children:[(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"BOOLEAN"}),(0,S.jsx)(e.td,{children:"Bool"})]}),(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"TINYINT"}),(0,S.jsx)(e.td,{children:"Int8"})]}),(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"SMALLINT"}),(0,S.jsx)(e.td,{children:"Int16"})]}),(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"INT"}),(0,S.jsx)(e.td,{children:"Int32"})]}),(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"BIGINT"}),(0,S.jsx)(e.td,{children:"Int64"})]}),(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"LARGEINT"}),(0,S.jsx)(e.td,{children:"Int128"})]}),(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"FLOAT"}),(0,S.jsx)(e.td,{children:"Float"})]}),(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"DOUBLE"}),(0,S.jsx)(e.td,{children:"Double"})]}),(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"DECIMAL"}),(0,S.jsx)(e.td,{children:"Decimal"})]}),(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"STRING"}),(0,S.jsx)(e.td,{children:"String"})]}),(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"ARRAY"}),(0,S.jsx)(e.td,{children:"Array"})]}),(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"STRUCT"}),(0,S.jsx)(e.td,{children:"Object"})]})]})]}),"\n",(0,S.jsx)(e.h4,{id:"\u793A\u4F8B",children:"\u793A\u4F8B"}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:"-- \u6574\u6570\u6570\u7EC4\u8F6C JSON\nmysql> SELECT CAST(ARRAY(123,456,789) AS JSON);\n+----------------------------------+\n| CAST(ARRAY(123,456,789) AS JSON) |\n+----------------------------------+\n| [123,456,789]                    |\n+----------------------------------+\n\n-- Decimal \u6570\u7EC4\u8F6C JSON\uFF08\u4FDD\u7559\u539F\u59CB\u7CBE\u5EA6\uFF09\nmysql> SELECT CAST(ARRAY(12345678.12345678,0.00000001,12.000000000000000001) AS JSON);\n+--------------------------------------------------------------------------+\n| CAST(ARRAY(12345678.12345678,0.00000001,12.000000000000000001) AS JSON)  |\n+--------------------------------------------------------------------------+\n| [12345678.123456780000000000,0.000000010000000000,12.000000000000000001] |\n+--------------------------------------------------------------------------+\n"})}),"\n",(0,S.jsx)(e.h4,{id:"\u4E0D\u76F4\u63A5\u652F\u6301\u7684\u7C7B\u578B",children:"\u4E0D\u76F4\u63A5\u652F\u6301\u7684\u7C7B\u578B"}),"\n",(0,S.jsx)(e.p,{children:"\u4E0A\u8868\u4E2D\u672A\u5217\u51FA\u7684\u7C7B\u578B\u4E0D\u80FD\u76F4\u63A5\u8F6C\u6362\u4E3A JSON\uFF1A"}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:"mysql> SELECT CAST(MAKEDATE(2021, 1) AS JSON);\nERROR 1105 (HY000): CAST AS JSONB can only be performed between JSONB, String, Number, Boolean, Array, Struct types. Got Date to JSONB\n"})}),"\n",(0,S.jsx)(e.p,{children:"\u89E3\u51B3\u65B9\u6848\uFF1A\u5148\u8F6C\u6362\u4E3A\u517C\u5BB9\u7C7B\u578B\uFF0C\u518D\u8F6C\u4E3A JSON\uFF1A"}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:"mysql> SELECT CAST(CAST(MAKEDATE(2021, 1) AS BIGINT) AS JSON);\n+---------------------------------------------------+\n| CAST(CAST(MAKEDATE(2021, 1) AS BIGINT) AS JSON)   |\n+---------------------------------------------------+\n| 20210101                                          |\n+---------------------------------------------------+\n"})}),"\n",(0,S.jsx)(e.h2,{id:"\u4ECE-json-\u8F6C\u6362",children:"\u4ECE JSON \u8F6C\u6362"}),"\n",(0,S.jsxs)(e.admonition,{title:"\u884C\u4E3A\u53D8\u66F4",type:"caution",children:[(0,S.jsx)(e.p,{children:"\u5728 4.0 \u7248\u672C\u4E4B\u524D\uFF0CDoris \u5BF9 JSON CAST \u7684\u884C\u4E3A\u6BD4\u8F83\u5BBD\u677E\uFF0C\u4E0D\u4F1A\u5904\u7406\u6EA2\u51FA\u884C\u4E3A\u3002"}),(0,S.jsx)(e.p,{children:"\u4ECE 4.0 \u7248\u672C\u5F00\u59CB\uFF0C\u5728 JSON CAST \u4E2D\u51FA\u73B0\u6EA2\u51FA\u884C\u4E3A\uFF0C\u5728\u4E25\u683C\u6A21\u5F0F\u4E0B\u62A5\u9519\uFF0C\u975E\u4E25\u683C\u6A21\u5F0F\u4E0B\u8FD4\u56DE NULL\u3002"})]}),"\n",(0,S.jsx)(e.h3,{id:"to-boolean",children:"TO Boolean"}),"\n",(0,S.jsx)(e.p,{children:"JSON Bool\u3001Number \u548C String \u7C7B\u578B\u53EF\u4EE5\u8F6C\u6362\u4E3A BOOLEAN\uFF1A"}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:"-- \u4ECE JSON Bool \u8F6C\u6362\nmysql> SELECT CAST(CAST('true' AS JSON) AS BOOLEAN);\n+---------------------------------------+\n| CAST(CAST('true' AS JSON) AS BOOLEAN) |\n+---------------------------------------+\n|                                     1 |\n+---------------------------------------+\n\n-- \u4ECE JSON Number \u8F6C\u6362\nmysql> SELECT CAST(CAST('123' AS JSON) AS BOOLEAN);\n+--------------------------------------+\n| CAST(CAST('123' AS JSON) AS BOOLEAN) |\n+--------------------------------------+\n|                                    1 |\n+--------------------------------------+\n\n-- \u4ECE JSON String \u8F6C\u6362\uFF08\u5FC5\u987B\u5305\u542B\u6709\u6548\u7684\u5E03\u5C14\u503C\u8868\u793A\uFF09\nmysql> SELECT CAST(TO_JSON('true') AS BOOLEAN);\n+----------------------------------+\n| CAST(TO_JSON('true') AS BOOLEAN) |\n+----------------------------------+\n|                                1 |\n+----------------------------------+\n"})}),"\n",(0,S.jsx)(e.h3,{id:"to-\u6570\u503C\u7C7B\u578B",children:"TO \u6570\u503C\u7C7B\u578B"}),"\n",(0,S.jsx)(e.p,{children:"JSON Bool\u3001Number \u548C String \u7C7B\u578B\u53EF\u4EE5\u8F6C\u6362\u4E3A\u6570\u503C\u7C7B\u578B\uFF08TINYINT\u3001SMALLINT\u3001INT\u3001BIGINT\u3001LARGEINT\u3001FLOAT\u3001DOUBLE\u3001DECIMAL\uFF09\uFF1A"}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:"-- \u4ECE JSON Number \u8F6C\u6362\u4E3A INT\nmysql> SELECT CAST(CAST('123' AS JSON) AS INT);\n+----------------------------------+\n| CAST(CAST('123' AS JSON) AS INT) |\n+----------------------------------+\n|                              123 |\n+----------------------------------+\n\n-- \u4ECE JSON Bool \u8F6C\u6362\u4E3A\u6570\u503C\u7C7B\u578B\nmysql> SELECT CAST(CAST('true' AS JSON) AS INT), CAST(CAST('false' AS JSON) AS DOUBLE);\n+-----------------------------------+--------------------------------------+\n| CAST(CAST('true' AS JSON) AS INT) | CAST(CAST('false' AS JSON) AS DOUBLE) |\n+-----------------------------------+--------------------------------------+\n|                                 1 |                                    0 |\n+-----------------------------------+--------------------------------------+\n"})}),"\n",(0,S.jsx)(e.p,{children:"\u5F53\u8F6C\u6362\u4E3A\u8F83\u5C0F\u7C7B\u578B\u65F6\uFF0C\u9002\u7528\u6570\u503C\u6EA2\u51FA\u89C4\u5219\uFF1A"}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:"-- \u5728\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF0C\u6EA2\u51FA\u4F1A\u5BFC\u81F4\u9519\u8BEF\nmysql> SET enable_strict_cast = true;\nmysql> SELECT CAST(TO_JSON(12312312312312311) AS INT);\nERROR 1105 (HY000): Cannot cast from jsonb value type 12312312312312311 to doris type INT\n\n-- \u5728\u975E\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF0C\u6EA2\u51FA\u8FD4\u56DE NULL\nmysql> SET enable_strict_cast = false;\nmysql> SELECT CAST(TO_JSON(12312312312312311) AS INT);\n+-----------------------------------------+\n| CAST(TO_JSON(12312312312312311) AS INT) |\n+-----------------------------------------+\n|                                    NULL |\n+-----------------------------------------+\n"})}),"\n",(0,S.jsx)(e.h3,{id:"to-string",children:"TO String"}),"\n",(0,S.jsx)(e.p,{children:"\u4EFB\u4F55 JSON \u7C7B\u578B\u90FD\u53EF\u4EE5\u8F6C\u6362\u4E3A STRING\uFF0C\u751F\u6210 JSON \u6587\u672C\u8868\u793A\uFF1A"}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:'mysql> SELECT CAST(CAST(\'{"key1":"value1","key2":123}\' AS JSON) AS STRING);\n+----------------------------------------------------------+\n| CAST(CAST(\'{"key1":"value1","key2":123}\' AS JSON) AS STRING) |\n+----------------------------------------------------------+\n| {"key1":"value1","key2":123}                             |\n+----------------------------------------------------------+\n\nmysql> SELECT CAST(CAST(\'true\' AS JSON) AS STRING);\n+--------------------------------------+\n| CAST(CAST(\'true\' AS JSON) AS STRING) |\n+--------------------------------------+\n| true                                 |\n+--------------------------------------+\n'})}),"\n",(0,S.jsx)(e.h3,{id:"to-array",children:"TO Array"}),"\n",(0,S.jsx)(e.p,{children:"JSON Array , String \u7C7B\u578B\u53EF\u4EE5\u8F6C\u6362\u4E3A Doris ARRAY \u7C7B\u578B\uFF1A"}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:"mysql> SELECT CAST(TO_JSON(ARRAY(1,2,3)) AS ARRAY<INT>);\n+-------------------------------------------+\n| CAST(TO_JSON(ARRAY(1,2,3)) AS ARRAY<INT>) |\n+-------------------------------------------+\n| [1, 2, 3]                                 |\n+-------------------------------------------+\n\n-- \u6570\u7EC4\u5143\u7D20\u5185\u7684\u7C7B\u578B\u8F6C\u6362\nmysql> SELECT CAST(TO_JSON(ARRAY(1.2,2.3,3.4)) AS ARRAY<INT>);\n+-------------------------------------------------+\n| CAST(TO_JSON(ARRAY(1.2,2.3,3.4)) AS ARRAY<INT>) |\n+-------------------------------------------------+\n| [1, 2, 3]                                       |\n+-------------------------------------------------+\n\n-- \u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6570\u7EC4\nmysql> SELECT CAST(TO_JSON(\"['123','456']\") AS ARRAY<INT>);\n+----------------------------------------------+\n| CAST(TO_JSON(\"['123','456']\") AS ARRAY<INT>) |\n+----------------------------------------------+\n| [123, 456]                                   |\n+----------------------------------------------+\n"})}),"\n",(0,S.jsx)(e.p,{children:"\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u6309\u6807\u51C6\u8F6C\u6362\u89C4\u5219\u5355\u72EC\u8F6C\u6362\uFF1A"}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:"-- \u5728\u975E\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF0C\u65E0\u6548\u5143\u7D20\u53D8\u4E3A NULL\nmysql> SET enable_strict_cast = false;\nmysql> SELECT CAST(TO_JSON(ARRAY(10,20,200)) AS ARRAY<TINYINT>);\n+---------------------------------------------------+\n| CAST(TO_JSON(ARRAY(10,20,200)) AS ARRAY<TINYINT>) |\n+---------------------------------------------------+\n| [10, 20, null]                                    |\n+---------------------------------------------------+\n\n-- \u5728\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF0C\u65E0\u6548\u5143\u7D20\u5BFC\u81F4\u9519\u8BEF\nmysql> SET enable_strict_cast = true;\nmysql> SELECT CAST(TO_JSON(ARRAY(10,20,200)) AS ARRAY<TINYINT>);\nERROR 1105 (HY000): Cannot cast from jsonb value type 200 to doris type TINYINT\n"})}),"\n",(0,S.jsx)(e.h3,{id:"to-struct",children:"TO Struct"}),"\n",(0,S.jsx)(e.p,{children:"JSON Object\uFF0CString \u7C7B\u578B\u53EF\u4EE5\u8F6C\u6362\u4E3A Doris STRUCT \u7C7B\u578B\uFF1A"}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:'mysql> SELECT CAST(CAST(\'{"key1":123,"key2":"456"}\' AS JSON) AS STRUCT<key1:INT,key2:STRING>);\n+------------------------------------------------------------------------------+\n| CAST(CAST(\'{"key1":123,"key2":"456"}\' AS JSON) AS STRUCT<key1:INT,key2:STRING>) |\n+------------------------------------------------------------------------------+\n| {"key1":123, "key2":"456"}                                                   |\n+------------------------------------------------------------------------------+\n\n\nmysql> SELECT CAST(TO_JSON(\'{"key1":123,"key2":"456"}\') AS STRUCT<key1:INT,key2:STRING>);\n+----------------------------------------------------------------------------+\n| CAST(TO_JSON(\'{"key1":123,"key2":"456"}\') AS STRUCT<key1:INT,key2:STRING>) |\n+----------------------------------------------------------------------------+\n| {"key1":123, "key2":"456"}                                                 |\n+----------------------------------------------------------------------------+\n'})}),"\n",(0,S.jsx)(e.p,{children:"\u7ED3\u6784\u4E2D\u7684\u5B57\u6BB5\u6839\u636E\u6307\u5B9A\u7684\u7C7B\u578B\u5355\u72EC\u8F6C\u6362\uFF1A"}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:'mysql> SELECT CAST(CAST(\'{"key1":[123.45,678.90],"key2":[12312313]}\' AS JSON) AS STRUCT<key1:ARRAY<DOUBLE>,key2:ARRAY<BIGINT>>);\n+--------------------------------------------------------------------------------------------------------------------------+\n| CAST(CAST(\'{"key1":[123.45,678.90],"key2":[12312313]}\' AS JSON) AS STRUCT<key1:ARRAY<DOUBLE>,key2:ARRAY<BIGINT>>) |\n+--------------------------------------------------------------------------------------------------------------------------+\n| {"key1":[123.45, 678.9], "key2":[12312313]}                                                                              |\n+--------------------------------------------------------------------------------------------------------------------------+\n'})}),"\n",(0,S.jsx)(e.p,{children:"JSON \u548C\u7ED3\u6784\u5B9A\u4E49\u4E4B\u95F4\u7684\u5B57\u6BB5\u8BA1\u6570\u548C\u540D\u79F0\u5FC5\u987B\u5339\u914D\uFF1A"}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:'-- \u5728\u975E\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF0C\u5B57\u6BB5\u4E0D\u5339\u914D\u8FD4\u56DE NULL\nmysql> SET enable_strict_cast = false;\nmysql> SELECT CAST(CAST(\'{"key1":123,"key2":456}\' AS JSON) AS STRUCT<key1:INT>);\n+-------------------------------------------------------------------------+\n| CAST(CAST(\'{"key1":123,"key2":456}\' AS JSON) AS STRUCT<key1:INT>) |\n+-------------------------------------------------------------------------+\n| NULL                                                                    |\n+-------------------------------------------------------------------------+\n\n-- \u5728\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF0C\u5B57\u6BB5\u4E0D\u5339\u914D\u5BFC\u81F4\u9519\u8BEF\nmysql> SET enable_strict_cast = true;\nmysql> SELECT CAST(CAST(\'{"key1":123,"key2":456}\' AS JSON) AS STRUCT<key1:INT>);\nERROR 1105 (HY000): jsonb_value field size 2 is not equal to struct size 1\n'})}),"\n",(0,S.jsx)(e.h3,{id:"json-null-\u5904\u7406",children:"JSON Null \u5904\u7406"}),"\n",(0,S.jsx)(e.p,{children:"JSON null \u4E0E SQL NULL \u4E0D\u540C\uFF1A"}),"\n",(0,S.jsxs)(e.ul,{children:["\n",(0,S.jsx)(e.li,{children:"\u5F53 JSON \u5B57\u6BB5\u5305\u542B null \u503C\u65F6\uFF0C\u8F6C\u6362\u4E3A\u4EFB\u4F55 Doris \u7C7B\u578B\u90FD\u4F1A\u4EA7\u751F SQL NULL\uFF1A"}),"\n"]}),"\n",(0,S.jsx)(e.pre,{children:(0,S.jsx)(e.code,{className:"language-sql",children:"mysql> SELECT CAST(CAST('null' AS JSON) AS INT);\n+----------------------------------+\n| CAST(CAST('null' AS JSON) AS INT) |\n+----------------------------------+\n|                             NULL |\n+----------------------------------+\n"})}),"\n",(0,S.jsx)(e.h2,{id:"\u7C7B\u578B\u8F6C\u6362\u603B\u7ED3\u8868",children:"\u7C7B\u578B\u8F6C\u6362\u603B\u7ED3\u8868"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,S.jsxs)(e.table,{children:[(0,S.jsx)(e.thead,{children:(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.th,{children:"JSON \u7C7B\u578B"}),(0,S.jsx)(e.th,{children:"\u53EF\u8F6C\u6362\u4E3A"})]})}),(0,S.jsxs)(e.tbody,{children:[(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"Bool"}),(0,S.jsx)(e.td,{children:"BOOLEAN, TINYINT, SMALLINT, INT, BIGINT, LARGEINT, DOUBLE, FLOAT, DECIMAL, STRING"})]}),(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"Null"}),(0,S.jsx)(e.td,{children:"(\u59CB\u7EC8\u8F6C\u6362\u4E3A SQL NULL)"})]}),(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"Number"}),(0,S.jsx)(e.td,{children:"BOOLEAN, TINYINT, SMALLINT, INT, BIGINT, LARGEINT, DOUBLE, FLOAT, DECIMAL, STRING"})]}),(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"String"}),(0,S.jsx)(e.td,{children:"BOOLEAN, TINYINT, SMALLINT, INT, BIGINT, LARGEINT, DOUBLE, FLOAT, DECIMAL, STRING, ARRAY, STRUCT"})]}),(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"Array"}),(0,S.jsx)(e.td,{children:"STRING, ARRAY"})]}),(0,S.jsxs)(e.tr,{children:[(0,S.jsx)(e.td,{children:"Object"}),(0,S.jsx)(e.td,{children:"STRING, STRUCT"})]})]})]}),"\n",(0,S.jsx)(e.h3,{id:"keywords",children:"keywords"}),"\n",(0,S.jsx)(e.p,{children:"JSON, JSONB, CAST, \u7C7B\u578B\u8F6C\u6362\uFF0Cto_json"})]})}function A(n={}){let{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,S.jsx)(e,{...n,children:(0,S.jsx)(T,{...n})}):T(n)}},250065:function(n,e,l){l.d(e,{Z:function(){return d},a:function(){return i}});var s=l(667294);let S={},r=s.createContext(S);function i(n){let e=s.useContext(r);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(S):n.components||S:i(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);