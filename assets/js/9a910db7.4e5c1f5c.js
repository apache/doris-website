"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["955707"],{96569:function(e,n,s){s.r(n),s.d(n,{default:()=>u,frontMatter:()=>t,metadata:()=>l,assets:()=>c,toc:()=>i,contentTitle:()=>o});var l=JSON.parse('{"id":"sql-manual/sql-functions/table-functions/explode-json-array-json-outer","title":"EXPLODE_JSON_ARRAY_JSON_OUTER","description":"Description","source":"@site/docs/sql-manual/sql-functions/table-functions/explode-json-array-json-outer.md","sourceDirName":"sql-manual/sql-functions/table-functions","slug":"/sql-manual/sql-functions/table-functions/explode-json-array-json-outer","permalink":"/docs/dev/sql-manual/sql-functions/table-functions/explode-json-array-json-outer","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"EXPLODE_JSON_ARRAY_JSON_OUTER","language":"en"},"sidebar":"docs","previous":{"title":"EXPLODE_JSON_ARRAY_JSON","permalink":"/docs/dev/sql-manual/sql-functions/table-functions/explode-json-array-json"},"next":{"title":"EXPLODE_JSON_ARRAY_STRING","permalink":"/docs/dev/sql-manual/sql-functions/table-functions/explode-json-array-string"}}'),a=s("785893"),r=s("250065");let t={title:"EXPLODE_JSON_ARRAY_JSON_OUTER",language:"en"},o=void 0,c={},i=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function d(e){let n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"explode_json_array_json_outer"})," table function accepts a JSON array. Its implementation logic is to convert the JSON array to an array type and then call the ",(0,a.jsx)(n.code,{children:"explode_outer"})," function for processing. The behavior is equivalent to: ",(0,a.jsx)(n.code,{children:"explode_outer(cast(<json_array> as Array<JSON>))"}),".\nIt should be used together with ",(0,a.jsx)(n.a,{href:"/docs/dev/query-data/lateral-view",children:(0,a.jsx)(n.code,{children:"LATERAL VIEW"})}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"EXPLODE_JSON_ARRAY_JSON_OUTER(<json>)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"<json>"})," JSON type, the content should be an array."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Returns a single-column, multi-row result composed of all elements in ",(0,a.jsx)(n.code,{children:"<json>"}),". The column type is ",(0,a.jsx)(n.code,{children:"Nullable<JSON>"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["If ",(0,a.jsx)(n.code,{children:"<json>"})," is NULL or an empty array (number of elements is 0), 1 row with NULL is returned."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsxs)(n.ol,{start:"0",children:["\n",(0,a.jsxs)(n.li,{children:["Prepare data\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'create table example(\n    k1 int\n) properties(\n    "replication_num" = "1"\n);\n\ninsert into example values(1);\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Regular parameters\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'select * from example lateral view explode_json_array_json_outer(\'[4, "abc", {"key": "value"}, 5.23, null]\') t2 as c;\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'+------+-----------------+\n| k1   | c               |\n+------+-----------------+\n|    1 | 4               |\n|    1 | "abc"           |\n|    1 | {"key":"value"} |\n|    1 | 5.23            |\n|    1 | NULL            |\n+------+-----------------+\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Empty array\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"select * from example lateral view explode_json_array_json_outer('[]') t2 as c;\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"+------+------+\n| k1   | c    |\n+------+------+\n|    1 | NULL |\n+------+------+\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["NULL parameter\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"select * from example lateral view explode_json_array_json_outer(NULL) t2 as c;\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"+------+------+\n| k1   | c    |\n+------+------+\n|    1 | NULL |\n+------+------+\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Non-array parameter\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"select * from example lateral view explode_json_array_json_outer('{}') t2 as c;\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"+------+------+\n| k1   | c    |\n+------+------+\n|    1 | NULL |\n+------+------+\n"})}),"\n"]}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return o},a:function(){return t}});var l=s(667294);let a={},r=l.createContext(a);function t(e){let n=l.useContext(r);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);