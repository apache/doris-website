"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["493427"],{200247:function(e,n,s){s.r(n),s.d(n,{default:()=>u,frontMatter:()=>r,metadata:()=>t,assets:()=>a,toc:()=>o,contentTitle:()=>c});var t=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/bitwise-functions/bit-test","title":"BIT_TEST","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/bitwise-functions/bit-test.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/bitwise-functions","slug":"/sql-manual/sql-functions/scalar-functions/bitwise-functions/bit-test","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/bitwise-functions/bit-test","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"BIT_TEST","language":"en"},"sidebar":"docs","previous":{"title":"BIT_LENGTH","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/bitwise-functions/bit-length"},"next":{"title":"BITAND","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/bitwise-functions/bitand"}}'),i=s("785893"),l=s("250065");let r={title:"BIT_TEST",language:"en"},c=void 0,a={},o=[{value:"Description",id:"description",level:2},{value:"Alias",id:"alias",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function d(e){let n={blockquote:"blockquote",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,l.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["Converts the value of ",(0,i.jsx)(n.code,{children:"<x>"})," to its binary form and returns the value at the specified ",(0,i.jsx)(n.code,{children:"<bits>"})," position(s), where ",(0,i.jsx)(n.code,{children:"<bits>"})," starts from 0 (rightmost bit)."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"<bits>"})," contains multiple values, the values at these positions are combined using the AND operator, and the final result is returned."]}),"\n",(0,i.jsxs)(n.p,{children:["If any value in ",(0,i.jsx)(n.code,{children:"<bits>"})," is negative or exceeds the total number of bits in ",(0,i.jsx)(n.code,{children:"<x>"}),", the result is 0."]}),"\n",(0,i.jsxs)(n.p,{children:["Supported integer types for ",(0,i.jsx)(n.code,{children:"<x>"}),": TINYINT, SMALLINT, INT, BIGINT, LARGEINT."]}),"\n",(0,i.jsx)(n.h2,{id:"alias",children:"Alias"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"BIT_TEST_ALL"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"BIT_TEST(<x>, <bits>[, <bits> ... ])\n"})}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"<x>"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"<bits>"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsx)(n.p,{children:"Returns the value at the specified position(s)."}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Example 1\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"select BIT_TEST(43, 1), BIT_TEST(43, -1), BIT_TEST(43, 2), BIT_TEST(43, 0, 1, 3, 5), BIT_TEST(43, 0, 1, 3, 5, 2);\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"+-----------------+------------------+-----------------+--------------------------+-----------------------------+\n| BIT_TEST(43, 1) | BIT_TEST(43, -1) | BIT_TEST(43, 2) | BIT_TEST(43, 0, 1, 3, 5) | BIT_TEST(43, 0, 1, 3, 5, 2) |\n+-----------------+------------------+-----------------+--------------------------+-----------------------------+\n|               1 |                0 |               0 |                        1 |                           0 |\n+-----------------+------------------+-----------------+--------------------------+-----------------------------+\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:['The binary representation of 43 is "101011", so ',(0,i.jsx)(n.code,{children:"BIT_TEST(43, 1)"})," returns 1, ",(0,i.jsx)(n.code,{children:"BIT_TEST(43, 2)"})," returns 0, and ",(0,i.jsx)(n.code,{children:"BIT_TEST(43, 0, 1, 3, 5)"})," returns 1.\n",(0,i.jsx)(n.code,{children:"BIT_TEST(43, 0, 1, 3, 5, 2)"})," returns 0."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["NULL argument\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"select BIT_TEST(NULL, 1), BIT_TEST(43, NULL), BIT_TEST(NULL, NULL);\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"+-------------------+--------------------+----------------------+\n| BIT_TEST(NULL, 1) | BIT_TEST(43, NULL) | BIT_TEST(NULL, NULL) |\n+-------------------+--------------------+----------------------+\n|              NULL |               NULL |                 NULL |\n+-------------------+--------------------+----------------------+\n"})}),"\n"]}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return c},a:function(){return r}});var t=s(667294);let i={},l=t.createContext(i);function r(e){let n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);