"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["25762"],{530122:function(e,n,l){l.r(n),l.d(n,{default:()=>d,frontMatter:()=>r,metadata:()=>s,assets:()=>c,toc:()=>o,contentTitle:()=>a});var s=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/conditional-functions/coalesce","title":"COALESCE","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/conditional-functions/coalesce.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/conditional-functions","slug":"/sql-manual/sql-functions/scalar-functions/conditional-functions/coalesce","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/conditional-functions/coalesce","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"COALESCE","language":"en"},"sidebar":"docs","previous":{"title":"TO_QUANTILE_STATE","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/quantile-functions/to-quantile-state"},"next":{"title":"GREATEST","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/conditional-functions/greatest"}}'),t=l("785893"),i=l("250065");let r={title:"COALESCE",language:"en"},a=void 0,c={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Required Parameter",id:"required-parameter",level:3},{value:"Variadic Parameters",id:"variadic-parameters",level:3},{value:"Return Value",id:"return-value",level:2},{value:"Usage Notes",id:"usage-notes",level:2},{value:"Examples",id:"examples",level:2}];function u(e){let n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"Returns the first non-null expression from the argument list, evaluated from left to right. If all arguments are NULL, returns NULL."}),"\n",(0,t.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"COALESCE( <expr1> [ , ... , <exprN> ] )\n"})}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(n.h3,{id:"required-parameter",children:"Required Parameter"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<expr1>"}),": An expression of any type."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"variadic-parameters",children:"Variadic Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"COALESCE"})," function supports multiple variadic parameters."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsx)(n.p,{children:"Returns the first non-null expression in the argument list. If all arguments are NULL, returns NULL."}),"\n",(0,t.jsx)(n.h2,{id:"usage-notes",children:"Usage Notes"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"The types of multiple arguments should be as consistent as possible."}),"\n",(0,t.jsxs)(n.li,{children:["If the types of multiple arguments are inconsistent, the function will attempt to convert them to the same type. For conversion rules, refer to: ",(0,t.jsx)(n.a,{href:"/docs/dev/sql-manual/basic-element/sql-data-types/conversion/overview",children:"Type Conversion"})]}),"\n",(0,t.jsxs)(n.li,{children:["Currently, only the following types are supported as arguments:\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"String types (String/VARCHAR/CHAR)"}),"\n",(0,t.jsx)(n.li,{children:"Boolean type (Boolean)"}),"\n",(0,t.jsx)(n.li,{children:"Numeric types (TinyInt, SmallInt, Int, BigInt, LargeInt, Float, Double, Decimal)"}),"\n",(0,t.jsx)(n.li,{children:"Date types (Date, DateTime)"}),"\n",(0,t.jsx)(n.li,{children:"Bitmap type (Bitmap)"}),"\n",(0,t.jsx)(n.li,{children:"Semi-structured types (JSON, Array, MAP, Struct)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Argument type conversion"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"select coalesce(null, 2, 1.234);\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+--------------------------+\n| coalesce(null, 2, 1.234) |\n+--------------------------+\n|                    2.000 |\n+--------------------------+\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:'Since the third argument "1.234" is of Decimal type, the argument "2" is converted to Decimal type.'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"All arguments are NULL"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"select coalesce(null, null, null);\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+----------------------------+\n| coalesce(null, null, null) |\n+----------------------------+\n| NULL                       |\n+----------------------------+\n"})}),"\n"]}),"\n"]})]})}function d(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},250065:function(e,n,l){l.d(n,{Z:function(){return a},a:function(){return r}});var s=l(667294);let t={},i=s.createContext(t);function r(e){let n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);