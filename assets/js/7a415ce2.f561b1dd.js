"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["682644"],{493146:function(e,n,t){t.r(n),t.d(n,{default:()=>c,frontMatter:()=>r,metadata:()=>i,assets:()=>d,toc:()=>o,contentTitle:()=>l});var i=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/date-time-functions/unix-timestamp","title":"UNIX_TIMESTAMP","description":"Description","source":"@site/versioned_docs/version-3.x/sql-manual/sql-functions/scalar-functions/date-time-functions/unix-timestamp.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/date-time-functions","slug":"/sql-manual/sql-functions/scalar-functions/date-time-functions/unix-timestamp","permalink":"/docs/3.x/sql-manual/sql-functions/scalar-functions/date-time-functions/unix-timestamp","draft":false,"unlisted":false,"tags":[],"version":"3.x","frontMatter":{"title":"UNIX_TIMESTAMP","language":"en"},"sidebar":"docs","previous":{"title":"TO_MONDAY","permalink":"/docs/3.x/sql-manual/sql-functions/scalar-functions/date-time-functions/to-monday"},"next":{"title":"UTC_TIMESTAMP","permalink":"/docs/3.x/sql-manual/sql-functions/scalar-functions/date-time-functions/utc-timestamp"}}'),s=t("785893"),a=t("250065");let r={title:"UNIX_TIMESTAMP",language:"en"},l=void 0,d={},o=[{value:"Description",id:"description",level:2},{value:"Sytax",id:"sytax",level:2},{value:"Parameter",id:"parameter",level:2},{value:"Return value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2},{value:"New behavior examples (since 3.0.8 and 3.1.0)",id:"new-behavior-examples-since-308-and-310",level:3},{value:"keywords",id:"keywords",level:3}];function m(e){let n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"Converts a Date or Datetime type to a UNIX timestamp."}),"\n",(0,s.jsx)(n.p,{children:"If no argument is provided, it converts the current time to a timestamp."}),"\n",(0,s.jsx)(n.p,{children:"The argument must be of Date or Datetime type."}),"\n",(0,s.jsx)(n.p,{children:"For the format specification, refer to the format description of the date_format function."}),"\n",(0,s.jsx)(n.p,{children:"This function is affected by the time zone."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Since 3.0.8 and 3.1.0, the maximum supported time is extended to ",(0,s.jsx)(n.code,{children:"9999-12-31 23:59:59.999999"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"sytax",children:"Sytax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"UNIX_TIMESTAMP([DATETIME date[, STRING fmt]])\n\n"})}),"\n",(0,s.jsx)(n.h2,{id:"parameter",children:"Parameter"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Paramters"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<date>"})}),(0,s.jsxs)(n.td,{children:["The datetime value to be converted is of type ",(0,s.jsx)(n.code,{children:"datetime"})," or ",(0,s.jsx)(n.code,{children:"date"})," type, convertible range: '1970-01-01 00:00:01.000000 UTC' to '3001-01-19 03:14:07.999999 UTC'."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<fmt>"})}),(0,s.jsx)(n.td,{children:"The 'date' parameter refers to the specific part that needs to be converted into a timestamp, and it is a parameter of type string. If this parameter is provided, only the part matching the format will be converted into a timestamp."})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"return-value",children:"Return value"}),"\n",(0,s.jsx)(n.p,{children:"Returns two types based on the input:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["If the input ",(0,s.jsx)(n.code,{children:"date"}),"(only ",(0,s.jsx)(n.code,{children:"datetime"})," type have the scale not zero) scale is not 0 or a format parameter is provided,\nreturns a timestamp of type Decimal with a maximum precision of six decimal places."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"If the input datetime scale is 0 and no format parameter is provided,\nreturns a timestamp of type INT."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Supported input range is from '1970-01-01 00:00:01.000000 UTC' to '3001-01-19 03:14:07.999999 UTC'. Times earlier than the minimum return 0; times after the maximum return 0."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Returns NULL if any argument is NULL."}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"\n-- All the following results are returned in the UTC time zone\n\nset time_zone= 'UTC';\n\n------Displays the timestamp of the current time\nmysql> select unix_timestamp();\n+------------------+\n| unix_timestamp() |\n+------------------+\n|       1753933330 |\n+------------------+\n\n---Input a datetime to display its timestamp\nmysql> select unix_timestamp('2007-11-30 10:30:19');\n+---------------------------------------+\n| unix_timestamp('2007-11-30 10:30:19') |\n+---------------------------------------+\n|                            1196389819 |\n+---------------------------------------+\n\n---Matches the format to display the timestamp corresponding to the given datetime\nmysql> select unix_timestamp('2007-11-30 10:30-19', '%Y-%m-%d %H:%i-%s');\n+------------------------------------------------------------+\n| unix_timestamp('2007-11-30 10:30-19', '%Y-%m-%d %H:%i-%s') |\n+------------------------------------------------------------+\n|                                          1196389819.000000 |\n+------------------------------------------------------------+\n\n\n---Only matches year, month, and day to display the timestamp\nmysql> select unix_timestamp('2007-11-30 10:30%3A19', '%Y-%m-%d');\n+-----------------------------------------------------+\n| unix_timestamp('2007-11-30 10:30%3A19', '%Y-%m-%d') |\n+-----------------------------------------------------+\n|                                   1196352000.000000 |\n+-----------------------------------------------------+\n\n\n---Matching with other characters\nmysql> select unix_timestamp('2007-11-30 10:30%3A19', '%Y-%m-%d %H:%i%%3A%s');\n+-----------------------------------------------------------------+\n| unix_timestamp('2007-11-30 10:30%3A19', '%Y-%m-%d %H:%i%%3A%s') |\n+-----------------------------------------------------------------+\n|                                               1196389819.000000 |\n+-----------------------------------------------------------------+\n\n\n---Time beyond the minimum range returns 0\nmysql> SELECT UNIX_TIMESTAMP('1970-01-01 00:00:00');\n+---------------------------------------+\n| UNIX_TIMESTAMP('1970-01-01 00:00:00') |\n+---------------------------------------+\n|                                     0 |\n+---------------------------------------+\n\n\n---Input time with non-zero scale\nmysql> SELECT UNIX_TIMESTAMP('2015-11-13 10:20:19.123');\n+-------------------------------------------+\n| UNIX_TIMESTAMP('2015-11-13 10:20:19.123') |\n+-------------------------------------------+\n|                            1447381219.123 |\n+-------------------------------------------+\n\n---Exceeding the maximum allowed range\n\nmysql> SELECT UNIX_TIMESTAMP('3001-01-19 03:14:07.999999');\n+----------------------------------------------+\n| UNIX_TIMESTAMP('3001-01-19 03:14:07.999999') |\n+----------------------------------------------+\n|                                     0.000000 |\n+----------------------------------------------+\n\n\n---Returns NULL if any argument is NULL\nmysql> select unix_timestamp(NULL);\n+----------------------+\n| unix_timestamp(NULL) |\n+----------------------+\n|                 NULL |\n+----------------------+\n\nmysql> select unix_timestamp('2038-01-19 11:14:08',null);\n+--------------------------------------------+\n| unix_timestamp('2038-01-19 11:14:08',null) |\n+--------------------------------------------+\n|                                       NULL |\n+--------------------------------------------+\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"new-behavior-examples-since-308-and-310",children:"New behavior examples (since 3.0.8 and 3.1.0)"}),"\n",(0,s.jsx)(n.p,{children:"The following examples illustrate the extended upper bound available in 3.0.8 and 3.1.0 and later. Prior to these versions, such inputs would return 0."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- Maximum supported time in 3.0.8/3.1.0+\nmysql> SELECT UNIX_TIMESTAMP('9999-12-31 23:59:59.999999');\n+--------------------------------------------------+\n| UNIX_TIMESTAMP('9999-12-31 23:59:59.999999')     |\n+--------------------------------------------------+\n|                               253402271999.999999|\n+--------------------------------------------------+\n"})}),"\n",(0,s.jsx)(n.h3,{id:"keywords",children:"keywords"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"UNIX_TIMESTAMP,UNIX,TIMESTAMP\n"})})]})}function c(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return r}});var i=t(667294);let s={},a=i.createContext(s);function r(e){let n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);