"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["356478"],{949130:function(e,n,s){s.r(n),s.d(n,{default:()=>u,frontMatter:()=>a,metadata:()=>t,assets:()=>r,toc:()=>c,contentTitle:()=>l});var t=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/json-functions/sort-json-object-keys","title":"SORT_JSON_OBJECT_KEYS","description":"\x3c!--","source":"@site/docs/sql-manual/sql-functions/scalar-functions/json-functions/sort-json-object-keys.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/json-functions","slug":"/sql-manual/sql-functions/scalar-functions/json-functions/sort-json-object-keys","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/json-functions/sort-json-object-keys","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"SORT_JSON_OBJECT_KEYS","language":"en"},"sidebar":"docs","previous":{"title":"NORMALIZE_JSON_NUMBERS_TO_DOUBLE","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/json-functions/normalize-json-numbers-to-double"},"next":{"title":"TO_JSON","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/json-functions/to-json"}}'),o=s("785893"),i=s("250065");let a={title:"SORT_JSON_OBJECT_KEYS",language:"en"},l=void 0,r={},c=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Alias",id:"alias",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic key sorting",id:"basic-key-sorting",level:3},{value:"Handling nested JSON arrays",id:"handling-nested-json-arrays",level:3},{value:"Handling NULL values",id:"handling-null-values",level:3},{value:"Notes",id:"notes",level:2}];function d(e){let n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"SORT_JSON_OBJECT_KEYS"})," sorts the keys of a JSON object. This function takes a JSON object as input and returns a new JSON object with keys sorted in lexicographical order."]}),"\n",(0,o.jsx)(n.p,{children:"Note that according to the JSON standard, JSON objects are unordered collections. However, this function is useful when you need to ensure consistency in key ordering, for example, when comparing two JSON objects for identical content."}),"\n",(0,o.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sql",children:"SORT_JSON_OBJECT_KEYS(json_value)\n"})}),"\n",(0,o.jsx)(n.h2,{id:"alias",children:"Alias"}),"\n",(0,o.jsx)(n.p,{children:"SORT_JSONB_OBJECT_KEYS"}),"\n",(0,o.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"json_value"})," - The JSON value whose keys need to be sorted. Must be of JSON type."]}),"\n",(0,o.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,o.jsx)(n.p,{children:"Returns a new JSON object with keys sorted in lexicographical order. The return type matches the input JSON type."}),"\n",(0,o.jsx)(n.p,{children:"When the input is NULL, the function returns NULL."}),"\n",(0,o.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(n.h3,{id:"basic-key-sorting",children:"Basic key sorting"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sql",children:'SELECT sort_json_object_keys(cast(\'{"b":123,"b":456,"a":789}\' as json));\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:'+------------------------------------------------------------------+\n| sort_json_object_keys(cast(\'{"b":123,"b":456,"a":789}\' as json)) |\n+------------------------------------------------------------------+\n| {"a":789,"b":123}                                                |\n+------------------------------------------------------------------+\n'})}),"\n",(0,o.jsx)(n.h3,{id:"handling-nested-json-arrays",children:"Handling nested JSON arrays"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sql",children:'SELECT sort_json_object_keys(cast(\'[{"b":123,"b":456,"a":789},{"b":123},{"b":456},{"a":789}]\' as json));\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:'+----------------------------------------------------------------------------------------------------+\n| sort_json_object_keys(cast(\'[{"b":123,"b":456,"a":789} ,{"b":123},{"b":456},{"a":789} ]\' as json)) |\n+----------------------------------------------------------------------------------------------------+\n| [{"a":789,"b":123},{"b":123},{"b":456},{"a":789}]                                                  |\n+----------------------------------------------------------------------------------------------------+\n'})}),"\n",(0,o.jsx)(n.h3,{id:"handling-null-values",children:"Handling NULL values"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sql",children:"SELECT sort_json_object_keys(null);\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"+-----------------------------+\n| sort_json_object_keys(null) |\n+-----------------------------+\n| NULL                        |\n+-----------------------------+\n"})}),"\n",(0,o.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"SORT_JSON_OBJECT_KEYS"})," function has an alias ",(0,o.jsx)(n.code,{children:"SORT_JSONB_OBJECT_KEYS"}),", both functions have identical functionality."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"This function only sorts the keys of objects, without modifying their associated values."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"The function only sorts objects but not arrays, as the standard specifies that arrays are ordered collections."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Duplicate keys in JSON objects will be merged when converted to Doris JSON type, preserving only the first key-value pair."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"This function is primarily used to ensure JSON object keys are presented in a consistent order for comparison or debugging purposes, as by default Doris JSON type does not guarantee key ordering."}),"\n"]}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return l},a:function(){return a}});var t=s(667294);let o={},i=t.createContext(o);function a(e){let n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);