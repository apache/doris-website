"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["784647"],{693264:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>s,metadata:()=>i,assets:()=>o,toc:()=>c,contentTitle:()=>l});var i=JSON.parse('{"id":"query/query-analysis/query-analytics","title":"Query Analysis","description":"Doris provides a graphical command to help users analyze a specific query or import more easily. This article describes how to use this feature.","source":"@site/versioned_docs/version-2.0/query/query-analysis/query-analytics.md","sourceDirName":"query/query-analysis","slug":"/query/query-analysis/query-analytics","permalink":"/docs/2.0/query/query-analysis/query-analytics","draft":false,"unlisted":false,"tags":[],"version":"2.0","frontMatter":{"title":"Query Analysis","language":"en"},"sidebar":"docs","previous":{"title":"Statistics of query execution","permalink":"/docs/2.0/query/query-analysis/query-profile"},"next":{"title":"Import Analysis","permalink":"/docs/2.0/query/query-analysis/import-analysis"}}'),a=t("785893"),r=t("250065");let s={title:"Query Analysis",language:"en"},l="Query Analysis",o={},c=[{value:"Query Plan Tree",id:"query-plan-tree",level:2},{value:"View Query Plan",id:"view-query-plan",level:2},{value:"View Query Profile",id:"view-query-profile",level:2}];function d(e){let n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"query-analysis",children:"Query Analysis"})}),"\n",(0,a.jsx)(n.p,{children:"Doris provides a graphical command to help users analyze a specific query or import more easily. This article describes how to use this feature."}),"\n",(0,a.jsx)(n.h2,{id:"query-plan-tree",children:"Query Plan Tree"}),"\n",(0,a.jsx)(n.p,{children:"SQL is a descriptive language, and users describe the data they want to get through a SQL. The specific execution mode of a SQL depends on the implementation of the database. The query planner is used to determine how the database executes a SQL."}),"\n",(0,a.jsx)(n.p,{children:"For example, if the user specifies a Join operator, the query planner needs to decide the specific Join algorithm, such as Hash Join or Merge Sort Join; whether to use Shuffle or Broadcast; whether the Join order needs to be adjusted to avoid Cartesian product; on which nodes to execute and so on."}),"\n",(0,a.jsx)(n.p,{children:"Doris' query planning process is to first convert an SQL statement into a single-machine execution plan tree."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"     \u250C\u2500\u2500\u2500\u2500\u2510\n     \u2502Sort\u2502\n     \u2514\u2500\u2500\u2500\u2500\u2518\n        \u2502\n  \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  \u2502Aggregation\u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n        \u2502\n     \u250C\u2500\u2500\u2500\u2500\u2510\n     \u2502Join\u2502\n     \u2514\u2500\u2500\u2500\u2500\u2518\n    \u250C\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2510\n\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Scan-1\u2502 \u2502Scan-2\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,a.jsx)(n.p,{children:"After that, the query planner will convert the single-machine query plan into a distributed query plan according to the specific operator execution mode and the specific distribution of data. The distributed query plan is composed of multiple fragments, each fragment is responsible for a part of the query plan, and the data is transmitted between the fragments through the ExchangeNode operator."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"        \u250C\u2500\u2500\u2500\u2500\u2510\n        \u2502Sort\u2502\n        \u2502F1 \u2502\n        \u2514\u2500\u2500\u2500\u2500\u2518\n           \u2502\n     \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502Aggregation\u2502\n     \u2502F1 \u2502\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2502\n        \u250C\u2500\u2500\u2500\u2500\u2510\n        \u2502Join\u2502\n        \u2502F1 \u2502\n        \u2514\u2500\u2500\u2500\u2500\u2518\n    \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2510\n\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Scan-1\u2502 \u2502ExchangeNode\u2502\n\u2502F1 \u2502 \u2502F1 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                \u2502\n          \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n          \u2502DataStreamDink\u2502\n          \u2502F2 \u2502\n          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                \u2502\n            \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n            \u2502Scan-2\u2502\n            \u2502F2 \u2502\n            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,a.jsx)(n.p,{children:"As shown above, we divided the stand-alone plan into two Fragments: F1 and F2. Data is transmitted between two Fragments through an ExchangeNode."}),"\n",(0,a.jsx)(n.p,{children:"And a Fragment will be further divided into multiple Instances. Instance is the final concrete execution instance. Dividing into multiple Instances helps to make full use of machine resources and improve the execution concurrency of a Fragment."}),"\n",(0,a.jsx)(n.h2,{id:"view-query-plan",children:"View Query Plan"}),"\n",(0,a.jsx)(n.p,{children:"You can view the execution plan of a SQL through the following three commands."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"EXPLAIN GRAPH select ...;"})," OR ",(0,a.jsx)(n.code,{children:"DESC GRAPH select ...;"})," These commands provide a graphical representation of the execution plan."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"EXPLAIN select ...;"})," This command displays a textual representation of the execution plan for the specified SQL query."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"EXPLAIN VERBOSE select ...;"})," Similar to the previous command, this command provides a more detailed output."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"EXPLAIN PARSED PLAN select ...;"})," This command returns the parsed execution plan of the SQL query. It displays the plan trees and information about the logical operators involved in query processing."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"EXPLAIN ANALYZED PLAN select ...;"})," This command returns the analyzed execution plan for the SQL query."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"EXPLAIN REWRITTEN PLAN select ...;"})," This command shows the rewritten execution plan after applying any query transformations or optimizations performed by the database engine."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"EXPLAIN OPTIMIZED PLAN select ...;"})," This command shows the best execution plan after CBO."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"EXPLAIN SHAPE PLAN select ...;"})," This command presents the simplified execution plan with a focus on how the query is shaped and structured."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The first command displays a query plan graphically. This command can more intuitively display the tree structure of the query plan and the division of Fragments:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"mysql> explain graph select tbl1.k1, sum(tbl1.k2) from tbl1 join tbl2 on tbl1.k1 = tbl2.k1 group by tbl1.k1 order by tbl1.k1;\n+---------------------------------------------------------------------------------------------------------------------------------+\n| Explain String                                                                                                                  |\n+---------------------------------------------------------------------------------------------------------------------------------+\n|                                                                                                                                 |\n|              \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                                  |\n|              \u2502[9: ResultSink]\u2502                                                                                                  |\n|              \u2502[Fragment: 4]  \u2502                                                                                                  |\n|              \u2502RESULT SINK    \u2502                                                                                                  |\n|              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                                  |\n|                      \u2502                                                                                                          |\n|           \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                               |\n|           \u2502[9: MERGING-EXCHANGE]\u2502                                                                                               |\n|           \u2502[Fragment: 4]        \u2502                                                                                               |\n|           \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                               |\n|                      \u2502                                                                                                          |\n|            \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                                |\n|            \u2502[9: DataStreamSink]\u2502                                                                                                |\n|            \u2502[Fragment: 3]      \u2502                                                                                                |\n|            \u2502STREAM DATA SINK   \u2502                                                                                                |\n|            \u2502  EXCHANGE ID: 09  \u2502                                                                                                |\n|            \u2502  UNPARTITIONED    \u2502                                                                                                |\n|            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                                |\n|                      \u2502                                                                                                          |\n|               \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                                   |\n|               \u2502[4: TOP-N]   \u2502                                                                                                   |\n|               \u2502[Fragment: 3]\u2502                                                                                                   |\n|               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                                   |\n|                      \u2502                                                                                                          |\n|      \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                          |\n|      \u2502[8: AGGREGATE (merge finalize)]\u2502                                                                                          |\n|      \u2502[Fragment: 3]                  \u2502                                                                                          |\n|      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                          |\n|                      \u2502                                                                                                          |\n|               \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                                   |\n|               \u2502[7: EXCHANGE]\u2502                                                                                                   |\n|               \u2502[Fragment: 3]\u2502                                                                                                   |\n|               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                                   |\n|                      \u2502                                                                                                          |\n|            \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                                |\n|            \u2502[7: DataStreamSink]\u2502                                                                                                |\n|            \u2502[Fragment: 2]      \u2502                                                                                                |\n|            \u2502STREAM DATA SINK   \u2502                                                                                                |\n|            \u2502  EXCHANGE ID: 07  \u2502                                                                                                |\n|            \u2502  HASH_PARTITIONED \u2502                                                                                                |\n|            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                                |\n|                      \u2502                                                                                                          |\n|     \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                         |\n|     \u2502[3: AGGREGATE (update serialize)]\u2502                                                                                         |\n|     \u2502[Fragment: 2]                    \u2502                                                                                         |\n|     \u2502STREAMING                        \u2502                                                                                         |\n|     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                         |\n|                      \u2502                                                                                                          |\n|     \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                         |\n|     \u2502[2: HASH JOIN]                   \u2502                                                                                         |\n|     \u2502[Fragment: 2]                    \u2502                                                                                         |\n|     \u2502join op: INNER JOIN (PARTITIONED)\u2502                                                                                         |\n|     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                         |\n|           \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                               |\n|    \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                        |\n|    \u2502[5: EXCHANGE]\u2502       \u2502[6: EXCHANGE]\u2502                                                                                        |\n|    \u2502[Fragment: 2]\u2502       \u2502[Fragment: 2]\u2502                                                                                        |\n|    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                        |\n|           \u2502                     \u2502                                                                                               |\n| \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                     |\n| \u2502[5: DataStreamSink]\u2502 \u2502[6: DataStreamSink]\u2502                                                                                     |\n| \u2502[Fragment: 0]      \u2502 \u2502[Fragment: 1]      \u2502                                                                                     |\n| \u2502STREAM DATA SINK   \u2502 \u2502STREAM DATA SINK   \u2502                                                                                     |\n| \u2502  EXCHANGE ID: 05  \u2502 \u2502  EXCHANGE ID: 06  \u2502                                                                                     |\n| \u2502  HASH_PARTITIONED \u2502 \u2502  HASH_PARTITIONED \u2502                                                                                     |\n| \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                     |\n|           \u2502                     \u2502                                                                                               |\n|  \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                      |\n|  \u2502[0: OlapScanNode]\u2502   \u2502[1: OlapScanNode]\u2502                                                                                      |\n|  \u2502[Fragment: 0]    \u2502   \u2502[Fragment: 1]    \u2502                                                                                      |\n|  \u2502TABLE: tbl1      \u2502   \u2502TABLE: tbl2      \u2502                                                                                      |\n|  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                      |\n+---------------------------------------------------------------------------------------------------------------------------------+\n"})}),"\n",(0,a.jsxs)(n.p,{children:["As can be seen from the figure, the query plan tree is divided into 5 fragments: 0, 1, 2, 3, and 4. For example, ",(0,a.jsx)(n.code,{children:"[Fragment: 0]"})," on the ",(0,a.jsx)(n.code,{children:"OlapScanNode"})," node indicates that this node belongs to Fragment 0. Data is transferred between each Fragment through DataStreamSink and ExchangeNode."]}),"\n",(0,a.jsx)(n.p,{children:"The graphics command only displays the simplified node information. If you need to view more specific node information, such as the filter conditions pushed to the node as follows, you need to view the more detailed text version information through the second command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"mysql> explain select tbl1.k1, sum(tbl1.k2) from tbl1 join tbl2 on tbl1.k1 = tbl2.k1 group by tbl1.k1 order by tbl1.k1;\n+----------------------------------------------------------------------------------+\n| Explain String                                                                   |\n+----------------------------------------------------------------------------------+\n| PLAN FRAGMENT 0                                                                  |\n|  OUTPUT EXPRS:<slot 5> <slot 3> `tbl1`.`k1` | <slot 6> <slot 4> sum(`tbl1`.`k2`) |\n|   PARTITION: UNPARTITIONED                                                       |\n|                                                                                  |\n|   RESULT SINK                                                                    |\n|                                                                                  |\n|   9:MERGING-EXCHANGE                                                             |\n|      limit: 65535                                                                |\n|                                                                                  |\n| PLAN FRAGMENT 1                                                                  |\n|  OUTPUT EXPRS:                                                                   |\n|   PARTITION: HASH_PARTITIONED: <slot 3> `tbl1`.`k1`                              |\n|                                                                                  |\n|   STREAM DATA SINK                                                               |\n|     EXCHANGE ID: 09                                                              |\n|     UNPARTITIONED                                                                |\n|                                                                                  |\n|   4:TOP-N                                                                        |\n|   |  order by: <slot 5> <slot 3> `tbl1`.`k1` ASC                                 |\n|   |  offset: 0                                                                   |\n|   |  limit: 65535                                                                |\n|   |                                                                              |\n|   8:AGGREGATE (merge finalize)                                                   |\n|   |  output: sum(<slot 4> sum(`tbl1`.`k2`))                                      |\n|   |  group by: <slot 3> `tbl1`.`k1`                                              |\n|   |  cardinality=-1                                                              |\n|   |                                                                              |\n|   7:EXCHANGE                                                                     |\n|                                                                                  |\n| PLAN FRAGMENT 2                                                                  |\n|  OUTPUT EXPRS:                                                                   |\n|   PARTITION: HASH_PARTITIONED: `tbl1`.`k1`                                       |\n|                                                                                  |\n|   STREAM DATA SINK                                                               |\n|     EXCHANGE ID: 07                                                              |\n|     HASH_PARTITIONED: <slot 3> `tbl1`.`k1`                                       |\n|                                                                                  |\n|   3:AGGREGATE (update serialize)                                                 |\n|   |  STREAMING                                                                   |\n|   |  output: sum(`tbl1`.`k2`)                                                    |\n|   |  group by: `tbl1`.`k1`                                                       |\n|   |  cardinality=-1                                                              |\n|   |                                                                              |\n|   2:HASH JOIN                                                                    |\n|   |  join op: INNER JOIN (PARTITIONED)                                           |\n|   |  runtime filter: false                                                       |\n|   |  hash predicates:                                                            |\n|   |  colocate: false, reason: table not in the same group                        |\n|   |  equal join conjunct: `tbl1`.`k1` = `tbl2`.`k1`                              |\n|   |  cardinality=2                                                               |\n|   |                                                                              |\n|   |----6:EXCHANGE                                                                |\n|   |                                                                              |\n|   5:EXCHANGE                                                                     |\n|                                                                                  |\n| PLAN FRAGMENT 3                                                                  |\n|  OUTPUT EXPRS:                                                                   |\n|   PARTITION: RANDOM                                                              |\n|                                                                                  |\n|   STREAM DATA SINK                                                               |\n|     EXCHANGE ID: 06                                                              |\n|     HASH_PARTITIONED: `tbl2`.`k1`                                                |\n|                                                                                  |\n|   1:OlapScanNode                                                                 |\n|      TABLE: tbl2                                                                 |\n|      PREAGGREGATION: ON                                                          |\n|      partitions=1/1                                                              |\n|      rollup: tbl2                                                                |\n|      tabletRatio=3/3                                                             |\n|      tabletList=105104776,105104780,105104784                                    |\n|      cardinality=1                                                               |\n|      avgRowSize=4.0                                                              |\n|      numNodes=6                                                                  |\n|                                                                                  |\n| PLAN FRAGMENT 4                                                                  |\n|  OUTPUT EXPRS:                                                                   |\n|   PARTITION: RANDOM                                                              |\n|                                                                                  |\n|   STREAM DATA SINK                                                               |\n|     EXCHANGE ID: 05                                                              |\n|     HASH_PARTITIONED: `tbl1`.`k1`                                                |\n|                                                                                  |\n|   0:OlapScanNode                                                                 |\n|      TABLE: tbl1                                                                 |\n|      PREAGGREGATION: ON                                                          |\n|      partitions=1/1                                                              |\n|      rollup: tbl1                                                                |\n|      tabletRatio=3/3                                                             |\n|      tabletList=105104752,105104763,105104767                                    |\n|      cardinality=2                                                               |\n|      avgRowSize=8.0                                                              |\n|      numNodes=6                                                                  |\n+----------------------------------------------------------------------------------+\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The third command ",(0,a.jsx)(n.code,{children:"explain verbose select ...;"})," gives you more details than the second command."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"mysql> explain verbose select tbl1.k1, sum(tbl1.k2) from tbl1 join tbl2 on tbl1.k1 = tbl2.k1 group by tbl1.k1 order by tbl1.k1;\n+---------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Explain String                                                                                                                                          |\n+---------------------------------------------------------------------------------------------------------------------------------------------------------+\n| PLAN FRAGMENT 0                                                                                                                                         |\n|   OUTPUT EXPRS:<slot 5> <slot 3> `tbl1`.`k1` | <slot 6> <slot 4> sum(`tbl1`.`k2`)                                                                       |\n|   PARTITION: UNPARTITIONED                                                                                                                              |\n|                                                                                                                                                         |\n|   VRESULT SINK                                                                                                                                          |\n|                                                                                                                                                         |\n|   6:VMERGING-EXCHANGE                                                                                                                                   |\n|      limit: 65535                                                                                                                                       |\n|      tuple ids: 3                                                                                                                                       |\n|                                                                                                                                                         |\n| PLAN FRAGMENT 1                                                                                                                                         |\n|                                                                                                                                                         |\n|   PARTITION: HASH_PARTITIONED: `default_cluster:test`.`tbl1`.`k2`                                                                                       |\n|                                                                                                                                                         |\n|   STREAM DATA SINK                                                                                                                                      |\n|     EXCHANGE ID: 06                                                                                                                                     |\n|     UNPARTITIONED                                                                                                                                       |\n|                                                                                                                                                         |\n|   4:VTOP-N                                                                                                                                              |\n|   |  order by: <slot 5> <slot 3> `tbl1`.`k1` ASC                                                                                                        |\n|   |  offset: 0                                                                                                                                          |\n|   |  limit: 65535                                                                                                                                       |\n|   |  tuple ids: 3                                                                                                                                       |\n|   |                                                                                                                                                     |\n|   3:VAGGREGATE (update finalize)                                                                                                                        |\n|   |  output: sum(<slot 8>)                                                                                                                              |\n|   |  group by: <slot 7>                                                                                                                                 |\n|   |  cardinality=-1                                                                                                                                     |\n|   |  tuple ids: 2                                                                                                                                       |\n|   |                                                                                                                                                     |\n|   2:VHASH JOIN                                                                                                                                          |\n|   |  join op: INNER JOIN(BROADCAST)[Tables are not in the same group]                                                                                   |\n|   |  equal join conjunct: CAST(`tbl1`.`k1` AS DATETIME) = `tbl2`.`k1`                                                                                   |\n|   |  runtime filters: RF000[in_or_bloom] <- `tbl2`.`k1`                                                                                                 |\n|   |  cardinality=0                                                                                                                                      |\n|   |  vec output tuple id: 4  |  tuple ids: 0 1                                                                                                          |\n|   |                                                                                                                                                     |\n|   |----5:VEXCHANGE                                                                                                                                      |\n|   |       tuple ids: 1                                                                                                                                  |\n|   |                                                                                                                                                     |\n|   0:VOlapScanNode                                                                                                                                       |\n|      TABLE: tbl1(null), PREAGGREGATION: OFF. Reason: the type of agg on StorageEngine's Key column should only be MAX or MIN.agg expr: sum(`tbl1`.`k2`) |\n|      runtime filters: RF000[in_or_bloom] -> CAST(`tbl1`.`k1` AS DATETIME)                                                                               |\n|      partitions=0/1, tablets=0/0, tabletList=                                                                                                           |\n|      cardinality=0, avgRowSize=20.0, numNodes=1                                                                                                         |\n|      tuple ids: 0                                                                                                                                       |\n|                                                                                                                                                         |\n| PLAN FRAGMENT 2                                                                                                                                         |\n|                                                                                                                                                         |\n|   PARTITION: HASH_PARTITIONED: `default_cluster:test`.`tbl2`.`k2`                                                                                       |\n|                                                                                                                                                         |\n|   STREAM DATA SINK                                                                                                                                      |\n|     EXCHANGE ID: 05                                                                                                                                     |\n|     UNPARTITIONED                                                                                                                                       |\n|                                                                                                                                                         |\n|   1:VOlapScanNode                                                                                                                                       |\n|      TABLE: tbl2(null), PREAGGREGATION: OFF. Reason: null                                                                                               |\n|      partitions=0/1, tablets=0/0, tabletList=                                                                                                           |\n|      cardinality=0, avgRowSize=16.0, numNodes=1                                                                                                         |\n|      tuple ids: 1                                                                                                                                       |\n|                                                                                                                                                         |\n| Tuples:                                                                                                                                                 |\n| TupleDescriptor{id=0, tbl=tbl1, byteSize=32, materialized=true}                                                                                         |\n|   SlotDescriptor{id=0, col=k1, type=DATE}                                                                                                               |\n|     parent=0                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=16                                                                                                                                         |\n|     byteOffset=16                                                                                                                                       |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=1                                                                                                                                           |\n|                                                                                                                                                         |\n|   SlotDescriptor{id=2, col=k2, type=INT}                                                                                                                |\n|     parent=0                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=4                                                                                                                                          |\n|     byteOffset=0                                                                                                                                        |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=0                                                                                                                                           |\n|                                                                                                                                                         |\n|                                                                                                                                                         |\n| TupleDescriptor{id=1, tbl=tbl2, byteSize=16, materialized=true}                                                                                         |\n|   SlotDescriptor{id=1, col=k1, type=DATETIME}                                                                                                           |\n|     parent=1                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=16                                                                                                                                         |\n|     byteOffset=0                                                                                                                                        |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=0                                                                                                                                           |\n|                                                                                                                                                         |\n|                                                                                                                                                         |\n| TupleDescriptor{id=2, tbl=null, byteSize=32, materialized=true}                                                                                         |\n|   SlotDescriptor{id=3, col=null, type=DATE}                                                                                                             |\n|     parent=2                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=16                                                                                                                                         |\n|     byteOffset=16                                                                                                                                       |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=1                                                                                                                                           |\n|                                                                                                                                                         |\n|   SlotDescriptor{id=4, col=null, type=BIGINT}                                                                                                           |\n|     parent=2                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=8                                                                                                                                          |\n|     byteOffset=0                                                                                                                                        |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=0                                                                                                                                           |\n|                                                                                                                                                         |\n|                                                                                                                                                         |\n| TupleDescriptor{id=3, tbl=null, byteSize=32, materialized=true}                                                                                         |\n|   SlotDescriptor{id=5, col=null, type=DATE}                                                                                                             |\n|     parent=3                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=16                                                                                                                                         |\n|     byteOffset=16                                                                                                                                       |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=1                                                                                                                                           |\n|                                                                                                                                                         |\n|   SlotDescriptor{id=6, col=null, type=BIGINT}                                                                                                           |\n|     parent=3                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=8                                                                                                                                          |\n|     byteOffset=0                                                                                                                                        |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=0                                                                                                                                           |\n|                                                                                                                                                         |\n|                                                                                                                                                         |\n| TupleDescriptor{id=4, tbl=null, byteSize=48, materialized=true}                                                                                         |\n|   SlotDescriptor{id=7, col=k1, type=DATE}                                                                                                               |\n|     parent=4                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=16                                                                                                                                         |\n|     byteOffset=16                                                                                                                                       |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=1                                                                                                                                           |\n|                                                                                                                                                         |\n|   SlotDescriptor{id=8, col=k2, type=INT}                                                                                                                |\n|     parent=4                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=4                                                                                                                                          |\n|     byteOffset=0                                                                                                                                        |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=0                                                                                                                                           |\n|                                                                                                                                                         |\n|   SlotDescriptor{id=9, col=k1, type=DATETIME}                                                                                                           |\n|     parent=4                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=16                                                                                                                                         |\n|     byteOffset=32                                                                                                                                       |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=2                                                                                                                                           |\n+---------------------------------------------------------------------------------------------------------------------------------------------------------+\n160 rows in set (0.00 sec)\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"The information displayed in the query plan is still being standardized and improved, and we will introduce it in detail in subsequent articles."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"view-query-profile",children:"View Query Profile"}),"\n",(0,a.jsxs)(n.p,{children:["The user can open the session variable ",(0,a.jsx)(n.code,{children:"is_report_success"})," with the following command:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SET is_report_success=true;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Then execute the query, and Doris will generate a Profile of the query. Profile contains the specific execution of a query for each node, which helps us analyze query bottlenecks."}),"\n",(0,a.jsx)(n.p,{children:"After executing the query, we can first get the Profile list with the following command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'mysql> show query profile "/"\\G\n**************************** 1. row ******************** ******\n   QueryId: c257c52f93e149ee-ace8ac14e8c9fef9\n      User: root\n DefaultDb: default_cluster:db1\n       SQL: select tbl1.k1, sum(tbl1.k2) from tbl1 join tbl2 on tbl1.k1 = tbl2.k1 group by tbl1.k1 order by tbl1.k1\n QueryType: Query\n StartTime: 2021-04-08 11:30:50\n   EndTime: 2021-04-08 11:30:50\n TotalTime: 9ms\nQueryState: EOF\n'})}),"\n",(0,a.jsx)(n.p,{children:"This command will list all currently saved profiles. Each row corresponds to a query. We can select the QueryId corresponding to the Profile we want to see to see the specific situation."}),"\n",(0,a.jsx)(n.p,{children:"Viewing a Profile is divided into 3 steps:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"View the overall execution plan tree"}),"\n",(0,a.jsx)(n.p,{children:"This step is mainly used to analyze the execution plan as a whole and view the execution time of each Fragment."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'mysql> show query profile "/c257c52f93e149ee-ace8ac14e8c9fef9"\\G\n*************************** 1. row ***************************\nFragments:\n             \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             \u2502[-1: DataBufferSender]\u2502\n             \u2502Fragment: 0           \u2502\n             \u2502MaxActiveTime: 6.626ms\u2502\n             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                         \u2502\n               \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n               \u2502[9: EXCHANGE_NODE]\u2502\n               \u2502Fragment: 0       \u2502\n               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                         \u2502\n             \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             \u2502[9: DataStreamSender] \u2502\n             \u2502Fragment: 1           \u2502\n             \u2502MaxActiveTime: 5.449ms\u2502\n             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                         \u2502\n                 \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                 \u2502[4: SORT_NODE]\u2502\n                 \u2502Fragment: 1   \u2502\n                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                        \u250C\u2518\n             \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             \u2502[8: AGGREGATION_NODE]\u2502\n             \u2502Fragment: 1          \u2502\n             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                        \u2514\u2510\n               \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n               \u2502[7: EXCHANGE_NODE]\u2502\n               \u2502Fragment: 1       \u2502\n               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                         \u2502\n             \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             \u2502[7: DataStreamSender] \u2502\n             \u2502Fragment: 2           \u2502\n             \u2502MaxActiveTime: 3.505ms\u2502\n             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                        \u250C\u2518\n             \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             \u2502[3: AGGREGATION_NODE]\u2502\n             \u2502Fragment: 2          \u2502\n             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                        \u2502\n              \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n              \u2502[2: HASH_JOIN_NODE]\u2502\n              \u2502Fragment: 2        \u2502\n              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n \u2502[5: EXCHANGE_NODE]\u2502      \u2502[6: EXCHANGE_NODE]\u2502\n \u2502Fragment: 2       \u2502      \u2502Fragment: 2       \u2502\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2502                         \u2502\n\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502[5: DataStreamSender]\u2502 \u2502[6: DataStreamSender]   \u2502\n\u2502Fragment: 4          \u2502 \u2502Fragment: 3             \u2502\n\u2502MaxActiveTime: 1.87ms\u2502 \u2502MaxActiveTime: 636.767us\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2502                        \u250C\u2518\n \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n \u2502[0: OLAP_SCAN_NODE]\u2502    \u2502[1: OLAP_SCAN_NODE]\u2502\n \u2502Fragment: 4        \u2502    \u2502Fragment: 3        \u2502\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2502                        \u2502\n    \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510          \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502[OlapScanner]\u2502          \u2502[OlapScanner]\u2502\n    \u2502Fragment: 4  \u2502          \u2502Fragment: 3  \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2502                        \u2502\n  \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  \u2502[SegmentIterator]\u2502      \u2502[SegmentIterator]\u2502\n  \u2502Fragment: 4      \u2502      \u2502Fragment: 3      \u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n1 row in set (0.02 sec)\n'})}),"\n",(0,a.jsx)(n.p,{children:"As shown in the figure above, each node is marked with the Fragment to which it belongs, and at the Sender node of each Fragment, the execution time of the Fragment is marked. This time-consuming is the longest of all Instance execution times under Fragment. This helps us find the most time-consuming Fragment from an overall perspective."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"View the Instance list under the specific Fragment"}),"\n",(0,a.jsx)(n.p,{children:"For example, if we find that Fragment 1 takes the longest time, we can continue to view the Instance list of Fragment 1:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'mysql> show query profile "/c257c52f93e149ee-ace8ac14e8c9fef9/1";\n+-----------------------------------+-------------------+------------+\n| Instances                         | Host              | ActiveTime |\n+-----------------------------------+-------------------+------------+\n| c257c52f93e149ee-ace8ac14e8c9ff03 | 10.200.00.01:9060 | 5.449ms    |\n| c257c52f93e149ee-ace8ac14e8c9ff05 | 10.200.00.02:9060 | 5.367ms    |\n| c257c52f93e149ee-ace8ac14e8c9ff04 | 10.200.00.03:9060 | 5.358ms    |\n+-----------------------------------+-------------------+------------+ \n'})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"This shows the execution nodes and time consumption of all three Instances on Fragment 1."}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"View the specific Instance"}),"\n",(0,a.jsx)(n.p,{children:"We can continue to view the detailed profile of each operator on a specific Instance:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'mysql> show query profile "/c257c52f93e149ee-ace8ac14e8c9fef9/1/c257c52f93e149ee-ace8ac14e8c9ff03"\\G\n**************************** 1. row ******************** ******\nInstance:\n \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n \u2502[9: DataStreamSender] \u2502\n \u2502(Active: 37.222us, non-child: 0.40) \u2502\n \u2502 - Counters: \u2502\n \u2502 - BytesSent: 0.00 \u2502\n \u2502 - IgnoreRows: 0 \u2502\n \u2502 - OverallThroughput: 0.0 /sec \u2502\n \u2502 - PeakMemoryUsage: 8.00 KB \u2502\n \u2502 - SerializeBatchTime: 0ns \u2502\n \u2502 - UncompressedRowBatchSize: 0.00 \u2502\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                     \u2514\u2510\n                      \u2502\n    \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502[4: SORT_NODE] \u2502\n    \u2502(Active: 5.421ms, non-child: 0.71)\u2502\n    \u2502 - Counters: \u2502\n    \u2502 - PeakMemoryUsage: 12.00 KB \u2502\n    \u2502 - RowsReturned: 0 \u2502\n    \u2502 - RowsReturnedRate: 0 \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                     \u250C\u2518\n                     \u2502\n   \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502[8: AGGREGATION_NODE] \u2502\n   \u2502(Active: 5.355ms, non-child: 10.68)\u2502\n   \u2502 - Counters: \u2502\n   \u2502 - BuildTime: 3.701us \u2502\n   \u2502 - GetResultsTime: 0ns \u2502\n   \u2502 - HTResize: 0 \u2502\n   \u2502 - HTResizeTime: 1.211us \u2502\n   \u2502 - HashBuckets: 0 \u2502\n   \u2502 - HashCollisions: 0 \u2502\n   \u2502 - HashFailedProbe: 0 \u2502\n   \u2502 - HashFilledBuckets: 0 \u2502\n   \u2502 - HashProbe: 0 \u2502\n   \u2502 - HashTravelLength: 0 \u2502\n   \u2502 - LargestPartitionPercent: 0 \u2502\n   \u2502 - MaxPartitionLevel: 0 \u2502\n   \u2502 - NumRepartitions: 0 \u2502\n   \u2502 - PartitionsCreated: 16 \u2502\n   \u2502 - PeakMemoryUsage: 34.02 MB \u2502\n   \u2502 - RowsProcessed: 0 \u2502\n   \u2502 - RowsRepartitioned: 0 \u2502\n   \u2502 - RowsReturned: 0 \u2502\n   \u2502 - RowsReturnedRate: 0 \u2502\n   \u2502 - SpilledPartitions: 0 \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                     \u2514\u2510\n                      \u2502\n\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502[7: EXCHANGE_NODE] \u2502\n\u2502(Active: 4.360ms, non-child: 46.84) \u2502\n\u2502 - Counters: \u2502\n\u2502 - BytesReceived: 0.00 \u2502\n\u2502 - ConvertRowBatchTime: 387ns \u2502\n\u2502 - DataArrivalWaitTime: 4.357ms \u2502\n\u2502 - DeserializeRowBatchTimer: 0ns \u2502\n\u2502 - FirstBatchArrivalWaitTime: 4.356ms\u2502\n\u2502 - PeakMemoryUsage: 0.00 \u2502\n\u2502 - RowsReturned: 0 \u2502\n\u2502 - RowsReturnedRate: 0 \u2502\n\u2502 - SendersBlockedTotalTimer(*): 0ns \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n'})}),"\n",(0,a.jsx)(n.p,{children:"The above figure shows the specific profiles of each operator of Instance c257c52f93e149ee-ace8ac14e8c9ff03 in Fragment 1."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Through the above three steps, we can gradually check the performance bottleneck of a SQL."})]})}function u(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return s}});var i=t(667294);let a={},r=i.createContext(a);function s(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);