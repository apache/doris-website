"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["985371"],{924490:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>a,metadata:()=>s,assets:()=>c,toc:()=>d,contentTitle:()=>r});var s=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/date-time-functions/milliseconds-sub","title":"MILLISECONDS_SUB","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/date-time-functions/milliseconds-sub.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/date-time-functions","slug":"/sql-manual/sql-functions/scalar-functions/date-time-functions/milliseconds-sub","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/milliseconds-sub","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"MILLISECONDS_SUB","language":"en"},"sidebar":"docs","previous":{"title":"MILLISECONDS_DIFF","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/milliseconds-diff"},"next":{"title":"MINUTE","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/minute"}}'),i=t("785893"),l=t("250065");let a={title:"MILLISECONDS_SUB",language:"en"},r=void 0,c={},d=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function o(e){let n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"MILLISECONDS_SUB"})," function subtracts a specified number of milliseconds from the input datetime value and returns the resulting new datetime value. This function supports processing ",(0,i.jsx)(n.code,{children:"DATETIME"})," types."]}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"MILLISECONDS_SUB(`<datetime>`, `<delta>`)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<datetime>"})}),(0,i.jsxs)(n.td,{children:["The input datetime value, of type ",(0,i.jsx)(n.code,{children:"DATETIME"}),". For specific datetime formats, see ",(0,i.jsx)(n.a,{href:"../../../../../docs/sql-manual/basic-element/sql-data-types/conversion/datetime-conversion",children:"datetime conversion"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<delta>"})}),(0,i.jsxs)(n.td,{children:["The number of milliseconds to subtract, of type ",(0,i.jsx)(n.code,{children:"BIGINT"}),". 1 second = 1,000 milliseconds = 1,000,000 microseconds."]})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a value of type ",(0,i.jsx)(n.code,{children:"DATETIME"}),", representing the result of subtracting the specified milliseconds from the base time."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"<delta>"})," is negative, the function behaves the same as adding the corresponding milliseconds to the base time."]}),"\n",(0,i.jsxs)(n.li,{children:["If the input is of ",(0,i.jsx)(n.code,{children:"DATE"})," type (only includes year, month, and day), the default time part is set to ",(0,i.jsx)(n.code,{children:"00:00:00.000"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["If the calculation result exceeds the valid range of the ",(0,i.jsx)(n.code,{children:"DATETIME"})," type (",(0,i.jsx)(n.code,{children:"0000-01-01 00:00:00"})," to ",(0,i.jsx)(n.code,{children:"9999-12-31 23:59:59.999999"}),"), an exception is thrown."]}),"\n",(0,i.jsxs)(n.li,{children:["If any parameter is ",(0,i.jsx)(n.code,{children:"NULL"}),", the function returns ",(0,i.jsx)(n.code,{children:"NULL"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Subtract 1 millisecond\nSELECT MILLISECONDS_SUB('2023-09-08 16:02:08.435123', 1);\n+---------------------------------------------------+\n| MILLISECONDS_SUB('2023-09-08 16:02:08.435123', 1) |\n+---------------------------------------------------+\n| 2023-09-08 16:02:08.434123                        |\n+---------------------------------------------------+\n\n-- Negative delta (equivalent to addition)\nSELECT MILLISECONDS_SUB('2023-05-01 10:00:00.200', -300);\n+---------------------------------------------------+\n| MILLISECONDS_SUB('2023-05-01 10:00:00.200', -300) |\n+---------------------------------------------------+\n| 2023-05-01 10:00:00.500000                        |\n+---------------------------------------------------+\n\n-- Input is of DATE type (default time is 00:00:00.000)\nSELECT MILLISECONDS_SUB('2023-01-01', 1500);\n+--------------------------------------+\n| MILLISECONDS_SUB('2023-01-01', 1500) |\n+--------------------------------------+\n| 2022-12-31 23:59:58.500000           |\n+--------------------------------------+\n\n-- Calculation result exceeds the datetime range, throws an exception\nSELECT MILLISECONDS_SUB('0000-01-01',-1500);\nERROR 1105 (HY000): errCode = 2, detailMessage = (10.16.10.3)[E-218]Operation milliseconds_add of 0000-01-01 00:00:00, -1500 out of range\n\n-- Any parameter is NULL, returns NULL\nSELECT MILLISECONDS_SUB(NULL, 100), MILLISECONDS_SUB('2023-01-01', NULL) AS after_sub;\n+------------------------------+----------------------------+\n| milliseconds_sub(NULL, 100)  | after_sub                  |\n+------------------------------+----------------------------+\n| NULL                         | NULL                       |\n+------------------------------+----------------------------+\n\n"})})]})}function u(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return r},a:function(){return a}});var s=t(667294);let i={},l=s.createContext(i);function a(e){let n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);