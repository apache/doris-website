"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["854254"],{707692:function(n,e,s){s.r(e),s.d(e,{default:()=>u,frontMatter:()=>l,metadata:()=>t,assets:()=>c,toc:()=>o,contentTitle:()=>a});var t=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/string-functions/hex","title":"HEX","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/string-functions/hex.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/string-functions","slug":"/sql-manual/sql-functions/scalar-functions/string-functions/hex","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/hex","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"HEX","language":"en"},"sidebar":"docs","previous":{"title":"FORMAT_NUMBER","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/format-number"},"next":{"title":"INITCAP","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/initcap"}}'),r=s("785893"),i=s("250065");let l={title:"HEX",language:"en"},a=void 0,c={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function d(n){let e={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(e.p,{children:"The HEX function converts input parameters to hexadecimal string representation. This function is MySQL-compatible and supports both numeric and string input types with different conversion rules."}),"\n",(0,r.jsx)(e.p,{children:"If the input parameter is a number (BIGINT type), returns the hexadecimal string representation of that number."}),"\n",(0,r.jsx)(e.p,{children:"If the input parameter is a string, converts each character (by byte) to two hexadecimal characters, then concatenates all converted characters into the result string."}),"\n",(0,r.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"HEX(<expr>)\n"})}),"\n",(0,r.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Parameter"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsx)(e.tbody,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<expr>"})}),(0,r.jsx)(e.td,{children:"Input parameter, can be BIGINT type number or VARCHAR type string"})]})})]}),"\n",(0,r.jsx)(e.h2,{id:"return-value",children:"Return Value"}),"\n",(0,r.jsx)(e.p,{children:"Returns VARCHAR type, representing the hexadecimal representation of the input parameter."}),"\n",(0,r.jsx)(e.p,{children:"Conversion rules:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Numeric input: Converts to corresponding hexadecimal value (within BIGINT range)"}),"\n",(0,r.jsx)(e.li,{children:"String input: Each byte converts to two uppercase hexadecimal characters"}),"\n",(0,r.jsx)(e.li,{children:"Negative numbers are converted in two's complement binary form"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Special cases:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"If parameter is NULL, returns NULL"}),"\n",(0,r.jsx)(e.li,{children:"Number 0 converts to '0'"}),"\n",(0,r.jsx)(e.li,{children:"Empty string converts to empty string"}),"\n",(0,r.jsx)(e.li,{children:"Negative numbers convert to hexadecimal representation of 64-bit two's complement"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Basic number conversion"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT HEX(12), HEX(-1);\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+---------+------------------+\n| HEX(12) | HEX(-1)          |\n+---------+------------------+\n| C       | FFFFFFFFFFFFFFFF |\n+---------+------------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"2",children:["\n",(0,r.jsx)(e.li,{children:"String conversion"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT HEX('1'), HEX('@'), HEX('12');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+----------+----------+-----------+\n| HEX('1') | HEX('@') | HEX('12') |\n+----------+----------+-----------+\n| 31       | 40       | 3132      |\n+----------+----------+-----------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"3",children:["\n",(0,r.jsx)(e.li,{children:"Large integer conversion"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT HEX(255), HEX(65535), HEX(16777215);\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+----------+------------+----------------+\n| HEX(255) | HEX(65535) | HEX(16777215)  |\n+----------+------------+----------------+\n| FF       | FFFF       | FFFFFF         |\n+----------+------------+----------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"4",children:["\n",(0,r.jsx)(e.li,{children:"NULL value handling"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT HEX(NULL);\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+-----------+\n| HEX(NULL) |\n+-----------+\n| NULL      |\n+-----------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"5",children:["\n",(0,r.jsx)(e.li,{children:"Zero and empty string"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT HEX(0), HEX('');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+--------+--------+\n| HEX(0) | HEX('') |\n+--------+--------+\n| 0      |        |\n+--------+--------+\n"})})]})}function u(n={}){let{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},250065:function(n,e,s){s.d(e,{Z:function(){return a},a:function(){return l}});var t=s(667294);let r={},i=t.createContext(r);function l(n){let e=t.useContext(i);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:l(n.components),t.createElement(i.Provider,{value:e},n.children)}}}]);