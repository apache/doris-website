"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["234424"],{537309:function(n,e,s){s.r(e),s.d(e,{default:()=>u,frontMatter:()=>l,metadata:()=>i,assets:()=>c,toc:()=>d,contentTitle:()=>a});var i=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/ip-functions/ipv6-string-to-num","title":"IPV6_STRING_TO_NUM","description":"ipv6stringto_num","source":"@site/docs/sql-manual/sql-functions/scalar-functions/ip-functions/ipv6-string-to-num.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/ip-functions","slug":"/sql-manual/sql-functions/scalar-functions/ip-functions/ipv6-string-to-num","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/ip-functions/ipv6-string-to-num","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"IPV6_STRING_TO_NUM","language":"en"},"sidebar":"docs","previous":{"title":"IPV6_NUM_TO_STRING","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/ip-functions/ipv6-num-to-string"},"next":{"title":"IPV6_STRING_TO_NUM_OR_DEFAULT","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/ip-functions/ipv6-string-to-num-or-default"}}'),t=s("785893"),r=s("250065");let l={title:"IPV6_STRING_TO_NUM",language:"en"},a=void 0,c={},d=[{value:"ipv6_string_to_num",id:"ipv6_string_to_num",level:2},{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Return Value",id:"return-value",level:3},{value:"Usage Notes",id:"usage-notes",level:3},{value:"Examples",id:"examples",level:2},{value:"Keywords",id:"keywords",level:3}];function o(n){let e={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"ipv6_string_to_num",children:"ipv6_string_to_num"}),"\n",(0,t.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(e.p,{children:"The reverse function of IPv6NumToString, it accepts an IP address string and returns the IPv6 address in binary format."}),"\n",(0,t.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"IPV6_STRING_TO_NUM(<ipv6_string>)\n"})}),"\n",(0,t.jsx)(e.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"<ipv6_string>"}),": String type IPv6 address"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsx)(e.p,{children:"Return Type: VARCHAR (16-byte binary)"}),"\n",(0,t.jsx)(e.p,{children:"Return Value Meaning:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Returns the 16-byte binary encoding of IPv6"}),"\n",(0,t.jsx)(e.li,{children:"Throws an exception when input is NULL"}),"\n",(0,t.jsxs)(e.li,{children:["Throws an exception for invalid IP addresses or ",(0,t.jsx)(e.code,{children:"NULL"})," input"]}),"\n",(0,t.jsxs)(e.li,{children:["If input is valid IPv4 text, returns equivalent IPv6 address (",(0,t.jsx)(e.code,{children:"::ffff:<ipv4>"}),")"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"usage-notes",children:"Usage Notes"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Supports standard IPv6 text (including abbreviated and ",(0,t.jsx)(e.code,{children:"::"})," omitted forms)"]}),"\n",(0,t.jsx)(e.li,{children:"If input is valid IPv4 text, converts and returns IPv6's IPv4-Mapped representation"}),"\n",(0,t.jsx)(e.li,{children:"Does not support extended forms like CIDR, ports, square brackets, etc."}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsxs)(e.p,{children:["Convert IPv6 text ",(0,t.jsx)(e.code,{children:"1111::ffff"})," to 16-byte binary (displayed in hex)."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"select hex(ipv6_string_to_num('1111::ffff')) as v6;\n+----------------------------------+\n| v6                               |\n+----------------------------------+\n| 1111000000000000000000000000FFFF |\n+----------------------------------+\n"})}),"\n",(0,t.jsxs)(e.p,{children:["IPv4 text is automatically mapped to IPv6 (",(0,t.jsx)(e.code,{children:"::ffff:<ipv4>"}),"), then returned as 16-byte binary."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"select hex(ipv6_string_to_num('192.168.0.1')) as mapped;\n+----------------------------------+\n| mapped                           |\n+----------------------------------+\n| 00000000000000000000FFFFC0A80001 |\n+----------------------------------+\n"})}),"\n",(0,t.jsx)(e.p,{children:"Input NULL throws an exception"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"select hex(ipv6_string_to_num(NULL));\nERROR 1105 (HY000): errCode = 2, detailMessage = (...)[INVALID_ARGUMENT]Null Input, you may consider convert it to a valid default IPv6 value like '::' first\n"})}),"\n",(0,t.jsx)(e.p,{children:"Invalid input throws an exception."}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"select hex(ipv6_string_to_num('notaaddress'));\nERROR 1105 (HY000): errCode = 2, detailMessage = (...)[INVALID_ARGUMENT]Invalid IPv6 value\n"})}),"\n",(0,t.jsx)(e.h3,{id:"keywords",children:"Keywords"}),"\n",(0,t.jsx)(e.p,{children:"IPV6_STRING_TO_NUM"})]})}function u(n={}){let{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(o,{...n})}):o(n)}},250065:function(n,e,s){s.d(e,{Z:function(){return a},a:function(){return l}});var i=s(667294);let t={},r=i.createContext(t);function l(n){let e=i.useContext(r);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);