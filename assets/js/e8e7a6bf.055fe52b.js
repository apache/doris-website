"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["38392"],{405425:function(e,n,t){t.r(n),t.d(n,{default:()=>h,frontMatter:()=>d,metadata:()=>r,assets:()=>a,toc:()=>o,contentTitle:()=>i});var r=JSON.parse('{"id":"benchmark/ssb","title":"Star Schema Benchmark","description":"Star Schema Benchmark(SSB) is a lightweight performance test set in the data warehouse scenario. SSB provides a simplified star schema data based on TPC-H, which is mainly used to test the performance of multi-table JOIN query under star schema.  In addition, the industry usually flattens SSB into a wide table model (Referred as: SSB flat) to test the performance of the query engine, refer to Clickhouse.","source":"@site/versioned_docs/version-2.0/benchmark/ssb.md","sourceDirName":"benchmark","slug":"/benchmark/ssb","permalink":"/docs/2.0/benchmark/ssb","draft":false,"unlisted":false,"tags":[],"version":"2.0","frontMatter":{"title":"Star Schema Benchmark","language":"en"},"sidebar":"docs","previous":{"title":"Using rowsets","permalink":"/docs/2.0/admin-manual/rowsets"},"next":{"title":"TPC-H Benchmark","permalink":"/docs/2.0/benchmark/tpch"}}'),s=t("785893"),l=t("250065");let d={title:"Star Schema Benchmark",language:"en"},i="Star Schema Benchmark",a={},o=[{value:"1. Hardware Environment",id:"1-hardware-environment",level:2},{value:"2. Software Environment",id:"2-software-environment",level:2},{value:"3. Test Data Volume",id:"3-test-data-volume",level:2},{value:"4. SSB Flat Test Results",id:"4-ssb-flat-test-results",level:2},{value:"5. Standard SSB Test Results",id:"5-standard-ssb-test-results",level:2},{value:"6. Environment Preparation",id:"6-environment-preparation",level:2},{value:"7. Data Preparation",id:"7-data-preparation",level:2},{value:"7.1 Download and Install the SSB Data Generation Tool.",id:"71-download-and-install-the-ssb-data-generation-tool",level:3},{value:"7.2 Generate SSB Test Set",id:"72-generate-ssb-test-set",level:3},{value:"7.3 Create Table",id:"73-create-table",level:3},{value:"7.3.1 Prepare the <code>doris-cluster.conf</code> File.",id:"731-prepare-the-doris-clusterconf-file",level:4},{value:"7.3.2 Execute the Following Script to Generate and Create the SSB Table:",id:"732-execute-the-following-script-to-generate-and-create-the-ssb-table",level:4},{value:"7.4 Import data",id:"74-import-data",level:3},{value:"7.5 Checking Imported data",id:"75-checking-imported-data",level:3},{value:"7.6 Query Test",id:"76-query-test",level:3},{value:"7.6.1 SSB FLAT Test for SQL",id:"761-ssb-flat-test-for-sql",level:4},{value:"7.6.2 SSB Standard Test for SQL",id:"762-ssb-standard-test-for-sql",level:4}];function c(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"star-schema-benchmark",children:"Star Schema Benchmark"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.cs.umb.edu/~poneil/StarSchemaB.PDF",children:"Star Schema Benchmark(SSB)"})," is a lightweight performance test set in the data warehouse scenario. SSB provides a simplified star schema data based on ",(0,s.jsx)(n.a,{href:"http://www.tpc.org/tpch/",children:"TPC-H"}),", which is mainly used to test the performance of multi-table JOIN query under star schema.  In addition, the industry usually flattens SSB into a wide table model (Referred as: SSB flat) to test the performance of the query engine, refer to ",(0,s.jsx)(n.a,{href:"https://clickhouse.com/docs/zh/getting-started",children:"Clickhouse"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"This document mainly introduces the performance of Doris on the SSB 1000G test set."}),"\n",(0,s.jsx)(n.p,{children:"We tested 13 queries on the SSB standard test dataset based on Apache Doris version 2.0.15.1."}),"\n",(0,s.jsx)(n.h2,{id:"1-hardware-environment",children:"1. Hardware Environment"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Hardware"}),(0,s.jsx)(n.th,{children:"Configuration Instructions"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Number of Machines"}),(0,s.jsx)(n.td,{children:"4 Aliyun Virtual Machine (1FE\uFF0C3BEs)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"CPU"}),(0,s.jsx)(n.td,{children:"Intel Xeon (Ice Lake) Platinum 8369B 32C"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Memory"}),(0,s.jsx)(n.td,{children:"128G"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Disk"}),(0,s.jsx)(n.td,{children:"Enterprise SSD (PL0)"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"2-software-environment",children:"2. Software Environment"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Doris Deployed 3BEs and 1FE"}),"\n",(0,s.jsx)(n.li,{children:"Kernel Version: Linux version 5.15.0-101-generic"}),"\n",(0,s.jsx)(n.li,{children:"OS version: Ubuntu 20.04 LTS (Focal Fossa)"}),"\n",(0,s.jsx)(n.li,{children:"Doris software version: Apache Doris 2.0.15.1"}),"\n",(0,s.jsx)(n.li,{children:'JDK: openjdk version "1.8.0_352-352"'}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"3-test-data-volume",children:"3. Test Data Volume"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"SSB Table Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Rows"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Annotation"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"lineorder"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"5,999,989,709"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Commodity Order Details"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"customer"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"30,000,000"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Customer Information"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"part"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"2,000,000"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Parts Information"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"supplier"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"2,000,000"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Supplier Information"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"dates"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"2,556"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Date"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"lineorder_flat"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"5,999,989,709"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Wide Table after Data Flattening"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"4-ssb-flat-test-results",children:"4. SSB Flat Test Results"}),"\n",(0,s.jsx)(n.p,{children:"Here we use Apache Doris 2.0.15.1 for comparative testing. In the test, we use Query Time(ms) as the main performance indicator. The test results are as follows:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Query"}),(0,s.jsx)(n.th,{children:"Doris 2.0.15.1 (ms)"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q1.1"}),(0,s.jsx)(n.td,{children:"80"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q1.2"}),(0,s.jsx)(n.td,{children:"10"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q1.3"}),(0,s.jsx)(n.td,{children:"110"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q2.1"}),(0,s.jsx)(n.td,{children:"1680"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q2.2"}),(0,s.jsx)(n.td,{children:"1210"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q2.3"}),(0,s.jsx)(n.td,{children:"1060"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q3.1"}),(0,s.jsx)(n.td,{children:"2010"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q3.2"}),(0,s.jsx)(n.td,{children:"1560"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q3.3"}),(0,s.jsx)(n.td,{children:"600"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q3.4"}),(0,s.jsx)(n.td,{children:"10"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q4.1"}),(0,s.jsx)(n.td,{children:"2380"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q4.2"}),(0,s.jsx)(n.td,{children:"190"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q4.3"}),(0,s.jsx)(n.td,{children:"120"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Total"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"11020"})})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"5-standard-ssb-test-results",children:"5. Standard SSB Test Results"}),"\n",(0,s.jsx)(n.p,{children:"Here we use Apache Doris 2.0.15.1 for comparative testing. In the test, we use Query Time(ms) as the main performance indicator. The test results are as follows:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Query"}),(0,s.jsx)(n.th,{children:"Doris 2.0.15.1 (ms)"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q1.1"}),(0,s.jsx)(n.td,{children:"330"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q1.2"}),(0,s.jsx)(n.td,{children:"80"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q1.3"}),(0,s.jsx)(n.td,{children:"80"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q2.1"}),(0,s.jsx)(n.td,{children:"1780"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q2.2"}),(0,s.jsx)(n.td,{children:"1970"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q2.3"}),(0,s.jsx)(n.td,{children:"1510"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q3.1"}),(0,s.jsx)(n.td,{children:"4000"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q3.2"}),(0,s.jsx)(n.td,{children:"1720"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q3.3"}),(0,s.jsx)(n.td,{children:"1510"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q3.4"}),(0,s.jsx)(n.td,{children:"160"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q4.1"}),(0,s.jsx)(n.td,{children:"4010"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q4.2"}),(0,s.jsx)(n.td,{children:"840"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"q4.3"}),(0,s.jsx)(n.td,{children:"400"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Total"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"19390"})})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"6-environment-preparation",children:"6. Environment Preparation"}),"\n",(0,s.jsxs)(n.p,{children:["Please first refer to the ",(0,s.jsx)(n.a,{href:"../install/deploy-manually/storage-compute-decoupled-deploy-manually",children:"official documentation"})," to install and deploy Apache Doris first to obtain a Doris cluster which is working well(including at least 1 FE 1 BE, 1 FE 3 BEs is recommended)."]}),"\n",(0,s.jsx)(n.h2,{id:"7-data-preparation",children:"7. Data Preparation"}),"\n",(0,s.jsx)(n.h3,{id:"71-download-and-install-the-ssb-data-generation-tool",children:"7.1 Download and Install the SSB Data Generation Tool."}),"\n",(0,s.jsxs)(n.p,{children:["Execute the following script to download and compile the ",(0,s.jsx)(n.a,{href:"https://github.com/apache/doris/tree/master/tools/ssb-tools",children:"ssb-tools"})," tool."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"sh bin/build-ssb-dbgen.sh\n"})}),"\n",(0,s.jsxs)(n.p,{children:["After successful installation, the ",(0,s.jsx)(n.code,{children:"dbgen"})," binary will be generated under the ",(0,s.jsx)(n.code,{children:"ssb-dbgen/"})," directory."]}),"\n",(0,s.jsx)(n.h3,{id:"72-generate-ssb-test-set",children:"7.2 Generate SSB Test Set"}),"\n",(0,s.jsx)(n.p,{children:"Execute the following script to generate the SSB dataset:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"sh bin/gen-ssb-data.sh -s 1000\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Note 1: Check the script help via ",(0,s.jsx)(n.code,{children:"sh gen-ssb-data.sh -h"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Note 2: The data will be generated under the ",(0,s.jsx)(n.code,{children:"ssb-data/"})," directory with the suffix ",(0,s.jsx)(n.code,{children:".tbl"}),". The total file size is about 600GB and may need a few minutes to an hour to generate."]}),"\n",(0,s.jsx)(n.p,{children:"Note 3: A standard test data set of 100G is generated by default."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"73-create-table",children:"7.3 Create Table"}),"\n",(0,s.jsxs)(n.h4,{id:"731-prepare-the-doris-clusterconf-file",children:["7.3.1 Prepare the ",(0,s.jsx)(n.code,{children:"doris-cluster.conf"})," File."]}),"\n",(0,s.jsxs)(n.p,{children:["Before import the script, you need to write the FE\u2019s ip port and other information in the ",(0,s.jsx)(n.code,{children:"doris-cluster.conf"})," file."]}),"\n",(0,s.jsxs)(n.p,{children:["The file is located under ",(0,s.jsx)(n.code,{children:"${DORIS_HOME}/tools/ssb-tools/conf/"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The content of the file includes FE's ip, HTTP port, user name, password and the DB name of the data to be imported:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# Any of FE host\nexport FE_HOST='127.0.0.1'\n# http_port in fe.conf\nexport FE_HTTP_PORT=8030\n# query_port in fe.conf\nexport FE_QUERY_PORT=9030\n# Doris username\nexport USER='root'\n# Doris password\nexport PASSWORD=''\n# The database where SSB tables located\nexport DB='ssb'\n"})}),"\n",(0,s.jsx)(n.h4,{id:"732-execute-the-following-script-to-generate-and-create-the-ssb-table",children:"7.3.2 Execute the Following Script to Generate and Create the SSB Table:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"sh bin/create-ssb-tables.sh -s 1000\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Or copy the table creation statements in ",(0,s.jsx)(n.a,{href:"https://github.com/apache/doris/blob/master/tools/ssb-tools/ddl/create-ssb-tables-sf1000.sql",children:"create-ssb-tables.sql"})," and ",(0,s.jsx)(n.a,{href:"https://github.com/apache/doris/blob/master/tools/ssb-tools/ddl/create-ssb-flat-tables-sf1000.sql",children:"create-ssb-flat-table.sql"})," and then execute them in the MySQL client."]}),"\n",(0,s.jsx)(n.h3,{id:"74-import-data",children:"7.4 Import data"}),"\n",(0,s.jsx)(n.p,{children:"We use the following command to complete all data import of SSB test set and SSB FLAT wide table data synthesis and then import into the table."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:" sh bin/load-ssb-data.sh\n"})}),"\n",(0,s.jsx)(n.h3,{id:"75-checking-imported-data",children:"7.5 Checking Imported data"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select count(*) from part;\nselect count(*) from customer;\nselect count(*) from supplier;\nselect count(*) from dates;\nselect count(*) from lineorder;\nselect count(*) from lineorder_flat;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"76-query-test",children:"7.6 Query Test"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["SSB-Flat Query Statement: ",(0,s.jsx)(n.a,{href:"https://github.com/apache/doris/tree/master/tools/ssb-tools/ssb-flat-queries",children:" ssb-flat-queries"})]}),"\n",(0,s.jsxs)(n.li,{children:["Standard SSB Queries: ",(0,s.jsx)(n.a,{href:"https://github.com/apache/doris/tree/master/tools/ssb-tools/ssb-queries",children:" ssb-queries"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"761-ssb-flat-test-for-sql",children:"7.6.1 SSB FLAT Test for SQL"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"--Q1.1\nSELECT SUM(LO_EXTENDEDPRICE * LO_DISCOUNT) AS revenue\nFROM lineorder_flat\nWHERE\n    LO_ORDERDATE >= 19930101\n    AND LO_ORDERDATE <= 19931231\n    AND LO_DISCOUNT BETWEEN 1 AND 3\n    AND LO_QUANTITY < 25;\n\n--Q1.2\nSELECT SUM(LO_EXTENDEDPRICE * LO_DISCOUNT) AS revenue\nFROM lineorder_flat\nWHERE\n    LO_ORDERDATE >= 19940101\n  AND LO_ORDERDATE <= 19940131\n  AND LO_DISCOUNT BETWEEN 4 AND 6\n  AND LO_QUANTITY BETWEEN 26 AND 35;\n\n--Q1.3\nSELECT SUM(LO_EXTENDEDPRICE * LO_DISCOUNT) AS revenue\nFROM lineorder_flat\nWHERE\n    weekofyear(LO_ORDERDATE) = 6\n  AND LO_ORDERDATE >= 19940101\n  AND LO_ORDERDATE <= 19941231\n  AND LO_DISCOUNT BETWEEN 5 AND 7\n  AND LO_QUANTITY BETWEEN 26 AND 35;\n\n--Q2.1\nSELECT\n    SUM(LO_REVENUE), (LO_ORDERDATE DIV 10000) AS YEAR,\n    P_BRAND\nFROM lineorder_flat\nWHERE P_CATEGORY = 'MFGR#12' AND S_REGION = 'AMERICA'\nGROUP BY YEAR, P_BRAND\nORDER BY YEAR, P_BRAND;\n\n--Q2.2\nSELECT\n    SUM(LO_REVENUE), (LO_ORDERDATE DIV 10000) AS YEAR,\n    P_BRAND\nFROM lineorder_flat\nWHERE\n    P_BRAND >= 'MFGR#2221'\n  AND P_BRAND <= 'MFGR#2228'\n  AND S_REGION = 'ASIA'\nGROUP BY YEAR, P_BRAND\nORDER BY YEAR, P_BRAND;\n\n--Q2.3\nSELECT\n    SUM(LO_REVENUE), (LO_ORDERDATE DIV 10000) AS YEAR,\n    P_BRAND\nFROM lineorder_flat\nWHERE\n    P_BRAND = 'MFGR#2239'\n  AND S_REGION = 'EUROPE'\nGROUP BY YEAR, P_BRAND\nORDER BY YEAR, P_BRAND;\n\n--Q3.1\nSELECT\n    C_NATION,\n    S_NATION, (LO_ORDERDATE DIV 10000) AS YEAR,\n    SUM(LO_REVENUE) AS revenue\nFROM lineorder_flat\nWHERE\n    C_REGION = 'ASIA'\n  AND S_REGION = 'ASIA'\n  AND LO_ORDERDATE >= 19920101\n  AND LO_ORDERDATE <= 19971231\nGROUP BY C_NATION, S_NATION, YEAR\nORDER BY YEAR ASC, revenue DESC;\n\n--Q3.2\nSELECT\n    C_CITY,\n    S_CITY, (LO_ORDERDATE DIV 10000) AS YEAR,\n    SUM(LO_REVENUE) AS revenue\nFROM lineorder_flat\nWHERE\n    C_NATION = 'UNITED STATES'\n  AND S_NATION = 'UNITED STATES'\n  AND LO_ORDERDATE >= 19920101\n  AND LO_ORDERDATE <= 19971231\nGROUP BY C_CITY, S_CITY, YEAR\nORDER BY YEAR ASC, revenue DESC;\n\n--Q3.3\nSELECT\n    C_CITY,\n    S_CITY, (LO_ORDERDATE DIV 10000) AS YEAR,\n    SUM(LO_REVENUE) AS revenue\nFROM lineorder_flat\nWHERE\n    C_CITY IN ('UNITED KI1', 'UNITED KI5')\n  AND S_CITY IN ('UNITED KI1', 'UNITED KI5')\n  AND LO_ORDERDATE >= 19920101\n  AND LO_ORDERDATE <= 19971231\nGROUP BY C_CITY, S_CITY, YEAR\nORDER BY YEAR ASC, revenue DESC;\n\n--Q3.4\nSELECT\n    C_CITY,\n    S_CITY, (LO_ORDERDATE DIV 10000) AS YEAR,\n    SUM(LO_REVENUE) AS revenue\nFROM lineorder_flat\nWHERE\n    C_CITY IN ('UNITED KI1', 'UNITED KI5')\n  AND S_CITY IN ('UNITED KI1', 'UNITED KI5')\n  AND LO_ORDERDATE >= 19971201\n  AND LO_ORDERDATE <= 19971231\nGROUP BY C_CITY, S_CITY, YEAR\nORDER BY YEAR ASC, revenue DESC;\n\n--Q4.1\nSELECT (LO_ORDERDATE DIV 10000) AS YEAR,\n    C_NATION,\n    SUM(LO_REVENUE - LO_SUPPLYCOST) AS profit\nFROM lineorder_flat\nWHERE\n    C_REGION = 'AMERICA'\n  AND S_REGION = 'AMERICA'\n  AND P_MFGR IN ('MFGR#1', 'MFGR#2')\nGROUP BY YEAR, C_NATION\nORDER BY YEAR ASC, C_NATION ASC;\n\n--Q4.2\nSELECT (LO_ORDERDATE DIV 10000) AS YEAR,\n    S_NATION,\n    P_CATEGORY,\n    SUM(LO_REVENUE - LO_SUPPLYCOST) AS profit\nFROM lineorder_flat\nWHERE\n    C_REGION = 'AMERICA'\n  AND S_REGION = 'AMERICA'\n  AND LO_ORDERDATE >= 19970101\n  AND LO_ORDERDATE <= 19981231\n  AND P_MFGR IN ('MFGR#1', 'MFGR#2')\nGROUP BY YEAR, S_NATION, P_CATEGORY\nORDER BY\n    YEAR ASC,\n    S_NATION ASC,\n    P_CATEGORY ASC;\n\n--Q4.3\nSELECT (LO_ORDERDATE DIV 10000) AS YEAR,\n    S_CITY,\n    P_BRAND,\n    SUM(LO_REVENUE - LO_SUPPLYCOST) AS profit\nFROM lineorder_flat\nWHERE\n    S_NATION = 'UNITED STATES'\n  AND LO_ORDERDATE >= 19970101\n  AND LO_ORDERDATE <= 19981231\n  AND P_CATEGORY = 'MFGR#14'\nGROUP BY YEAR, S_CITY, P_BRAND\nORDER BY YEAR ASC, S_CITY ASC, P_BRAND ASC;\n"})}),"\n",(0,s.jsx)(n.h4,{id:"762-ssb-standard-test-for-sql",children:"7.6.2 SSB Standard Test for SQL"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"--Q1.1\nSELECT SUM(lo_extendedprice * lo_discount) AS REVENUE\nFROM lineorder, dates\nWHERE\n    lo_orderdate = d_datekey\n  AND d_year = 1993\n  AND lo_discount BETWEEN 1 AND 3\n  AND lo_quantity < 25;\n\n--Q1.2\nSELECT SUM(lo_extendedprice * lo_discount) AS REVENUE\nFROM lineorder, dates\nWHERE\n    lo_orderdate = d_datekey\n  AND d_yearmonth = 'Jan1994'\n  AND lo_discount BETWEEN 4 AND 6\n  AND lo_quantity BETWEEN 26 AND 35;\n    \n--Q1.3\nSELECT\n    SUM(lo_extendedprice * lo_discount) AS REVENUE\nFROM lineorder, dates\nWHERE\n    lo_orderdate = d_datekey\n  AND d_weeknuminyear = 6\n  AND d_year = 1994\n  AND lo_discount BETWEEN 5 AND 7\n  AND lo_quantity BETWEEN 26 AND 35;\n    \n--Q2.1\nSELECT SUM(lo_revenue), d_year, p_brand\nFROM lineorder, dates, part, supplier\nWHERE\n    lo_orderdate = d_datekey\n  AND lo_partkey = p_partkey\n  AND lo_suppkey = s_suppkey\n  AND p_category = 'MFGR#12'\n  AND s_region = 'AMERICA'\nGROUP BY d_year, p_brand\nORDER BY p_brand;\n\n--Q2.2\nSELECT SUM(lo_revenue), d_year, p_brand\nFROM lineorder, dates, part, supplier\nWHERE\n    lo_orderdate = d_datekey\n  AND lo_partkey = p_partkey\n  AND lo_suppkey = s_suppkey\n  AND p_brand BETWEEN 'MFGR#2221' AND 'MFGR#2228'\n  AND s_region = 'ASIA'\nGROUP BY d_year, p_brand\nORDER BY d_year, p_brand;\n\n--Q2.3\nSELECT SUM(lo_revenue), d_year, p_brand\nFROM lineorder, dates, part, supplier\nWHERE\n    lo_orderdate = d_datekey\n  AND lo_partkey = p_partkey\n  AND lo_suppkey = s_suppkey\n  AND p_brand = 'MFGR#2239'\n  AND s_region = 'EUROPE'\nGROUP BY d_year, p_brand\nORDER BY d_year, p_brand;\n\n--Q3.1\nSELECT\n    c_nation,\n    s_nation,\n    d_year,\n    SUM(lo_revenue) AS REVENUE\nFROM customer, lineorder, supplier, dates\nWHERE\n    lo_custkey = c_custkey\n  AND lo_suppkey = s_suppkey\n  AND lo_orderdate = d_datekey\n  AND c_region = 'ASIA'\n  AND s_region = 'ASIA'\n  AND d_year >= 1992\n  AND d_year <= 1997\nGROUP BY c_nation, s_nation, d_year\nORDER BY d_year ASC, REVENUE DESC;\n\n--Q3.2\nSELECT\n    c_city,\n    s_city,\n    d_year,\n    SUM(lo_revenue) AS REVENUE\nFROM customer, lineorder, supplier, dates\nWHERE\n    lo_custkey = c_custkey\n  AND lo_suppkey = s_suppkey\n  AND lo_orderdate = d_datekey\n  AND c_nation = 'UNITED STATES'\n  AND s_nation = 'UNITED STATES'\n  AND d_year >= 1992\n  AND d_year <= 1997\nGROUP BY c_city, s_city, d_year\nORDER BY d_year ASC, REVENUE DESC;\n\n--Q3.3\nSELECT\n    c_city,\n    s_city,\n    d_year,\n    SUM(lo_revenue) AS REVENUE\nFROM customer, lineorder, supplier, dates\nWHERE\n    lo_custkey = c_custkey\n  AND lo_suppkey = s_suppkey\n  AND lo_orderdate = d_datekey\n  AND (\n            c_city = 'UNITED KI1'\n        OR c_city = 'UNITED KI5'\n    )\n  AND (\n            s_city = 'UNITED KI1'\n        OR s_city = 'UNITED KI5'\n    )\n  AND d_year >= 1992\n  AND d_year <= 1997\nGROUP BY c_city, s_city, d_year\nORDER BY d_year ASC, REVENUE DESC;\n\n--Q3.4\nSELECT\n    c_city,\n    s_city,\n    d_year,\n    SUM(lo_revenue) AS REVENUE\nFROM customer, lineorder, supplier, dates\nWHERE\n    lo_custkey = c_custkey\n  AND lo_suppkey = s_suppkey\n  AND lo_orderdate = d_datekey\n  AND (\n            c_city = 'UNITED KI1'\n        OR c_city = 'UNITED KI5'\n    )\n  AND (\n            s_city = 'UNITED KI1'\n        OR s_city = 'UNITED KI5'\n    )\n  AND d_yearmonth = 'Dec1997'\nGROUP BY c_city, s_city, d_year\nORDER BY d_year ASC, REVENUE DESC;\n\n--Q4.1\nSELECT\n    d_year,\n    c_nation,\n    SUM(lo_revenue - lo_supplycost) AS PROFIT\nFROM dates, customer, supplier, part, lineorder\nWHERE\n    lo_custkey = c_custkey\n  AND lo_suppkey = s_suppkey\n  AND lo_partkey = p_partkey\n  AND lo_orderdate = d_datekey\n  AND c_region = 'AMERICA'\n  AND s_region = 'AMERICA'\n  AND (\n            p_mfgr = 'MFGR#1'\n        OR p_mfgr = 'MFGR#2'\n    )\nGROUP BY d_year, c_nation\nORDER BY d_year, c_nation;\n\n--Q4.2\nSELECT\n    d_year,\n    s_nation,\n    p_category,\n    SUM(lo_revenue - lo_supplycost) AS PROFIT\nFROM dates, customer, supplier, part, lineorder\nWHERE\n    lo_custkey = c_custkey\n  AND lo_suppkey = s_suppkey\n  AND lo_partkey = p_partkey\n  AND lo_orderdate = d_datekey\n  AND c_region = 'AMERICA'\n  AND s_region = 'AMERICA'\n  AND (\n            d_year = 1997\n        OR d_year = 1998\n    )\n  AND (\n            p_mfgr = 'MFGR#1'\n        OR p_mfgr = 'MFGR#2'\n    )\nGROUP BY d_year, s_nation, p_category\nORDER BY d_year, s_nation, p_category;\n\n--Q4.3\nSELECT\n    d_year,\n    s_city,\n    p_brand,\n    SUM(lo_revenue - lo_supplycost) AS PROFIT\nFROM dates, customer, supplier, part, lineorder\nWHERE\n    lo_custkey = c_custkey\n  AND lo_suppkey = s_suppkey\n  AND lo_partkey = p_partkey\n  AND lo_orderdate = d_datekey\n  AND s_nation = 'UNITED STATES'\n  AND (\n            d_year = 1997\n        OR d_year = 1998\n    )\n  AND p_category = 'MFGR#14'\nGROUP BY d_year, s_city, p_brand\nORDER BY d_year, s_city, p_brand;\n\n"})})]})}function h(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return i},a:function(){return d}});var r=t(667294);let s={},l=r.createContext(s);function d(e){let n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);