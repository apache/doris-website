"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["386306"],{690556:function(e,n,i){i.r(n),i.d(n,{default:()=>u,frontMatter:()=>o,metadata:()=>t,assets:()=>d,toc:()=>l,contentTitle:()=>r});var t=JSON.parse('{"id":"admin-manual/open-api/fe-http/debug-point-action","title":"Debug Point","description":"Debug point is a piece of code, inserted into FE or BE code, when program running into this code,","source":"@site/docs/admin-manual/open-api/fe-http/debug-point-action.md","sourceDirName":"admin-manual/open-api/fe-http","slug":"/admin-manual/open-api/fe-http/debug-point-action","permalink":"/docs/dev/admin-manual/open-api/fe-http/debug-point-action","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Debug Point","language":"en"},"sidebar":"docs","previous":{"title":"Meta Info Action","permalink":"/docs/dev/admin-manual/open-api/fe-http/meta-info-action-V2"},"next":{"title":"Statistic Action","permalink":"/docs/dev/admin-manual/open-api/fe-http/statistic-action"}}'),s=i("785893"),a=i("250065");let o={title:"Debug Point",language:"en"},r="Debug Point",d={},l=[{value:"Code Example",id:"code-example",level:2},{value:"Global Config",id:"global-config",level:2},{value:"Activate A Specified Debug Point",id:"activate-a-specified-debug-point",level:2},{value:"API",id:"api",level:3},{value:"Query Parameters",id:"query-parameters",level:3},{value:"Request body",id:"request-body",level:3},{value:"Response",id:"response",level:3},{value:"Examples",id:"examples",level:3},{value:"Pass Custom Parameters",id:"pass-custom-parameters",level:2},{value:"API",id:"api-1",level:3},{value:"Request body",id:"request-body-1",level:3},{value:"Response",id:"response-1",level:3},{value:"Examples",id:"examples-1",level:3},{value:"Use parameters in FE and BE code",id:"use-parameters-in-fe-and-be-code",level:3},{value:"Disable Debug Point",id:"disable-debug-point",level:2},{value:"API",id:"api-2",level:3},{value:"Query Parameters",id:"query-parameters-1",level:3},{value:"Request body",id:"request-body-2",level:3},{value:"Response",id:"response-2",level:3},{value:"Examples",id:"examples-2",level:3},{value:"Clear Debug Points",id:"clear-debug-points",level:2},{value:"API",id:"api-3",level:3},{value:"Request body",id:"request-body-3",level:3},{value:"Response",id:"response-3",level:3},{value:"Examples",id:"examples-3",level:3},{value:"Debug Points in Regression Test",id:"debug-points-in-regression-test",level:2},{value:"Concurrent Issue",id:"concurrent-issue",level:3},{value:"Examples",id:"examples-4",level:3}];function c(e){let n={blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"debug-point",children:"Debug Point"})}),"\n",(0,s.jsx)(n.p,{children:"Debug point is a piece of code, inserted into FE or BE code, when program running into this code,"}),"\n",(0,s.jsx)(n.p,{children:"it can change variables or behaviors of the program."}),"\n",(0,s.jsx)(n.p,{children:"It is mainly used for unit test or regression test when it is impossible to trigger some exceptions through normal means."}),"\n",(0,s.jsx)(n.p,{children:"Each debug point has a name, the name can be whatever you want, there are swithes to enable and disable debug points,"}),"\n",(0,s.jsx)(n.p,{children:"and you can also pass data to debug points."}),"\n",(0,s.jsx)(n.p,{children:"Both FE and BE support debug point, and after inserting debug point code, recompilation of FE or BE is needed."}),"\n",(0,s.jsx)(n.h2,{id:"code-example",children:"Code Example"}),"\n",(0,s.jsx)(n.p,{children:"FE example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'private Status foo() {\n	// dbug_fe_foo_do_nothing is the debug point name\n	// when it\'s active, DebugPointUtil.isEnable("dbug_fe_foo_do_nothing") returns true\n	if (DebugPointUtil.isEnable("dbug_fe_foo_do_nothing")) {\n      	return Status.Nothing;\n    }\n      	\n    do_foo_action();\n    \n    return Status.Ok;\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"BE example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c++",children:'void Status foo() {\n     // dbug_be_foo_do_nothing is the debug point name\n     // when it\'s active, DBUG_EXECUTE_IF will execute the code block\n     DBUG_EXECUTE_IF("dbug_be_foo_do_nothing",  { return Status.Nothing; });\n   \n     do_foo_action();\n     \n     return Status.Ok;\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"global-config",children:"Global Config"}),"\n",(0,s.jsxs)(n.p,{children:["To enable debug points globally, we need to set ",(0,s.jsx)(n.code,{children:"enable_debug_points"})," to true,"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"enable_debug_points"})," is located in FE's fe.conf and BE's be.conf."]}),"\n",(0,s.jsx)(n.h2,{id:"activate-a-specified-debug-point",children:"Activate A Specified Debug Point"}),"\n",(0,s.jsxs)(n.p,{children:["After debug points are enabled globally, a http request with a debug point name should be send to FE or BE node, ",(0,s.jsx)(n.br,{}),"\nonly after that, when the program running into the specified debug point, related code can be executed."]}),"\n",(0,s.jsx)(n.h3,{id:"api",children:"API"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"POST /api/debug_point/add/{debug_point_name}[?timeout=<int>&execute=<int>]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"query-parameters",children:"Query Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"debug_point_name"}),"\nDebug point name. Mandatory parameter."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"timeout"}),"\nTimeout in seconds. When timeout, the debug point will be deactivated. Default is -1, never timeout. Optional."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"execute"}),"\nAfter activating, the max times the debug point can be executed. Default is -1,  unlimited times. Optional."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"request-body",children:"Request body"}),"\n",(0,s.jsx)(n.p,{children:"None"}),"\n",(0,s.jsx)(n.h3,{id:"response",children:"Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n    msg: "OK",\n    code: 0\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(n.p,{children:["After activating debug point ",(0,s.jsx)(n.code,{children:"foo"}),", executed no more than five times."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'curl -X POST "http://127.0.0.1:8030/api/debug_point/add/foo?execute=5"\n\n'})}),"\n",(0,s.jsx)(n.h2,{id:"pass-custom-parameters",children:"Pass Custom Parameters"}),"\n",(0,s.jsxs)(n.p,{children:['When activating debug point, besides "timeout" and "execute" mentioned above, passing custom parameters is also allowed.',(0,s.jsx)(n.br,{}),"\nA parameter is a key-value pair in the form of \"key=value\" in url path, after debug point name glued by character '?'.",(0,s.jsx)(n.br,{}),"\nSee examples below."]}),"\n",(0,s.jsx)(n.h3,{id:"api-1",children:"API"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"POST /api/debug_point/add/{debug_point_name}[?k1=v1&k2=v2&k3=v3...]\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"k1=v1"})," ",(0,s.jsx)(n.br,{}),"\nk1 is parameter name ",(0,s.jsx)(n.br,{}),"\nv1 is parameter value ",(0,s.jsx)(n.br,{}),"\nmultiple key-value pairs are concatenated by ",(0,s.jsx)(n.code,{children:"&"})," ",(0,s.jsx)(n.br,{})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"request-body-1",children:"Request body"}),"\n",(0,s.jsx)(n.p,{children:"None"}),"\n",(0,s.jsx)(n.h3,{id:"response-1",children:"Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n    msg: "OK",\n    code: 0\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"examples-1",children:"Examples"}),"\n",(0,s.jsxs)(n.p,{children:["Assuming a FE node with configuration http_port=8030 in fe.conf, ",(0,s.jsx)(n.br,{}),"\nthe following http request activates a debug point named ",(0,s.jsx)(n.code,{children:"foo"})," in FE node and passe parameter ",(0,s.jsx)(n.code,{children:"percent"})," and ",(0,s.jsx)(n.code,{children:"duration"}),":"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"NOTE: User name and password may be needed."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'curl -u root: -X POST "http://127.0.0.1:8030/api/debug_point/add/foo?percent=0.5&duration=3"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"NOTE:\n1. Inside FE and BE code, names and values of parameters are taken as strings.\n2. Parameter names and values are case sensitive in http request and FE/BE code.\n3. FE and BE share same url paths of REST API, it's just their IPs and Ports are different.\n"})}),"\n",(0,s.jsx)(n.h3,{id:"use-parameters-in-fe-and-be-code",children:"Use parameters in FE and BE code"}),"\n",(0,s.jsxs)(n.p,{children:["Following request activates debug point ",(0,s.jsx)(n.code,{children:"OlapTableSink.write_random_choose_sink"})," in FE and passes parameter ",(0,s.jsx)(n.code,{children:"needCatchUp"})," and ",(0,s.jsx)(n.code,{children:"sinkNum"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'curl -u root: -X POST "http://127.0.0.1:8030/api/debug_point/add/OlapTableSink.write_random_choose_sink?needCatchUp=true&sinkNum=3"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The code in FE checks debug point ",(0,s.jsx)(n.code,{children:"OlapTableSink.write_random_choose_sink"})," and gets parameter values:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'private void debugWriteRandomChooseSink(Tablet tablet, long version, Multimap<Long, Long> bePathsMap) {\n    DebugPoint debugPoint = DebugPointUtil.getDebugPoint("OlapTableSink.write_random_choose_sink");\n    if (debugPoint == null) {\n        return;\n    }\n    boolean needCatchup = debugPoint.param("needCatchUp", false);\n    int sinkNum = debugPoint.param("sinkNum", 0);\n    ...\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Following request activates debug point ",(0,s.jsx)(n.code,{children:"TxnManager.prepare_txn.random_failed"})," in BE and passes parameter ",(0,s.jsx)(n.code,{children:"percent"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'curl -X POST "http://127.0.0.1:8040/api/debug_point/add/TxnManager.prepare_txn.random_failed?percent=0.7\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The code in BE checks debug point ",(0,s.jsx)(n.code,{children:"TxnManager.prepare_txn.random_failed"})," and gets parameter value:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c++",children:'DBUG_EXECUTE_IF("TxnManager.prepare_txn.random_failed",\n		{if (rand() % 100 < (100 * dp->param("percent", 0.5))) {\n		        LOG_WARNING("TxnManager.prepare_txn.random_failed random failed");\n		        return Status::InternalError("debug prepare txn random failed");\n		}}\n);\n'})}),"\n",(0,s.jsx)(n.h2,{id:"disable-debug-point",children:"Disable Debug Point"}),"\n",(0,s.jsx)(n.h3,{id:"api-2",children:"API"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"	POST /api/debug_point/remove/{debug_point_name}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"query-parameters-1",children:"Query Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"debug_point_name"}),"\nDebug point name. Mandatory parameter."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"request-body-2",children:"Request body"}),"\n",(0,s.jsx)(n.p,{children:"None"}),"\n",(0,s.jsx)(n.h3,{id:"response-2",children:"Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n    msg: "OK",\n    code: 0\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"examples-2",children:"Examples"}),"\n",(0,s.jsxs)(n.p,{children:["Disable debug point ",(0,s.jsx)(n.code,{children:"foo"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'curl -X POST "http://127.0.0.1:8030/api/debug_point/remove/foo"\n\n'})}),"\n",(0,s.jsx)(n.h2,{id:"clear-debug-points",children:"Clear Debug Points"}),"\n",(0,s.jsx)(n.h3,{id:"api-3",children:"API"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"POST /api/debug_point/clear\n"})}),"\n",(0,s.jsx)(n.h3,{id:"request-body-3",children:"Request body"}),"\n",(0,s.jsx)(n.p,{children:"None"}),"\n",(0,s.jsx)(n.h3,{id:"response-3",children:"Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n    msg: "OK",\n    code: 0\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"examples-3",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'curl -X POST "http://127.0.0.1:8030/api/debug_point/clear"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"debug-points-in-regression-test",children:"Debug Points in Regression Test"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["In community's CI system, ",(0,s.jsx)(n.code,{children:"enable_debug_points"})," configuration of FE and BE are true by default."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The Regression test framework also provides methods to activate and deactivate a particular debug point, ",(0,s.jsx)(n.br,{}),"\nthey are declared as below:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-groovy",children:'// "name" is the debug point to activate, "params" is a list of key-value pairs passed to debug point\ndef enableDebugPointForAllFEs(String name, Map<String, String> params = null);\ndef enableDebugPointForAllBEs(String name, Map<String, String> params = null);\n// "name" is the debug point to deactivate\ndef disableDebugPointForAllFEs(String name);\ndef disableDebugPointForAllFEs(String name);\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"enableDebugPointForAllFEs()"})," or ",(0,s.jsx)(n.code,{children:"enableDebugPointForAllBEs()"})," needs to be called before the test actions you want to generate error, ",(0,s.jsx)(n.br,{}),"\nand ",(0,s.jsx)(n.code,{children:"disableDebugPointForAllFEs()"})," or ",(0,s.jsx)(n.code,{children:"disableDebugPointForAllBEs()"})," needs to be called afterward."]}),"\n",(0,s.jsx)(n.h3,{id:"concurrent-issue",children:"Concurrent Issue"}),"\n",(0,s.jsxs)(n.p,{children:["Enabled debug points affects FE or BE globally, which could cause other concurrent tests to fail unexpectedly in your pull request. ",(0,s.jsx)(n.br,{}),"\nTo avoid this, there's a convention that regression tests using debug points must be in directory regression-test/suites/fault_injection_p0, ",(0,s.jsx)(n.br,{}),'\nand their group name must be "nonConcurrent", as these regression tests will be executed serially by pull request workflow.']}),"\n",(0,s.jsx)(n.h3,{id:"examples-4",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-groovy",children:'// .groovy file of the test case must be in regression-test/suites/fault_injection_p0\n// and the group name must be \'nonConcurrent\'\nsuite(\'debugpoint_action\', \'nonConcurrent\') {\n    try {\n        // Activate debug point named "PublishVersionDaemon.stop_publish" in all FE\n        // and pass parameter "timeout"\n        // "execute" and "timeout" are pre-existing parameters, usage is mentioned above\n        GetDebugPoint().enableDebugPointForAllFEs(\'PublishVersionDaemon.stop_publish\', [timeout:1])\n\n        // Activate debug point named "Tablet.build_tablet_report_info.version_miss" in all BE\n        // and pass parameter "tablet_id", "version_miss" and "timeout"\n        GetDebugPoint().enableDebugPointForAllBEs(\'Tablet.build_tablet_report_info.version_miss\',\n                                                  [tablet_id:\'12345\', version_miss:true, timeout:1])\n\n        // Test actions which will run into debug point and generate error\n        sql """CREATE TABLE tbl_1 (k1 INT, k2 INT)\n               DUPLICATE KEY (k1)\n               DISTRIBUTED BY HASH(k1)\n               BUCKETS 3\n               PROPERTIES ("replication_allocation" = "tag.location.default: 1");\n            """\n        sql "INSERT INTO tbl_1 VALUES (1, 10)"\n        sql "INSERT INTO tbl_1 VALUES (2, 20)"\n        order_qt_select_1_1 \'SELECT * FROM tbl_1\'\n\n    } finally {\n        // Deactivate debug points\n        GetDebugPoint().disableDebugPointForAllFEs(\'PublishVersionDaemon.stop_publish\')\n        GetDebugPoint().disableDebugPointForAllBEs(\'Tablet.build_tablet_report_info.version_miss\')\n    }\n}\n'})})]})}function u(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return r},a:function(){return o}});var t=i(667294);let s={},a=t.createContext(s);function o(e){let n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);