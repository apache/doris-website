"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["869321"],{784944:function(e,n,l){l.r(n),l.d(n,{default:()=>u,frontMatter:()=>a,metadata:()=>s,assets:()=>i,toc:()=>o,contentTitle:()=>c});var s=JSON.parse('{"id":"sql-manual/sql-functions/table-functions/explode-numbers-outer","title":"EXPLODE_NUMBERS_OUTER","description":"Description","source":"@site/docs/sql-manual/sql-functions/table-functions/explode-numbers-outer.md","sourceDirName":"sql-manual/sql-functions/table-functions","slug":"/sql-manual/sql-functions/table-functions/explode-numbers-outer","permalink":"/docs/dev/sql-manual/sql-functions/table-functions/explode-numbers-outer","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"EXPLODE_NUMBERS_OUTER","language":"en"},"sidebar":"docs","previous":{"title":"EXPLODE_NUMBERS","permalink":"/docs/dev/sql-manual/sql-functions/table-functions/explode-numbers"},"next":{"title":"EXPLODE_SPLIT","permalink":"/docs/dev/sql-manual/sql-functions/table-functions/explode-split"}}'),t=l("785893"),r=l("250065");let a={title:"EXPLODE_NUMBERS_OUTER",language:"en"},c=void 0,i={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function d(e){let n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"explode_numbers_outer"})," function accepts an integer and maps each number in the range to a separate row. It should be used together with ",(0,t.jsx)(n.a,{href:"/docs/dev/query-data/lateral-view",children:(0,t.jsx)(n.code,{children:"LATERAL VIEW"})})," to flatten nested data structures into a standard flat table format. The main difference between ",(0,t.jsx)(n.code,{children:"explode_numbers_outer"})," and ",(0,t.jsx)(n.a,{href:"/docs/dev/sql-manual/sql-functions/table-functions/explode-numbers",children:(0,t.jsx)(n.code,{children:"explode_numbers"})})," is how they handle null values."]}),"\n",(0,t.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"EXPLODE_NUMBERS_OUTER(<int>)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<int>"})," Integer type"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Returns an integer column ",(0,t.jsx)(n.code,{children:"[0, n)"}),", with column type ",(0,t.jsx)(n.code,{children:"Nullable<INT>"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["If ",(0,t.jsx)(n.code,{children:"<int>"})," is NULL, 0, or negative, 1 row with NULL is returned."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Regular parameters\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"select  * from (select 1 as k1) t1 lateral view explode_numbers_outer(10) t2 as c;\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+------+------+\n| k1   | c    |\n+------+------+\n|    1 |    0 |\n|    1 |    1 |\n|    1 |    2 |\n|    1 |    3 |\n|    1 |    4 |\n|    1 |    5 |\n|    1 |    6 |\n|    1 |    7 |\n|    1 |    8 |\n|    1 |    9 |\n+------+------+\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Parameter 0\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"select  * from (select 1 as k1) t1 lateral view explode_numbers_outer(0) t2 as c;\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+------+------+\n| k1   | c    |\n+------+------+\n|    1 | NULL |\n+------+------+\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["NULL parameter\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"select  * from (select 1 as k1) t1 lateral view explode_numbers_outer(NULL) t2 as c;\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+------+------+\n| k1   | c    |\n+------+------+\n|    1 | NULL |\n+------+------+\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Negative parameter\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"select  * from (select 1 as k1) t1 lateral view explode_numbers_outer(-1) t2 as c;\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+------+------+\n| k1   | c    |\n+------+------+\n|    1 | NULL |\n+------+------+\n"})}),"\n"]}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},250065:function(e,n,l){l.d(n,{Z:function(){return c},a:function(){return a}});var s=l(667294);let t={},r=s.createContext(t);function a(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);