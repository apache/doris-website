"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["357143"],{77457:function(n,t,e){e.r(t),e.d(t,{default:()=>d,frontMatter:()=>r,metadata:()=>i,assets:()=>c,toc:()=>o,contentTitle:()=>l});var i=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/bitmap-functions/bitmap-and-count","title":"BITMAP_AND_COUNT","description":"Description","source":"@site/versioned_docs/version-3.x/sql-manual/sql-functions/scalar-functions/bitmap-functions/bitmap-and-count.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/bitmap-functions","slug":"/sql-manual/sql-functions/scalar-functions/bitmap-functions/bitmap-and-count","permalink":"/docs/3.x/sql-manual/sql-functions/scalar-functions/bitmap-functions/bitmap-and-count","draft":false,"unlisted":false,"tags":[],"version":"3.x","frontMatter":{"title":"BITMAP_AND_COUNT","language":"en"},"sidebar":"docs","previous":{"title":"BITMAP_AND","permalink":"/docs/3.x/sql-manual/sql-functions/scalar-functions/bitmap-functions/bitmap-and"},"next":{"title":"BITMAP_AND_NOT,BITMAP_ANDNOT","permalink":"/docs/3.x/sql-manual/sql-functions/scalar-functions/bitmap-functions/bitmap-and-not"}}'),s=e("785893"),a=e("250065");let r={title:"BITMAP_AND_COUNT",language:"en"},l=void 0,c={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function m(n){let t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(t.p,{children:"Computes the intersection of two or more input BITMAPs and returns the number of intersections."}),"\n",(0,s.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"BITMAP_AND_COUNT(<bitmap>, <bitmap>,[, <bitmap>...])\n"})}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Parameter"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"<bitmap>"})}),(0,s.jsx)(t.td,{children:"One of the original BITMAPs whose intersection is being sought"})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsx)(t.p,{children:"Returns an integer"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"If the parameter has a null value, it returns NULL"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"select bitmap_and_count(bitmap_from_string('1,2,3'),bitmap_from_string('3,4,5'));\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",children:"+----------------------------------------------------------------------------+\n| bitmap_and_count(bitmap_from_string('1,2,3'), bitmap_from_string('3,4,5')) |\n+----------------------------------------------------------------------------+\n|                                                                          1 |\n+----------------------------------------------------------------------------+\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"select bitmap_and_count(bitmap_from_string('1,2,3'), bitmap_from_string('1,2'), bitmap_from_string('1,2,3,4,5'));\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",children:"+-------------------------------------------------------------------------------------------------------------+\n| (bitmap_and_count(bitmap_from_string('1,2,3'), bitmap_from_string('1,2'), bitmap_from_string('1,2,3,4,5'))) |\n+-------------------------------------------------------------------------------------------------------------+\n|                                                                                                           2 |\n+-------------------------------------------------------------------------------------------------------------+\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"select bitmap_and_count(bitmap_from_string('1,2,3'), bitmap_from_string('1,2'), bitmap_from_string('1,2,3,4,5'),bitmap_empty());\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",children:"+-----------------------------------------------------------------------------------------------------------------------------+\n| (bitmap_and_count(bitmap_from_string('1,2,3'), bitmap_from_string('1,2'), bitmap_from_string('1,2,3,4,5'), bitmap_empty())) |\n+-----------------------------------------------------------------------------------------------------------------------------+\n|                                                                                                                           0 |\n+-----------------------------------------------------------------------------------------------------------------------------+\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"select bitmap_and_count(bitmap_from_string('1,2,3'), bitmap_from_string('1,2'), bitmap_from_string('1,2,3,4,5'), NULL);\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",children:"+-------------------------------------------------------------------------------------------------------------------+\n| (bitmap_and_count(bitmap_from_string('1,2,3'), bitmap_from_string('1,2'), bitmap_from_string('1,2,3,4,5'), NULL)) |\n+-------------------------------------------------------------------------------------------------------------------+\n|                                                                                                              NULL |\n+-------------------------------------------------------------------------------------------------------------------+\n"})})]})}function d(n={}){let{wrapper:t}={...(0,a.a)(),...n.components};return t?(0,s.jsx)(t,{...n,children:(0,s.jsx)(m,{...n})}):m(n)}},250065:function(n,t,e){e.d(t,{Z:function(){return l},a:function(){return r}});var i=e(667294);let s={},a=i.createContext(s);function r(n){let t=i.useContext(a);return i.useMemo(function(){return"function"==typeof n?n(t):{...t,...n}},[t,n])}function l(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),i.createElement(a.Provider,{value:t},n.children)}}}]);