"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["533157"],{284672:function(e,n,s){s.r(n),s.d(n,{default:()=>u,frontMatter:()=>l,metadata:()=>t,assets:()=>c,toc:()=>o,contentTitle:()=>a});var t=JSON.parse('{"id":"sql-manual/sql-functions/string-functions/esquery","title":"ESQUERY","description":"Description","source":"@site/versioned_docs/version-2.0/sql-manual/sql-functions/string-functions/esquery.md","sourceDirName":"sql-manual/sql-functions/string-functions","slug":"/sql-manual/sql-functions/string-functions/esquery","permalink":"/docs/2.0/sql-manual/sql-functions/string-functions/esquery","draft":false,"unlisted":false,"tags":[],"version":"2.0","frontMatter":{"title":"ESQUERY","language":"en"},"sidebar":"docs","previous":{"title":"SPACE","permalink":"/docs/2.0/sql-manual/sql-functions/string-functions/space"},"next":{"title":"MULTI_SEARCH_ALL_POSITIONS","permalink":"/docs/2.0/sql-manual/sql-functions/string-functions/search/multi-search-all-positions"}}'),r=s("785893"),i=s("250065");let l={title:"ESQUERY",language:"en"},a=void 0,c={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function d(e){let n={code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.code,{children:"ESQUERY(<field>, <query_dsl>)"})," function to push down queries that cannot be expressed in SQL to Elasticsearch for filtering. The first parameter, ",(0,r.jsx)(n.code,{children:"<field>"}),", is used to associate indexes, while the second parameter, ",(0,r.jsx)(n.code,{children:"<query_dsl>"}),", is a JSON expression representing the basic Elasticsearch Query DSL. The JSON must be enclosed in curly brackets ",(0,r.jsx)(n.code,{children:"{}"})," and contain exactly one root key (e.g., ",(0,r.jsx)(n.code,{children:"match_phrase"}),", ",(0,r.jsx)(n.code,{children:"geo_shape"}),", ",(0,r.jsx)(n.code,{children:"bool"}),")."]}),"\n",(0,r.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"ESQUERY(<field>, <query_dsl>)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<field>"})}),(0,r.jsx)(n.td,{children:"The field to be queried; used to associate indexes."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<query_dsl>"})}),(0,r.jsxs)(n.td,{children:["A JSON expression representing the Elasticsearch Query DSL. It must be enclosed in ",(0,r.jsx)(n.code,{children:"{}"})," and contain exactly one root key (e.g., ",(0,r.jsx)(n.code,{children:"match_phrase"}),", ",(0,r.jsx)(n.code,{children:"geo_shape"}),", ",(0,r.jsx)(n.code,{children:"bool"}),")."]})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,r.jsx)(n.p,{children:"Returns a boolean value indicating whether the document matches the provided Elasticsearch query DSL."}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:'-- match_phrase SQL:\nSELECT * FROM es_table \nWHERE ESQUERY(k4, \'{\n    "match_phrase": {\n       "k4": "doris on es"\n    }\n}\');\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:'-- geo_shape SQL:\nSELECT * FROM es_table \nWHERE ESQUERY(k4, \'{\n  "geo_shape": {\n     "location": {\n        "shape": {\n           "type": "envelope",\n           "coordinates": [\n              [13, 53],\n              [14, 52]\n           ]\n        },\n        "relation": "within"\n     }\n  }\n}\');\n'})})]})}function u(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return a},a:function(){return l}});var t=s(667294);let r={},i=t.createContext(r);function l(e){let n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);