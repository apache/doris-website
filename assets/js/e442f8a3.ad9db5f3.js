"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["129613"],{286786:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>i,metadata:()=>s,assets:()=>o,toc:()=>c,contentTitle:()=>l});var s=JSON.parse('{"id":"sql-manual/sql-functions/table-valued-functions/jobs","title":"JOBS","description":"Description","source":"@site/versioned_docs/version-2.1/sql-manual/sql-functions/table-valued-functions/jobs.md","sourceDirName":"sql-manual/sql-functions/table-valued-functions","slug":"/sql-manual/sql-functions/table-valued-functions/jobs","permalink":"/docs/2.1/sql-manual/sql-functions/table-valued-functions/jobs","draft":false,"unlisted":false,"tags":[],"version":"2.1","frontMatter":{"title":"JOBS","language":"en"},"sidebar":"docs","previous":{"title":"ICEBERG_META","permalink":"/docs/2.1/sql-manual/sql-functions/table-valued-functions/iceberg-meta"},"next":{"title":"LOCAL","permalink":"/docs/2.1/sql-manual/sql-functions/table-valued-functions/local"}}'),a=t("785893"),r=t("250065");let i={title:"JOBS",language:"en"},l=void 0,o={},c=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Required Parameters",id:"required-parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function d(e){let n={br:"br",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)(n.p,{children:"Table function, generating a temporary task table, which can view job information in a certain task type."}),"\n",(0,a.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'JOBS(\n    "type"="<type>"\n)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"required-parameters",children:"Required Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Field"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsx)(n.tbody,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"<type>"})})}),(0,a.jsxs)(n.td,{children:["The type of the job: ",(0,a.jsx)(n.br,{})," ",(0,a.jsx)(n.code,{children:"insert"}),": Insert into type job. ",(0,a.jsx)(n.br,{})," ",(0,a.jsx)(n.code,{children:"mv"}),": Materialized view job."]})]})})]}),"\n",(0,a.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:'jobs("type"="insert")'})})," Job return value of type insert"]}),"\n",(0,a.jsx)(n.p,{children:"| Field              | Description                |\n|--------------------|----------------------------|\n| Id                 | Job ID                     |\n| Name               | Job name                   |\n| Definer            | Job definer                |\n| ExecuteType        | Execution type             |\n| RecurringStrategy  | Recurring strategy         |\n| Status             | Job status                 |\n| ExecuteSql         | Execution SQL              |\n| CreateTime         | Job creation time          |\n| SucceedTaskCount   | Number of successful tasks |\n| FailedTaskCount    | Number of failed tasks     |\n| CanceledTaskCount  | Number of canceled tasks   |\n| Comment            | Job comment                |"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:'jobs("type"="mv")'})})," MV type job return value"]}),"\n",(0,a.jsx)(n.p,{children:"| Field                | Description                                                 |\n|----------------------|-------------------------------------------------------------|\n| Id                   | job ID                                                      |\n| Name                 | job name                                                    |\n| MvId                 | Materialized View ID                                        |\n| MvName               | Materialized View Name                                      |\n| MvDatabaseId         | DB ID of the materialized view                              |\n| MvDatabaseName       | Name of the database to which the materialized view belongs |\n| ExecuteType          | Execution type                                              |\n| RecurringStrategy    | Loop strategy                                               |\n| Status               | Job status                                                  |\n| CreateTime           | Task creation time                                          |"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(n.p,{children:"View jobs in all materialized views"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'select * from jobs("type"="mv");\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"+-------+------------------+-------+--------------------------+--------------+--------------------------------------------------------+-------------+-------------------+---------+---------------------+\n| Id    | Name             | MvId  | MvName                   | MvDatabaseId | MvDatabaseName                                         | ExecuteType | RecurringStrategy | Status  | CreateTime          |\n+-------+------------------+-------+--------------------------+--------------+--------------------------------------------------------+-------------+-------------------+---------+---------------------+\n| 23369 | inner_mtmv_23363 | 23363 | range_date_up_union_mv1  | 21805        | regression_test_nereids_rules_p0_mv_create_part_and_up | MANUAL      | MANUAL TRIGGER    | RUNNING | 2025-01-08 18:19:10 |\n| 23377 | inner_mtmv_23371 | 23371 | range_date_up_union_mv2  | 21805        | regression_test_nereids_rules_p0_mv_create_part_and_up | MANUAL      | MANUAL TRIGGER    | RUNNING | 2025-01-08 18:19:10 |\n| 21794 | inner_mtmv_21788 | 21788 | test_tablet_type_mtmv_mv | 16016        | zd                                                     | MANUAL      | MANUAL TRIGGER    | RUNNING | 2025-01-08 12:26:06 |\n| 19508 | inner_mtmv_19494 | 19494 | mv1                      | 16016        | zd                                                     | MANUAL      | MANUAL TRIGGER    | RUNNING | 2025-01-07 22:13:31 |\n+-------+------------------+-------+--------------------------+--------------+--------------------------------------------------------+-------------+-------------------+---------+---------------------+\n"})}),"\n",(0,a.jsx)(n.p,{children:"View all insert jobs"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'select * from jobs("type"="insert");\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"+----------------+----------------+---------+-------------+--------------------------------------------+---------+--------------------------------------------------------------+---------------------+------------------+-----------------+-------------------+---------+\n| Id             | Name           | Definer | ExecuteType | RecurringStrategy                          | Status  | ExecuteSql                                                   | CreateTime          | SucceedTaskCount | FailedTaskCount | CanceledTaskCount | Comment |\n+----------------+----------------+---------+-------------+--------------------------------------------+---------+--------------------------------------------------------------+---------------------+------------------+-----------------+-------------------+---------+\n| 78533940810334 | insert_tab_job | root    | RECURRING   | EVERY 10 MINUTE STARTS 2025-01-17 14:42:53 | RUNNING | INSERT INTO test.insert_tab SELECT * FROM test.example_table | 2025-01-17 14:32:53 | 0                | 0               | 0                 |         |\n+----------------+----------------+---------+-------------+--------------------------------------------+---------+--------------------------------------------------------------+---------------------+------------------+-----------------+-------------------+---------+\n"})})]})}function u(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return i}});var s=t(667294);let a={},r=s.createContext(a);function i(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);