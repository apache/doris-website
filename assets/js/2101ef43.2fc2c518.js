"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["640425"],{173202:function(n,e,s){s.r(e),s.d(e,{default:()=>u,frontMatter:()=>c,metadata:()=>r,assets:()=>a,toc:()=>o,contentTitle:()=>i});var r=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/string-functions/compress","title":"COMPRESS","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/string-functions/compress.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/string-functions","slug":"/sql-manual/sql-functions/scalar-functions/string-functions/compress","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/compress","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"COMPRESS","language":"en"},"sidebar":"docs","previous":{"title":"CONCAT_WS","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/concat-ws"},"next":{"title":"COUNT_SUBSTRINGS","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/count_substrings"}}'),t=s("785893"),l=s("250065");let c={title:"COMPRESS",language:"en"},i=void 0,a={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function d(n){let e={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(e.p,{children:"The COMPRESS function compresses a string into binary data using the zlib compression algorithm. The compressed data can be decompressed back to the original string using the UNCOMPRESS function."}),"\n",(0,t.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"COMPRESS(<str>)\n"})}),"\n",(0,t.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"Parameter"}),(0,t.jsx)(e.th,{children:"Description"})]})}),(0,t.jsx)(e.tbody,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"<str>"})}),(0,t.jsx)(e.td,{children:"The string to be compressed. Type: VARCHAR"})]})})]}),"\n",(0,t.jsx)(e.h2,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsx)(e.p,{children:"Returns VARCHAR type, which is the compressed binary data (not human-readable)."}),"\n",(0,t.jsx)(e.p,{children:"Special cases:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"If the parameter is NULL, returns NULL"}),"\n",(0,t.jsxs)(e.li,{children:["If the input is an empty string ",(0,t.jsx)(e.code,{children:"''"}),", returns an empty string ",(0,t.jsx)(e.code,{children:"''"})]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"Basic usage: compression and decompression"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"SELECT uncompress(compress('hello'));\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-text",children:"+-------------------------------+\n| uncompress(compress('hello')) |\n+-------------------------------+\n| hello                         |\n+-------------------------------+\n"})}),"\n",(0,t.jsxs)(e.ol,{start:"2",children:["\n",(0,t.jsx)(e.li,{children:"Empty string handling"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"SELECT compress('');\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-text",children:"+--------------+\n| compress('') |\n+--------------+\n|              |\n+--------------+\n"})}),"\n",(0,t.jsxs)(e.ol,{start:"3",children:["\n",(0,t.jsx)(e.li,{children:"NULL value handling"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"SELECT compress(NULL);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-text",children:"+----------------+\n| compress(NULL) |\n+----------------+\n| NULL           |\n+----------------+\n"})}),"\n",(0,t.jsxs)(e.ol,{start:"4",children:["\n",(0,t.jsx)(e.li,{children:"UTF-8 character test"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"SELECT uncompress(compress('\u1E6D\u1E5B\xec'));\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-text",children:"+----------------------------------+\n| uncompress(compress('\u1E6D\u1E5B\xec'))      |\n+----------------------------------+\n| \u1E6D\u1E5B\xec                              |\n+----------------------------------+\n"})})]})}function u(n={}){let{wrapper:e}={...(0,l.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},250065:function(n,e,s){s.d(e,{Z:function(){return i},a:function(){return c}});var r=s(667294);let t={},l=r.createContext(t);function c(n){let e=r.useContext(l);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:c(n.components),r.createElement(l.Provider,{value:e},n.children)}}}]);