"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["413565"],{596173:function(e,s,n){n.r(s),n.d(s,{default:()=>u,frontMatter:()=>a,metadata:()=>t,assets:()=>i,toc:()=>c,contentTitle:()=>l});var t=JSON.parse('{"id":"install/deploy-on-kubernetes/integrated-storage-compute/access-cluster","title":"Access Cluster","description":"Kubernetes provides the use of Service as VIP (Virtual IP) and load balancer. There are three external exposure modes for Service: ClusterIP, NodePort, and LoadBalancer.","source":"@site/docs/install/deploy-on-kubernetes/integrated-storage-compute/access-cluster.md","sourceDirName":"install/deploy-on-kubernetes/integrated-storage-compute","slug":"/install/deploy-on-kubernetes/integrated-storage-compute/access-cluster","permalink":"/docs/dev/install/deploy-on-kubernetes/integrated-storage-compute/access-cluster","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Access Cluster","language":"en"},"sidebar":"docs","previous":{"title":"Deploy Doris Cluster","permalink":"/docs/dev/install/deploy-on-kubernetes/integrated-storage-compute/install-doris-cluster"},"next":{"title":"Cluster Operation","permalink":"/docs/dev/install/deploy-on-kubernetes/integrated-storage-compute/cluster-operation"}}'),r=n("785893"),o=n("250065");let a={title:"Access Cluster",language:"en"},l=void 0,i={},c=[{value:"ClusterIP",id:"clusterip",level:2},{value:"Step 1: Obtain the Service",id:"step-1-obtain-the-service",level:3},{value:"Step 2: Access Doris",id:"step-2-access-doris",level:3},{value:"NodePort",id:"nodeport",level:2},{value:"Step 1: Obtain the service",id:"step-1-obtain-the-service-1",level:3},{value:"Step 2: Access Doris",id:"step-2-access-doris-1",level:3},{value:"LoadBalancer",id:"loadbalancer",level:2},{value:"Step 1: Obtain the service",id:"step-1-obtain-the-service-2",level:3},{value:"Step 2: Access Doris",id:"step-2-access-doris-2",level:3},{value:"StreamLoad Access to Doris Deployed on Kubernetes",id:"streamload-access-to-doris-deployed-on-kubernetes",level:2},{value:"Configure External Access to the BE Service",id:"configure-external-access-to-the-be-service",level:3},{value:"Configure the BE Proxy Address",id:"configure-the-be-proxy-address",level:3}];function d(e){let s={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.p,{children:"Kubernetes provides the use of Service as VIP (Virtual IP) and load balancer. There are three external exposure modes for Service: ClusterIP, NodePort, and LoadBalancer."}),"\n",(0,r.jsx)(s.h2,{id:"clusterip",children:"ClusterIP"}),"\n",(0,r.jsx)(s.p,{children:"Doris provides the ClusterIP access mode by default on Kubernetes. The ClusterIP access mode provides an internal IP address within the Kubernetes cluster to expose services through this internal IP. With the ClusterIP mode, services can only be accessed within the cluster."}),"\n",(0,r.jsx)(s.h3,{id:"step-1-obtain-the-service",children:"Step 1: Obtain the Service"}),"\n",(0,r.jsx)(s.p,{children:"After deploying the cluster, you can view the services exposed by the Doris Operator using the following command:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"kubectl -n doris get svc\n"})}),"\n",(0,r.jsx)(s.p,{children:"The returned result is as follows:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"NAME                              TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)                               AGE\ndoriscluster-sample-be-internal   ClusterIP   None          <none>        9050/TCP                              9m\ndoriscluster-sample-be-service    ClusterIP   10.1.68.128   <none>        9060/TCP,8040/TCP,9050/TCP,8060/TCP   9m\ndoriscluster-sample-fe-internal   ClusterIP   None          <none>        9030/TCP                              14m\ndoriscluster-sample-fe-service    ClusterIP   10.1.118.16   <none>        8030/TCP,9020/TCP,9030/TCP,9010/TCP   14m\n"})}),"\n",(0,r.jsx)(s.p,{children:'In the above results, there are two types of services for FE and BE, with suffixes of "internal" and "service" respectively:'}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:'The services with the "internal" suffix can only be used for internal communication within Doris, such as heartbeat, data exchange, and other operations, and are not for external use.'}),"\n",(0,r.jsx)(s.li,{children:'The services with the "service" suffix can be used by users.'}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"step-2-access-doris",children:"Step 2: Access Doris"}),"\n",(0,r.jsx)(s.p,{children:"You can create a pod containing the mysql client in the current Kubernetes cluster using the following command:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"kubectl run mysql-client --image=mysql:5.7 -it --rm --restart=Never --namespace=doris -- /bin/bash\n"})}),"\n",(0,r.jsx)(s.p,{children:'From within the container in the cluster, you can access the Doris cluster using the service name with the "service" suffix that is exposed externally:'}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"mysql -uroot -P9030 -hdoriscluster-sample-fe-service\n"})}),"\n",(0,r.jsx)(s.h2,{id:"nodeport",children:"NodePort"}),"\n",(0,r.jsxs)(s.p,{children:["According to the DorisCluster access configuration section, after ",(0,r.jsx)(s.a,{href:"/docs/dev/install/deploy-on-kubernetes/integrated-storage-compute/install-config-cluster#nodeport",children:"configuring the access mode to use NodePort"}),", you can access FE using the MySQL protocol in root password-free mode. The steps are as follows:"]}),"\n",(0,r.jsx)(s.h3,{id:"step-1-obtain-the-service-1",children:"Step 1: Obtain the service"}),"\n",(0,r.jsx)(s.p,{children:"After deploying the cluster, you can view the services exposed by the Doris Operator using the following command:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"kubectl get service\n"})}),"\n",(0,r.jsx)(s.p,{children:"The returned result is as follows:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"NAME                              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                                                       AGE\nkubernetes                        ClusterIP   10.152.183.1     <none>        443/TCP                                                       169d\ndoriscluster-sample-fe-internal   ClusterIP   None             <none>        9030/TCP                                                      2d\ndoriscluster-sample-fe-service    NodePort    10.152.183.58    <none>        8030:31041/TCP,9020:30783/TCP,9030:31545/TCP,9010:31610/TCP   2d\ndoriscluster-sample-be-internal   ClusterIP   None             <none>        9050/TCP                                                      2d\ndoriscluster-sample-be-service    NodePort    10.152.183.244   <none>        9060:30940/TCP,8040:32713/TCP,9050:30621/TCP,8060:30926/TCP   2d\n"})}),"\n",(0,r.jsx)(s.h3,{id:"step-2-access-doris-1",children:"Step 2: Access Doris"}),"\n",(0,r.jsx)(s.p,{children:"To access Doris via NodePort, you need to know the Node IP and the mapped port. You can retrieve the node IPs using:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"  kubectl get nodes -owide\n"})}),"\n",(0,r.jsx)(s.p,{children:"Example output::"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"NAME   STATUS   ROLES           AGE   VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE          KERNEL-VERSION          CONTAINER-RUNTIME\nr60    Ready    control-plane   14d   v1.28.2   192.168.88.60   <none>        CentOS Stream 8   4.18.0-294.el8.x86_64   containerd://1.6.22\nr61    Ready    <none>          14d   v1.28.2   192.168.88.61   <none>        CentOS Stream 8   4.18.0-294.el8.x86_64   containerd://1.6.22\nr62    Ready    <none>          14d   v1.28.2   192.168.88.62   <none>        CentOS Stream 8   4.18.0-294.el8.x86_64   containerd://1.6.22\nr63    Ready    <none>          14d   v1.28.2   192.168.88.63   <none>        CentOS Stream 8   4.18.0-294.el8.x86_64   containerd://1.6.22\n"})}),"\n",(0,r.jsx)(s.p,{children:"You can then use the IP address of any node (e.g., 192.168.88.61, 192.168.88.62, or 192.168.88.63) along with the mapped port to access Doris. For example, using node 192.168.88.62 and port 31545:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"  mysql -h 192.168.88.62 -P 31545 -uroot\n"})}),"\n",(0,r.jsx)(s.h2,{id:"loadbalancer",children:"LoadBalancer"}),"\n",(0,r.jsxs)(s.p,{children:["According to the DorisCluster access configuration section, on a public cloud platform, after ",(0,r.jsx)(s.a,{href:"/docs/dev/install/deploy-on-kubernetes/integrated-storage-compute/install-config-cluster#loadbalancer",children:"configuring the access mode to use LoadBalancer"}),", you can access FE using the MySQL protocol in root password-free mode. The steps are as follows:"]}),"\n",(0,r.jsx)(s.h3,{id:"step-1-obtain-the-service-2",children:"Step 1: Obtain the service"}),"\n",(0,r.jsx)(s.p,{children:"After deploying the cluster, you can view the services exposed by the Doris Operator using the following command:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"kubectl get service\n"})}),"\n",(0,r.jsx)(s.p,{children:"The returned result is as follows:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"NAME                              TYPE           CLUSTER-IP       EXTERNAL-IP                                                                     PORT(S)                                                       AGE\nkubernetes                        ClusterIP      10.152.183.1     <none>                                                                          443/TCP                                                       169d\ndoriscluster-sample-fe-internal   ClusterIP      None             <none>                                                                          9030/TCP                                                      2d\ndoriscluster-sample-fe-service    LoadBalancer   10.152.183.58    ac4828493dgrftb884g67wg4tb68gyut-1137856348.us-east-1.elb.amazonaws.com         8030:31041/TCP,9020:30783/TCP,9030:31545/TCP,9010:31610/TCP   2d\ndoriscluster-sample-be-internal   ClusterIP      None             <none>                                                                          9050/TCP                                                      2d\ndoriscluster-sample-be-service    LoadBalancer   10.152.183.244   ac4828493dgrftb884g67wg4tb68gyut-1137823345.us-east-1.elb.amazonaws.com         9060:30940/TCP,8040:32713/TCP,9050:30621/TCP,8060:30926/TCP   2d\n"})}),"\n",(0,r.jsx)(s.h3,{id:"step-2-access-doris-2",children:"Step 2: Access Doris"}),"\n",(0,r.jsxs)(s.p,{children:["To access Doris through the LoadBalancer, use the external IP (provided in the EXTERNAL-IP field) and the corresponding port. For example, using the ",(0,r.jsx)(s.code,{children:"mysql"})," command:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"mysql -h ac4828493dgrftb884g67wg4tb68gyut-1137856348.us-east-1.elb.amazonaws.com -P 31545 -uroot\n"})}),"\n",(0,r.jsx)(s.h2,{id:"streamload-access-to-doris-deployed-on-kubernetes",children:"StreamLoad Access to Doris Deployed on Kubernetes"}),"\n",(0,r.jsx)(s.p,{children:"Doris supports data import using the StreamLoad method. When the client and the Doris cluster are within the same local network, the client can directly use the Frontend (FE) address as the request endpoint. The FE service responds with an HTTP 301 status code and provides the Backend (BE) address, instructing the client to redirect the request to the BE for data import."}),"\n",(0,r.jsx)(s.p,{children:"However, when Doris is deployed on Kubernetes, internal communication uses addresses that are only accessible within the Kubernetes cluster. If the FE returns a BE address that is only reachable internally via the 301 redirect mechanism, data import attempts from clients outside the Kubernetes cluster will fail."}),"\n",(0,r.jsx)(s.p,{children:"To import data using StreamLoad from a client located outside the Kubernetes environment, you must configure the import address with a BE address that is externally accessible."}),"\n",(0,r.jsx)(s.h3,{id:"configure-external-access-to-the-be-service",children:"Configure External Access to the BE Service"}),"\n",(0,r.jsxs)(s.p,{children:["To enable access to the BE service from outside the Kubernetes cluster, configure the service as either a ",(0,r.jsx)(s.a,{href:"/docs/dev/install/deploy-on-kubernetes/integrated-storage-compute/install-config-cluster#nodeport",children:"NodePort"})," or a ",(0,r.jsx)(s.a,{href:"/docs/dev/install/deploy-on-kubernetes/integrated-storage-compute/install-config-cluster#loadbalancer",children:"LoadBalancer"}),". Update the ",(0,r.jsx)(s.code,{children:"DorisCluster"})," resource accordingly to apply these changes."]}),"\n",(0,r.jsx)(s.h3,{id:"configure-the-be-proxy-address",children:"Configure the BE Proxy Address"}),"\n",(0,r.jsxs)(s.p,{children:["As the description of ",(0,r.jsx)(s.a,{href:"#nodeport",children:"NodePort"})," or ",(0,r.jsx)(s.a,{href:"#loadbalancer",children:"LoadBalancer"})," to get an externally accessible address and the corresponding ",(0,r.jsx)(s.code,{children:"web_server"})," port. Use this address and port as the request endpoint when importing data via StreamLoad."]})]})}function u(e={}){let{wrapper:s}={...(0,o.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},250065:function(e,s,n){n.d(s,{Z:function(){return l},a:function(){return a}});var t=n(667294);let r={},o=t.createContext(r);function a(e){let s=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);