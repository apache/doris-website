"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["673997"],{218918:function(n,e,r){r.r(e),r.d(e,{default:()=>u,frontMatter:()=>i,metadata:()=>a,assets:()=>c,toc:()=>d,contentTitle:()=>t});var a=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/array-functions/array-min","title":"ARRAY_MIN","description":"array_min","source":"@site/docs/sql-manual/sql-functions/scalar-functions/array-functions/array-min.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/array-functions","slug":"/sql-manual/sql-functions/scalar-functions/array-functions/array-min","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/array-functions/array-min","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"ARRAY_MIN","language":"en"},"sidebar":"docs","previous":{"title":"ARRAY_MAX","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/array-functions/array-max"},"next":{"title":"ARRAY_POPBACK","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/array-functions/array-popback"}}'),s=r("785893"),l=r("250065");let i={title:"ARRAY_MIN",language:"en"},t=void 0,c={},d=[{value:"array_min",id:"array_min",level:2},{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Return Value",id:"return-value",level:3},{value:"Keywords",id:"keywords",level:3}];function o(n){let e={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",t:"t",ul:"ul",version:"version",...(0,l.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{id:"array_min",children:"array_min"}),"\n",(0,s.jsx)(e.version,{since:"2.0.0",children:"\n"}),"\n",(0,s.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(e.p,{children:"Calculates the minimum value in an array. The function iterates through all elements in the array, finds the minimum value and returns it."}),"\n",(0,s.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"array_min(ARRAY<T> arr)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"arr"}),"\uFF1AARRAY",(0,s.jsx)(e.t,{children:" type, the array for which to calculate the minimum value."})]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Supported types for T:"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Numeric types: TINYINT, SMALLINT, INT, BIGINT, LARGEINT, FLOAT, DOUBLE, DECIMAL"}),"\n",(0,s.jsx)(e.li,{children:"String types: CHAR, VARCHAR, STRING"}),"\n",(0,s.jsx)(e.li,{children:"Date and time types: DATE, DATETIME, DATEV2, DATETIMEV2"}),"\n",(0,s.jsx)(e.li,{children:"Boolean type: BOOLEAN"}),"\n",(0,s.jsx)(e.li,{children:"IP types: IPV4, IPV6"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsx)(e.p,{children:"Return type: T"}),"\n",(0,s.jsx)(e.p,{children:"Return value meaning:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Returns the minimum value in the array"}),"\n",(0,s.jsx)(e.li,{children:"NULL: if the array is empty, or if all elements are null"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"Usage notes:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Determines the element to return by comparing elements in the array, supports comparing elements of the same data type"}),"\n",(0,s.jsx)(e.li,{children:"If the array is NULL, it will return a type conversion error"}),"\n",(0,s.jsx)(e.li,{children:"For null values in array elements: null elements are not included in comparison"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Query Examples:"})}),"\n",(0,s.jsx)(e.p,{children:"Calculate the minimum value of a floating-point array:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"SELECT array_min([5.5, 2.2, 8.8, 1.1, 9.9, 3.3]);\n+-------------------------------------------+\n| array_min([5.5, 2.2, 8.8, 1.1, 9.9, 3.3]) |\n+-------------------------------------------+\n|                                       1.1 |\n+-------------------------------------------+\n"})}),"\n",(0,s.jsx)(e.p,{children:"Calculate the minimum value of a string array (lexicographically):"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"SELECT array_min(['zebra', 'apple', 'banana', 'cherry']);\n+---------------------------------------------------+\n| array_min(['zebra', 'apple', 'banana', 'cherry']) |\n+---------------------------------------------------+\n| apple                                             |\n+---------------------------------------------------+\n"})}),"\n",(0,s.jsx)(e.p,{children:"Calculate the minimum value of an array containing null values, null elements are not included in comparison:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"SELECT array_min([5, null, 2, null, 8, 1]);\n+-------------------------------------+\n| array_min([5, null, 2, null, 8, 1]) |\n+-------------------------------------+\n|                                   1 |\n+-------------------------------------+\n"})}),"\n",(0,s.jsx)(e.p,{children:"Empty array returns NULL:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"SELECT array_min([]);\n+------------------+\n| array_min([])    |\n+------------------+\n| NULL             |\n+------------------+\n"})}),"\n",(0,s.jsx)(e.p,{children:"Array with all null elements returns NULL:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"SELECT array_min([null, null, null]);\n+----------------------------------+\n| array_min([null, null, null])    |\n+----------------------------------+\n| NULL                             |\n+----------------------------------+\n"})}),"\n",(0,s.jsx)(e.p,{children:"Minimum value of a date array:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"SELECT array_min(cast(['2023-01-01', '2022-12-31', '2023-06-15'] as array<datetime>));\n+--------------------------------------------------------------------------------+\n| array_min(cast(['2023-01-01', '2022-12-31', '2023-06-15'] as array<datetime>)) |\n+--------------------------------------------------------------------------------+\n| 2022-12-31 00:00:00                                                            |\n+--------------------------------------------------------------------------------+\n"})}),"\n",(0,s.jsx)(e.p,{children:"Minimum value of an IP address array:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"SELECT array_min(CAST(['192.168.1.100', '192.168.1.1', '192.168.1.50'] AS ARRAY<IPV4>));\n+----------------------------------------------------------------------------------+\n| array_min(CAST(['192.168.1.100', '192.168.1.1', '192.168.1.50'] AS ARRAY<IPV4>)) |\n+----------------------------------------------------------------------------------+\n| 192.168.1.1                                                                      |\n+----------------------------------------------------------------------------------+\n\nSELECT array_min(CAST(['2001:db8::1', '2001:db8::2', '2001:db8::0'] AS ARRAY<IPV6>));\n+-------------------------------------------------------------------------------+\n| array_min(CAST(['2001:db8::1', '2001:db8::2', '2001:db8::0'] AS ARRAY<IPV6>)) |\n+-------------------------------------------------------------------------------+\n| 2001:db8::                                                                    |\n+-------------------------------------------------------------------------------+\n"})}),"\n",(0,s.jsx)(e.p,{children:"Complex type examples:"}),"\n",(0,s.jsx)(e.p,{children:"Nested array types are not supported, will error:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"SELECT array_min([[1,2],[3,4],[5,6]]);\nERROR 1105 (HY000): errCode = 2, detailMessage = array_min does not support complex types: array_min([[1, 2], [3, 4], [5, 6]])\n"})}),"\n",(0,s.jsx)(e.p,{children:"Map types are not supported, will error:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"SELECT array_min([{'k':1},{'k':2},{'k':3}]);\nERROR 1105 (HY000): errCode = 2, detailMessage = array_min does not support complex types: array_min([map('k', 1), map('k', 2), map('k', 3)])\n"})}),"\n",(0,s.jsx)(e.p,{children:"Error when parameter count is wrong:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"SELECT array_min([1,2,3], [4,5,6]);\nERROR 1105 (HY000): errCode = 2, detailMessage = Can not found function 'array_min' which has 2 arity. Candidate functions are: [array_min(Expression)]\n"})}),"\n",(0,s.jsx)(e.p,{children:"Error when passing non-array type:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"SELECT array_min('not_an_array');\nERROR 1105 (HY000): errCode = 2, detailMessage = class org.apache.doris.nereids.types.VarcharType cannot be cast to class org.apache.doris.nereids.types.ArrayType (org.apache.doris.nereids.types.VarcharType and org.apache.doris.nereids.types.ArrayType are in unnamed module of loader 'app')\n"})}),"\n",(0,s.jsx)(e.p,{children:"Array is NULL, will return type conversion error:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"mysql> SELECT array_min(NULL);\nERROR 1105 (HY000): errCode = 2, detailMessage = class org.apache.doris.nereids.types.NullType cannot be cast to class org.apache.doris.nereids.types.ArrayType (org.apache.doris.nereids.types.NullType and org.apache.doris.nereids.types.ArrayType are in unnamed module of loader 'app')\n"})}),"\n",(0,s.jsx)(e.h3,{id:"keywords",children:"Keywords"}),"\n",(0,s.jsx)(e.p,{children:"ARRAY, MIN, ARRAY_MIN"})]})}function u(n={}){let{wrapper:e}={...(0,l.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(o,{...n})}):o(n)}},250065:function(n,e,r){r.d(e,{Z:function(){return t},a:function(){return i}});var a=r(667294);let s={},l=a.createContext(s);function i(n){let e=a.useContext(l);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),a.createElement(l.Provider,{value:e},n.children)}}}]);