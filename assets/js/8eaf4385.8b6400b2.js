"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["382204"],{72353:function(n,e,t){t.r(e),t.d(e,{default:()=>p,frontMatter:()=>l,metadata:()=>s,assets:()=>c,toc:()=>o,contentTitle:()=>r});var s=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/bitmap-functions/bitmap-to-string","title":"BITMAP_TO_STRING","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/bitmap-functions/bitmap-to-string.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/bitmap-functions","slug":"/sql-manual/sql-functions/scalar-functions/bitmap-functions/bitmap-to-string","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/bitmap-functions/bitmap-to-string","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"BITMAP_TO_STRING","language":"en"},"sidebar":"docs","previous":{"title":"BITMAP_TO_BASE64","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/bitmap-functions/bitmap-to-base64"},"next":{"title":"BITMAP_XOR","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/bitmap-functions/bitmap-xor"}}'),i=t("785893"),a=t("250065");let l={title:"BITMAP_TO_STRING",language:"en"},r=void 0,c={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function d(n){let e={br:"br",code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(e.p,{children:"Converts a Bitmap into a comma-separated string containing all the set bit positions."}),"\n",(0,i.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:"BITMAP_TO_STRING(<bitmap>)\n"})}),"\n",(0,i.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Parameter"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"<bitmap>"})}),(0,i.jsx)(e.td,{children:"A Bitmap type column or expression"})]})})]}),"\n",(0,i.jsx)(e.h2,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsxs)(e.p,{children:["A string containing all the set bit positions in the Bitmap, separated by commas.",(0,i.jsx)(e.br,{}),"\nReturns ",(0,i.jsx)(e.code,{children:"NULL"})," if the Bitmap is ",(0,i.jsx)(e.code,{children:"NULL"}),"."]}),"\n",(0,i.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(e.p,{children:["To convert a ",(0,i.jsx)(e.code,{children:"NULL"})," Bitmap to a string:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:"select bitmap_to_string(null);\n"})}),"\n",(0,i.jsx)(e.p,{children:"The result will be:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-text",children:"+------------------------+\n| bitmap_to_string(NULL) |\n+------------------------+\n| NULL                   |\n+------------------------+\n"})}),"\n",(0,i.jsx)(e.p,{children:"To convert an empty Bitmap to a string:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:"select bitmap_to_string(bitmap_empty());\n"})}),"\n",(0,i.jsx)(e.p,{children:"The result will be:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-text",children:"+----------------------------------+\n| bitmap_to_string(bitmap_empty()) |\n+----------------------------------+\n|                                  |\n+----------------------------------+\n"})}),"\n",(0,i.jsx)(e.p,{children:"To convert a Bitmap with a single element to a string:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:"select bitmap_to_string(to_bitmap(1));\n"})}),"\n",(0,i.jsx)(e.p,{children:"The result will be:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-text",children:"+--------------------------------+\n| bitmap_to_string(to_bitmap(1)) |\n+--------------------------------+\n| 1                              |\n+--------------------------------+\n"})}),"\n",(0,i.jsx)(e.p,{children:"To convert a Bitmap with multiple elements to a string:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:"select bitmap_to_string(bitmap_or(to_bitmap(1), to_bitmap(2)));\n"})}),"\n",(0,i.jsx)(e.p,{children:"The result will be:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-text",children:"+---------------------------------------------------------+\n| bitmap_to_string(bitmap_or(to_bitmap(1), to_bitmap(2))) |\n+---------------------------------------------------------+\n| 1,2                                                     |\n+---------------------------------------------------------+\n"})})]})}function p(n={}){let{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},250065:function(n,e,t){t.d(e,{Z:function(){return r},a:function(){return l}});var s=t(667294);let i={},a=s.createContext(i);function l(n){let e=s.useContext(a);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),s.createElement(a.Provider,{value:e},n.children)}}}]);