"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["244734"],{79981:function(e,n,l){l.r(n),l.d(n,{default:()=>u,frontMatter:()=>t,metadata:()=>a,assets:()=>c,toc:()=>d,contentTitle:()=>i});var a=JSON.parse('{"id":"sql-manual/sql-functions/table-functions/explode-outer","title":"EXPLODE-OUTER","description":"Description","source":"@site/docs/sql-manual/sql-functions/table-functions/explode-outer.md","sourceDirName":"sql-manual/sql-functions/table-functions","slug":"/sql-manual/sql-functions/table-functions/explode-outer","permalink":"/docs/dev/sql-manual/sql-functions/table-functions/explode-outer","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"EXPLODE-OUTER","language":"en"},"sidebar":"docs","previous":{"title":"EXPLODE","permalink":"/docs/dev/sql-manual/sql-functions/table-functions/explode"},"next":{"title":"EXPLODE_BITMAP","permalink":"/docs/dev/sql-manual/sql-functions/table-functions/explode-bitmap"}}'),s=l("785893"),r=l("250065");let t={title:"EXPLODE-OUTER",language:"en"},i=void 0,c={},d=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Variadic Parameters",id:"variadic-parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Usage Notes",id:"usage-notes",level:2},{value:"Examples",id:"examples",level:2}];function o(e){let n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"explode"})," function accepts an array and maps each element of the array to a separate row. It should be used together with ",(0,s.jsx)(n.a,{href:"/docs/dev/query-data/lateral-view",children:(0,s.jsx)(n.code,{children:"LATERAL VIEW"})})," to flatten nested data structures into a standard flat table format. The main difference between ",(0,s.jsx)(n.code,{children:"explode_outer"})," and ",(0,s.jsx)(n.a,{href:"/docs/dev/sql-manual/sql-functions/table-functions/explode",children:(0,s.jsx)(n.code,{children:"explode"})})," is how they handle null values."]}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"EXPLODE(<array>[, ...])\n"})}),"\n",(0,s.jsx)(n.h2,{id:"variadic-parameters",children:"Variadic Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<array>"})," Array type."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Returns a single-column, multi-row result composed of all elements in ",(0,s.jsx)(n.code,{children:"<array>"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"<array>"})," is NULL or an empty array (number of elements is 0), 1 row with NULL is returned."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"usage-notes",children:"Usage Notes"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["If the ",(0,s.jsx)(n.code,{children:"<array>"})," parameter is not of type ",(0,s.jsx)(n.a,{href:"/docs/dev/sql-manual/basic-element/sql-data-types/semi-structured/ARRAY",children:(0,s.jsx)(n.code,{children:"Array"})}),", an error will be reported."]}),"\n",(0,s.jsx)(n.li,{children:"If there are multiple array parameters, the number of expanded rows is determined by the array with the most elements. Arrays with fewer elements will be padded with NULLs."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(n.ol,{start:"0",children:["\n",(0,s.jsxs)(n.li,{children:["Prepare data\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'create table example(\n    k1 int\n) properties(\n    "replication_num" = "1"\n);\n\ninsert into example values(1);\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Regular parameters\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select  * from example lateral view explode([1, 2, null, 4, 5]) t2 as c;\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"+------+------+\n| k1   | c    |\n+------+------+\n|    1 |    1 |\n|    1 |    2 |\n|    1 | NULL |\n|    1 |    4 |\n|    1 |    5 |\n+------+------+\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Multiple parameters\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'select  * from example lateral view explode([], [1, 2, null, 4, 5], ["ab", "cd", "ef"], [null, null, 1, 2, 3, 4, 5]) t2 as c0, c1, c2, c3;\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"+------+------+------+------+------+\n| k1   | c0   | c1   | c2   | c3   |\n+------+------+------+------+------+\n|    1 | NULL |    1 | ab   | NULL |\n|    1 | NULL |    2 | cd   | NULL |\n|    1 | NULL | NULL | ef   |    1 |\n|    1 | NULL |    4 | NULL |    2 |\n|    1 | NULL |    5 | NULL |    3 |\n|    1 | NULL | NULL | NULL |    4 |\n|    1 | NULL | NULL | NULL |    5 |\n+------+------+------+------+------+\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["The array with the most rows after expansion is ",(0,s.jsx)(n.code,{children:"[null, null, 1, 2, 3, 4, 5]"})," (c3), which has 7 rows. Therefore, the final result has 7 rows, and the other three arrays (c0, c1, c2) are padded with NULLs for missing rows."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Empty array\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select  * from example lateral view explode_outer([]) t2 as c;\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"+------+------+\n| k1   | c    |\n+------+------+\n|    1 | NULL |\n+------+------+\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["NULL parameter\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select  * from example lateral view explode_outer(NULL) t2 as c;\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"+------+------+\n| k1   | c    |\n+------+------+\n|    1 | NULL |\n+------+------+\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Non-array parameter\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select  * from example lateral view explode_outer('abc') t2 as c;\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"ERROR 1105 (HY000): errCode = 2, detailMessage = Can not find the compatibility function signature: explode_outer(VARCHAR(3))\n"})}),"\n"]}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},250065:function(e,n,l){l.d(n,{Z:function(){return i},a:function(){return t}});var a=l(667294);let s={},r=a.createContext(s);function t(e){let n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);