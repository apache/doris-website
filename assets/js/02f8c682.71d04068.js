"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["195214"],{522475:function(n,e,s){s.r(e),s.d(e,{default:()=>h,frontMatter:()=>t,metadata:()=>r,assets:()=>c,toc:()=>d,contentTitle:()=>i});var r=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/string-functions/find-in-set","title":"FIND_IN_SET","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/string-functions/find-in-set.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/string-functions","slug":"/sql-manual/sql-functions/scalar-functions/string-functions/find-in-set","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/find-in-set","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"FIND_IN_SET","language":"en"},"sidebar":"docs","previous":{"title":"FROM_BASE64","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/from-base64"},"next":{"title":"FIRST_SIGNIFICANT_SUBDOMAIN","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/first-significant-subdomain"}}'),l=s("785893"),a=s("250065");let t={title:"FIND_IN_SET",language:"en"},i=void 0,c={},d=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function o(n){let e={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,l.jsx)(e.p,{children:"Returns the position of the first occurrence of string str in the comma-separated string list strlist (counting starts from 1). This function is implemented in MySQL-compatible mode and is used to find specific strings in comma-separated value lists."}),"\n",(0,l.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-sql",children:"FIND_IN_SET(<str>, <strlist>)\n"})}),"\n",(0,l.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{children:"Parameter"}),(0,l.jsx)(e.th,{children:"Description"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"<str>"})}),(0,l.jsx)(e.td,{children:"The target string to search for. Type: VARCHAR"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"<strlist>"})}),(0,l.jsx)(e.td,{children:"The comma-separated string list to search in for str. Type: VARCHAR"})]})]})]}),"\n",(0,l.jsx)(e.h2,{id:"return-value",children:"Return Value"}),"\n",(0,l.jsx)(e.p,{children:"Returns INT type, representing the position of str in strlist (counting starts from 1)."}),"\n",(0,l.jsx)(e.p,{children:"Search rules:"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Exact match: Returns position only when str exactly matches a substring in strlist"}),"\n",(0,l.jsx)(e.li,{children:"Position counting starts from 1"}),"\n",(0,l.jsx)(e.li,{children:"Returns the position of the first match"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:"Special cases:"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"If str is an empty string, returns 0"}),"\n",(0,l.jsx)(e.li,{children:"If strlist is an empty string, returns 0"}),"\n",(0,l.jsx)(e.li,{children:"If no match is found, returns 0"}),"\n",(0,l.jsx)(e.li,{children:"If any parameter is NULL, returns NULL"}),"\n",(0,l.jsx)(e.li,{children:"If str contains a comma, it cannot be matched correctly (because comma is the delimiter)"}),"\n",(0,l.jsx)(e.li,{children:"Matching is case-sensitive"}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:"Basic search"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-sql",children:"SELECT FIND_IN_SET('b', 'a,b,c');\n"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-text",children:"+---------------------------+\n| FIND_IN_SET('b', 'a,b,c') |\n+---------------------------+\n|                         2 |\n+---------------------------+\n"})}),"\n",(0,l.jsxs)(e.ol,{start:"2",children:["\n",(0,l.jsx)(e.li,{children:"Find first element"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-sql",children:"SELECT FIND_IN_SET('apple', 'apple,banana,cherry');\n"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-text",children:"+------------------------------------------+\n| FIND_IN_SET('apple', 'apple,banana,cherry') |\n+------------------------------------------+\n|                                        1 |\n+------------------------------------------+\n"})}),"\n",(0,l.jsxs)(e.ol,{start:"3",children:["\n",(0,l.jsx)(e.li,{children:"Find last element"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-sql",children:"SELECT FIND_IN_SET('cherry', 'apple,banana,cherry');\n"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-text",children:"+-------------------------------------------+\n| FIND_IN_SET('cherry', 'apple,banana,cherry') |\n+-------------------------------------------+\n|                                         3 |\n+-------------------------------------------+\n"})}),"\n",(0,l.jsxs)(e.ol,{start:"4",children:["\n",(0,l.jsx)(e.li,{children:"No match found"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-sql",children:"SELECT FIND_IN_SET('orange', 'apple,banana,cherry');\n"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-text",children:"+--------------------------------------------+\n| FIND_IN_SET('orange', 'apple,banana,cherry') |\n+--------------------------------------------+\n|                                          0 |\n+--------------------------------------------+\n"})}),"\n",(0,l.jsxs)(e.ol,{start:"5",children:["\n",(0,l.jsx)(e.li,{children:"NULL value handling"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-sql",children:"SELECT FIND_IN_SET(NULL, 'a,b,c'), FIND_IN_SET('b', NULL);\n"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-text",children:"+---------------------------+-------------------------+\n| FIND_IN_SET(NULL, 'a,b,c') | FIND_IN_SET('b', NULL) |\n+---------------------------+-------------------------+\n|                      NULL |                    NULL |\n+---------------------------+-------------------------+\n"})}),"\n",(0,l.jsxs)(e.ol,{start:"6",children:["\n",(0,l.jsx)(e.li,{children:"Empty string handling"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-sql",children:"SELECT FIND_IN_SET('', 'a,b,c'), FIND_IN_SET('a', '');\n"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-text",children:"+-------------------------+-----------------------+\n| FIND_IN_SET('', 'a,b,c') | FIND_IN_SET('a', '') |\n+-------------------------+-----------------------+\n|                       0 |                     0 |\n+-------------------------+-----------------------+\n"})}),"\n",(0,l.jsxs)(e.ol,{start:"7",children:["\n",(0,l.jsx)(e.li,{children:"String containing comma (cannot match correctly)"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-sql",children:"SELECT FIND_IN_SET('a,b', 'a,b,c,d');\n"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-text",children:"+------------------------------+\n| FIND_IN_SET('a,b', 'a,b,c,d') |\n+------------------------------+\n|                            0 |\n+------------------------------+\n"})}),"\n",(0,l.jsxs)(e.ol,{start:"8",children:["\n",(0,l.jsx)(e.li,{children:"Case-sensitive matching"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-sql",children:"SELECT FIND_IN_SET('B', 'a,b,c'), FIND_IN_SET('b', 'A,B,C');\n"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-text",children:"+---------------------------+---------------------------+\n| FIND_IN_SET('B', 'a,b,c') | FIND_IN_SET('b', 'A,B,C') |\n+---------------------------+---------------------------+\n|                         0 |                         0 |\n+---------------------------+---------------------------+\n"})}),"\n",(0,l.jsxs)(e.ol,{start:"9",children:["\n",(0,l.jsx)(e.li,{children:"Partial match will not succeed"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-sql",children:"SELECT FIND_IN_SET('ap', 'apple,banana,cherry');\n"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-text",children:"+---------------------------------------+\n| FIND_IN_SET('ap', 'apple,banana,cherry') |\n+---------------------------------------+\n|                                     0 |\n+---------------------------------------+\n"})}),"\n",(0,l.jsxs)(e.ol,{start:"10",children:["\n",(0,l.jsx)(e.li,{children:"Numeric string search"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-sql",children:"SELECT FIND_IN_SET('2', '1,2,3,10,20');\n"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-text",children:"+--------------------------------+\n| FIND_IN_SET('2', '1,2,3,10,20') |\n+--------------------------------+\n|                              2 |\n+--------------------------------+\n"})})]})}function h(n={}){let{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(o,{...n})}):o(n)}},250065:function(n,e,s){s.d(e,{Z:function(){return i},a:function(){return t}});var r=s(667294);let l={},a=r.createContext(l);function t(n){let e=r.useContext(a);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:t(n.components),r.createElement(a.Provider,{value:e},n.children)}}}]);