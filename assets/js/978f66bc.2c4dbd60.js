"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["87146"],{397362:function(e,n,l){l.r(n),l.d(n,{default:()=>u,frontMatter:()=>r,metadata:()=>s,assets:()=>c,toc:()=>d,contentTitle:()=>a});var s=JSON.parse('{"id":"sql-manual/sql-functions/table-functions/explode-split-outer","title":"EXPLODE_SPLIT_OUTER","description":"Description","source":"@site/docs/sql-manual/sql-functions/table-functions/explode-split-outer.md","sourceDirName":"sql-manual/sql-functions/table-functions","slug":"/sql-manual/sql-functions/table-functions/explode-split-outer","permalink":"/docs/dev/sql-manual/sql-functions/table-functions/explode-split-outer","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"EXPLODE_SPLIT_OUTER","language":"en"},"sidebar":"docs","previous":{"title":"EXPLODE_SPLIT","permalink":"/docs/dev/sql-manual/sql-functions/table-functions/explode-split"},"next":{"title":"POSEXPLODE","permalink":"/docs/dev/sql-manual/sql-functions/table-functions/posexplode"}}'),t=l("785893"),i=l("250065");let r={title:"EXPLODE_SPLIT_OUTER",language:"en"},a=void 0,c={},d=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Usage Notes",id:"usage-notes",level:2},{value:"Examples",id:"examples",level:2}];function o(e){let n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"explode_split_outer"})," table function is used to split a string into multiple substrings according to the specified delimiter, and expand each substring into a separate row.\nIt should be used together with ",(0,t.jsx)(n.a,{href:"/docs/dev/query-data/lateral-view",children:(0,t.jsx)(n.code,{children:"LATERAL VIEW"})})," to flatten nested data structures into a standard flat table format.\nThe main difference between ",(0,t.jsx)(n.code,{children:"explode_split_outer"})," and ",(0,t.jsx)(n.a,{href:"/docs/dev/sql-manual/sql-functions/table-functions/explode-split",children:(0,t.jsx)(n.code,{children:"explode_split"})})," is how they handle null values."]}),"\n",(0,t.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"EXPLODE_SPLIT_OUTER(<str>, <delimiter>)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<str>"})," String type, the string to be split."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<delimiter>"})," String type, the delimiter."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Returns a column composed of the split substrings, with column type String."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"usage-notes",children:"Usage Notes"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["If ",(0,t.jsx)(n.code,{children:"<str>"})," is NULL, 1 row with NULL is returned."]}),"\n",(0,t.jsxs)(n.li,{children:["If ",(0,t.jsx)(n.code,{children:"<str>"}),' is an empty string ("") or cannot be split, 1 row is returned.']}),"\n",(0,t.jsxs)(n.li,{children:["If ",(0,t.jsx)(n.code,{children:"<delimiter>"})," is NULL, 1 row with NULL is returned."]}),"\n",(0,t.jsxs)(n.li,{children:["If ",(0,t.jsx)(n.code,{children:"<delimiter>"}),' is an empty string (""), ',(0,t.jsx)(n.code,{children:"<str>"})," will be split by bytes(",(0,t.jsx)(n.a,{href:"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/split-by-string",children:(0,t.jsx)(n.code,{children:"SPLIT_BY_STRING"})}),")."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsxs)(n.ol,{start:"0",children:["\n",(0,t.jsxs)(n.li,{children:["Prepare data\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'create table example(\n    k1 int\n) properties(\n    "replication_num" = "1"\n);\n\ninsert into example values(1);\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Regular parameters\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'select  * from example lateral view explode_split_outer("ab,cd,ef", ",") t2 as c;\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+------+------+\n| k1   | c    |\n+------+------+\n|    1 | ab   |\n|    1 | cd   |\n|    1 | ef   |\n+------+------+\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Empty string and unsplittable cases\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'select  * from example lateral view explode_split_outer("", ",") t2 as c;\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+------+------+\n| k1   | c    |\n+------+------+\n|    1 |      |\n+------+------+\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'select  * from example lateral view explode_split_outer("abc", ",") t2 as c;\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+------+------+\n| k1   | c    |\n+------+------+\n|    1 | abc  |\n+------+------+\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["NULL parameter\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"select  * from example lateral view explode_split_outer(NULL, ',') t2 as c;\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+------+------+\n| k1   | c    |\n+------+------+\n|    1 | NULL |\n+------+------+\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Empty delimiter\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"select  * from example lateral view explode_split_outer('abc', '') t2 as c;\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+------+------+\n| k1   | c    |\n+------+------+\n|    1 | a    |\n|    1 | b    |\n|    1 | c    |\n+------+------+\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Delimiter is NULL\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"select  * from example lateral view explode_split_outer('abc', null) t2 as c;\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+------+------+\n| k1   | c    |\n+------+------+\n|    1 | NULL |\n+------+------+\n"})}),"\n"]}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},250065:function(e,n,l){l.d(n,{Z:function(){return a},a:function(){return r}});var s=l(667294);let t={},i=s.createContext(t);function r(e){let n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);