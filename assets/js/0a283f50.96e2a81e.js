"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["728886"],{928306:function(e,n,t){t.r(n),t.d(n,{default:()=>d,frontMatter:()=>l,metadata:()=>i,assets:()=>c,toc:()=>o,contentTitle:()=>a});var i=JSON.parse('{"id":"sql-manual/sql-functions/aggregate-functions/intersect-count","title":"INTERSECT_COUNT","description":"Description","source":"@site/docs/sql-manual/sql-functions/aggregate-functions/intersect-count.md","sourceDirName":"sql-manual/sql-functions/aggregate-functions","slug":"/sql-manual/sql-functions/aggregate-functions/intersect-count","permalink":"/docs/dev/sql-manual/sql-functions/aggregate-functions/intersect-count","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"INTERSECT_COUNT","language":"en"},"sidebar":"docs","previous":{"title":"HLL_UNION_AGG","permalink":"/docs/dev/sql-manual/sql-functions/aggregate-functions/hll-union-agg"},"next":{"title":"KURT,KURT_POP,KURTOSIS","permalink":"/docs/dev/sql-manual/sql-functions/aggregate-functions/kurt"}}'),s=t("785893"),r=t("250065");let l={title:"INTERSECT_COUNT",language:"en"},a=void 0,c={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Example",id:"example",level:2}];function u(e){let n={code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"Calculate the intersection of two or more bitmaps\nUsage: intersect_count(bitmap_column_to_count, filter_column, filter_values ...)\nExample: intersect_count(user_id, event, 'A', 'B', 'C'), meaning find the intersect count of user_id in all A/B/C 3 bitmaps\nCalculate the intersection count of elements in bitmap_column that match column_to_filter within filter_values, i.e., bitmap intersection count."}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"INTERSECT_COUNT(<bitmap_column>, <column_to_filter>, <filter_values> [, ...])\n"})}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<bitmap_column>"})}),(0,s.jsx)(n.td,{children:"The input bitmap parameter column. Supported types: Bitmap."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<column_to_filter>"})}),(0,s.jsx)(n.td,{children:"The dimension column used for filtering. Supported types: TinyInt, SmallInt, Integer, BigInt, LargeInt."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<filter_values>"})}),(0,s.jsx)(n.td,{children:"The different values used to filter the dimension column. Supported types: TinyInt, SmallInt, Integer, BigInt, LargeInt."})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsx)(n.p,{children:"Returns the number of elements in the intersection of the given bitmaps."}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- setup\nCREATE TABLE pv_bitmap (\n	dt INT,\n	user_id BITMAP,\n	city STRING\n) DISTRIBUTED BY HASH(dt) BUCKETS 1\nPROPERTIES (\"replication_num\" = \"1\");\nINSERT INTO pv_bitmap VALUES\n	(20250801, to_bitmap(1), 'beijing'),\n	(20250801, to_bitmap(2), 'beijing'),\n	(20250801, to_bitmap(3), 'shanghai'),\n	(20250802, to_bitmap(3), 'beijing'),\n	(20250802, to_bitmap(4), 'shanghai'),\n	(20250802, to_bitmap(5), 'shenzhen');\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select intersect_count(user_id,dt,20250801) from pv_bitmap;\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"+--------------------------------------+\n| intersect_count(user_id,dt,20250801) |\n+--------------------------------------+\n|                                    3 |\n+--------------------------------------+\n"})})]})}function d(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return l}});var i=t(667294);let s={},r=i.createContext(s);function l(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);