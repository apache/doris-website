"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["350359"],{327091:function(n,e,s){s.r(e),s.d(e,{default:()=>o,frontMatter:()=>l,metadata:()=>i,assets:()=>t,toc:()=>c,contentTitle:()=>d});var i=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/ip-functions/is-ip-address-in-range","title":"IS_IP_ADDRESS_IN_RANGE","description":"isipaddressinrange","source":"@site/docs/sql-manual/sql-functions/scalar-functions/ip-functions/is-ip-address-in-range.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/ip-functions","slug":"/sql-manual/sql-functions/scalar-functions/ip-functions/is-ip-address-in-range","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/ip-functions/is-ip-address-in-range","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"IS_IP_ADDRESS_IN_RANGE","language":"en"},"sidebar":"docs","previous":{"title":"IPV6_STRING_TO_NUM_OR_NULL","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/ip-functions/ipv6-string-to-num-or-null"},"next":{"title":"IS_IPV4_COMPAT","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/ip-functions/is-ipv4-compat"}}'),r=s("785893"),a=s("250065");let l={title:"IS_IP_ADDRESS_IN_RANGE",language:"en"},d=void 0,t={},c=[{value:"is_ip_address_in_range",id:"is_ip_address_in_range",level:2},{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Return Value",id:"return-value",level:3},{value:"Usage Notes",id:"usage-notes",level:3},{value:"Examples",id:"examples",level:2},{value:"Keywords",id:"keywords",level:3}];function _(n){let e={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"is_ip_address_in_range",children:"is_ip_address_in_range"}),"\n",(0,r.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(e.p,{children:"Checks if a specified IP address is within a given CIDR network range. Supports both IPv4 and IPv6 addresses."}),"\n",(0,r.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"IS_IP_ADDRESS_IN_RANGE(<ip_address>, <cidr_range>)\n"})}),"\n",(0,r.jsx)(e.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"<ip_address>"}),": IP address to check (IPv4, IPv6 type or string)"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"<cidr_range>"}),': CIDR network range (string format, such as "192.168.1.0/24")']}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"return-value",children:"Return Value"}),"\n",(0,r.jsx)(e.p,{children:"Return Type: TINYINT"}),"\n",(0,r.jsx)(e.p,{children:"Return Value Meaning:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Returns 1: indicates the IP address is within the specified CIDR range"}),"\n",(0,r.jsx)(e.li,{children:"Returns 0: indicates the IP address is not within the specified CIDR range"}),"\n",(0,r.jsx)(e.li,{children:"Returns NULL when input is NULL"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"usage-notes",children:"Usage Notes"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Supports checking both IPv4 and IPv6 addresses"}),"\n",(0,r.jsx)(e.li,{children:'CIDR range must be in valid format (such as "192.168.1.0/24" or "2001:db8::/64")'}),"\n",(0,r.jsx)(e.li,{children:"Supports inverted index optimization, can use index acceleration when CIDR parameter is constant"}),"\n",(0,r.jsx)(e.li,{children:"Returns 0 for invalid CIDR formats"}),"\n",(0,r.jsx)(e.li,{children:"Returns NULL when input parameter is NULL"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(e.p,{children:"Check if IPv4 address is within specified network segment."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT is_ip_address_in_range(to_ipv4('192.168.1.100'), '192.168.1.0/24') as in_range;\n+----------+\n| in_range |\n+----------+\n| 1        |\n+----------+\n"})}),"\n",(0,r.jsx)(e.p,{children:"Check if IPv6 address is within specified network segment."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT is_ip_address_in_range(INET6_ATON('2001:db8::100'), '2001:db8::/64') as in_range;\n+----------+\n| in_range |\n+----------+\n| 1        |\n+----------+\n"})}),"\n",(0,r.jsx)(e.p,{children:"Check if multiple addresses are within specified network segment."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT \n  is_ip_address_in_range(to_ipv4('192.168.1.100'), '192.168.1.0/24') as in_192_168_1,\n  is_ip_address_in_range(to_ipv4('192.168.2.100'), '192.168.1.0/24') as in_192_168_2,\n  is_ip_address_in_range(to_ipv4('10.0.0.1'), '192.168.1.0/24') as in_10_0_0;\n+-------------+-------------+----------+\n| in_192_168_1| in_192_168_2| in_10_0_0|\n+-------------+-------------+----------+\n| 1           | 0           | 0        |\n+-------------+-------------+----------+\n"})}),"\n",(0,r.jsx)(e.p,{children:"Check ranges with different CIDR prefix lengths."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT \n  is_ip_address_in_range(to_ipv4('192.168.1.100'), '192.168.0.0/16') as in_16,\n  is_ip_address_in_range(to_ipv4('192.168.1.100'), '192.168.1.0/24') as in_24,\n  is_ip_address_in_range(to_ipv4('192.168.1.100'), '192.168.1.100/32') as in_32;\n+--------+--------+--------+\n| in_16  | in_24  | in_32  |\n+--------+--------+--------+\n| 1      | 1      | 1      |\n+--------+--------+--------+\n"})}),"\n",(0,r.jsx)(e.p,{children:"Invalid CIDR format returns 0."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT is_ip_address_in_range(to_ipv4('192.168.1.100'), 'invalid-cidr') as in_range;\n+----------+\n| in_range |\n+----------+\n| 0        |\n+----------+\n"})}),"\n",(0,r.jsx)(e.p,{children:"Input parameter as NULL returns NULL."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT is_ip_address_in_range(NULL, '192.168.1.0/24') as null_ip;\n+---------+\n| null_ip |\n+---------+\n| NULL    |\n+---------+\n\nSELECT is_ip_address_in_range(to_ipv4('192.168.1.100'), NULL) as null_cidr;\n+-----------+\n| null_cidr |\n+-----------+\n| NULL      |\n+-----------+\n\nSELECT is_ip_address_in_range(NULL, NULL) as both_null;\n+-----------+\n| both_null |\n+-----------+\n| NULL      |\n+-----------+\n"})}),"\n",(0,r.jsx)(e.h3,{id:"keywords",children:"Keywords"}),"\n",(0,r.jsx)(e.p,{children:"IS_IP_ADDRESS_IN_RANGE"})]})}function o(n={}){let{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(_,{...n})}):_(n)}},250065:function(n,e,s){s.d(e,{Z:function(){return d},a:function(){return l}});var i=s(667294);let r={},a=i.createContext(r);function l(n){let e=i.useContext(a);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:l(n.components),i.createElement(a.Provider,{value:e},n.children)}}}]);