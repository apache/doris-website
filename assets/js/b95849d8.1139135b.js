"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["421930"],{501571:function(e,n,s){s.r(n),s.d(n,{default:()=>o,frontMatter:()=>r,metadata:()=>t,assets:()=>c,toc:()=>d,contentTitle:()=>i});var t=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/struct-functions/named-struct","title":"NAMED_STRUCT","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/struct-functions/named-struct.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/struct-functions","slug":"/sql-manual/sql-functions/scalar-functions/struct-functions/named-struct","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/struct-functions/named-struct","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"NAMED_STRUCT","language":"en-US"},"sidebar":"docs","previous":{"title":"STR_TO_MAP","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/map-functions/str-to-map"},"next":{"title":"STRUCT","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/struct-functions/struct"}}'),a=s("785893"),l=s("250065");let r={title:"NAMED_STRUCT",language:"en-US"},i=void 0,c={},d=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Usage",id:"usage",level:2}];function u(e){let n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",t:"t",ul:"ul",...(0,l.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)(n.p,{children:"Constructs and returns a struct based on given field names and values. The function accepts an even number of parameters, where odd positions are field names and even positions are field values."}),"\n",(0,a.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"NAMED_STRUCT( <field_name> , <field_value> [ , <field_name> , <field_value> ... ] )\n"})}),"\n",(0,a.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"<field_name>"}),": Input content at odd positions for constructing the struct, the name of the field, must be a constant string"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"<field_value>"}),": Input content at even positions for constructing the struct, the value of the field, can be multiple columns or constants"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Supported element types:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Numeric types: TINYINT, SMALLINT, INT, BIGINT, LARGEINT, FLOAT, DOUBLE, DECIMAL"}),"\n",(0,a.jsx)(n.li,{children:"String types: CHAR, VARCHAR, STRING"}),"\n",(0,a.jsx)(n.li,{children:"Date and time types: DATE, DATETIME, DATEV2, DATETIMEV2"}),"\n",(0,a.jsx)(n.li,{children:"Boolean type: BOOLEAN"}),"\n",(0,a.jsx)(n.li,{children:"IP types: IPV4, IPV6"}),"\n",(0,a.jsx)(n.li,{children:"Complex types: ARRAY, MAP, STRUCT"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,a.jsxs)(n.p,{children:["Return type: STRUCT",(0,a.jsx)(n.t,{})]}),"\n",(0,a.jsx)(n.p,{children:"Return value meaning:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Returns a struct containing all specified field name and value pairs"}),"\n",(0,a.jsx)(n.li,{children:"All fields support NULL values"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"The function combines all field name and value pairs into a struct, where odd positions are field names (must be constant strings and cannot be repeated, case-insensitive), and even positions are field values (can be multiple columns or constants)"}),"\n",(0,a.jsx)(n.li,{children:"The number of parameters must be a non-zero even number greater than 1"}),"\n",(0,a.jsx)(n.li,{children:"All fields are marked as nullable"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Query Examples:"})}),"\n",(0,a.jsx)(n.p,{children:"Basic usage:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"select named_struct('name', 'Alice', 'age', 25, 'city', 'Beijing');\n+-------------------------------------------------------------+\n| named_struct('name', 'Alice', 'age', 25, 'city', 'Beijing') |\n+-------------------------------------------------------------+\n| {\"name\":\"Alice\", \"age\":25, \"city\":\"Beijing\"}                |\n+-------------------------------------------------------------+\n"})}),"\n",(0,a.jsx)(n.p,{children:"Including null values:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"select named_struct('id', 1, 'name', null, 'score', 95.5);\n+----------------------------------------------------+\n| named_struct('id', 1, 'name', null, 'score', 95.5) |\n+----------------------------------------------------+\n| {\"id\":1, \"name\":null, \"score\":95.5}                |\n+----------------------------------------------------+\n"})}),"\n",(0,a.jsx)(n.p,{children:"Including complex types:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"select named_struct('array', [1,2,3], 'map', {'key':'value'}, 'struct', named_struct('f1',1,'f2',2));\n+-----------------------------------------------------------------------------------------------+\n| named_struct('array', [1,2,3], 'map', {'key':'value'}, 'struct', named_struct('f1',1,'f2',2)) |\n+-----------------------------------------------------------------------------------------------+\n| {\"array\":[1, 2, 3], \"map\":{\"key\":\"value\"}, \"struct\":{\"f1\":1, \"f2\":2}}                         |\n+-----------------------------------------------------------------------------------------------+\n"})}),"\n",(0,a.jsx)(n.p,{children:"Creating a named struct containing IP addresses:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"select named_struct('ipv4', cast('192.168.1.1' as ipv4), 'ipv6', cast('2001:db8::1' as ipv6));\n+----------------------------------------------------------------------------------------+\n| named_struct('ipv4', cast('192.168.1.1' as ipv4), 'ipv6', cast('2001:db8::1' as ipv6)) |\n+----------------------------------------------------------------------------------------+\n| {\"ipv4\":\"192.168.1.1\", \"ipv6\":\"2001:db8::1\"}                                           |\n+----------------------------------------------------------------------------------------+\n"})}),"\n",(0,a.jsx)(n.p,{children:"Error Examples"}),"\n",(0,a.jsx)(n.p,{children:"Less than 2 parameters:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"select named_Struct();\nERROR 1105 (HY000): errCode = 2, detailMessage = named_struct requires at least two arguments, like: named_struct('a', 1)\n\nselect named_struct('name');\nERROR 1105 (HY000): errCode = 2, detailMessage = named_struct requires at least two arguments, like: named_struct('a', 1)\n"})}),"\n",(0,a.jsx)(n.p,{children:"Odd number of parameters:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"select named_struct('name', 'Alice', 'age');\nERROR 1105 (HY000): errCode = 2, detailMessage = named_struct can't be odd parameters, need even parameters named_struct('name', 'Alice', 'age')\n"})}),"\n",(0,a.jsx)(n.p,{children:"Duplicate field names, field names are case-insensitive:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"select named_struct('name', 'Alice', 'name', 'Bob');\nERROR 1105 (HY000): errCode = 2, detailMessage = The name of the struct field cannot be repeated. same name fields are name\n\nselect named_struct('name', 'Alice', 'Name', 'Bob');\nERROR 1105 (HY000): errCode = 2, detailMessage = The name of the struct field cannot be repeated. same name fields are name\n"})})]})}function o(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return i},a:function(){return r}});var t=s(667294);let a={},l=t.createContext(a);function r(e){let n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);