"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["192343"],{528341:function(n,e,s){s.r(e),s.d(e,{default:()=>o,frontMatter:()=>c,metadata:()=>l,assets:()=>i,toc:()=>d,contentTitle:()=>t});var l=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/string-functions/mask","title":"MASK","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/string-functions/mask.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/string-functions","slug":"/sql-manual/sql-functions/scalar-functions/string-functions/mask","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/mask","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"MASK","language":"en"},"sidebar":"docs","previous":{"title":"MAKE_SET","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/make-set"},"next":{"title":"MASK_FIRST_N","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/mask-first-n"}}'),r=s("785893"),a=s("250065");let c={title:"MASK",language:"en"},t=void 0,i={},d=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function x(n){let e={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(e.p,{children:["The MASK function is used to mask data to protect sensitive information. The default behavior is to convert uppercase letters to ",(0,r.jsx)(e.code,{children:"X"}),", lowercase letters to ",(0,r.jsx)(e.code,{children:"x"}),", and digits to ",(0,r.jsx)(e.code,{children:"n"}),"."]}),"\n",(0,r.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"MASK(<str>[, <upper>[, <lower>[, <number>]]])\n"})}),"\n",(0,r.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Parameter"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<str>"})}),(0,r.jsx)(e.td,{children:"The string to be masked. Type: VARCHAR"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<upper>"})}),(0,r.jsxs)(e.td,{children:["Character to replace uppercase letters with, default is ",(0,r.jsx)(e.code,{children:"X"})," (optional). Type: VARCHAR"]})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<lower>"})}),(0,r.jsxs)(e.td,{children:["Character to replace lowercase letters with, default is ",(0,r.jsx)(e.code,{children:"x"})," (optional). Type: VARCHAR"]})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<number>"})}),(0,r.jsxs)(e.td,{children:["Character to replace digits with, default is ",(0,r.jsx)(e.code,{children:"n"})," (optional). Type: VARCHAR"]})]})]})]}),"\n",(0,r.jsx)(e.h2,{id:"return-value",children:"Return Value"}),"\n",(0,r.jsx)(e.p,{children:"Returns VARCHAR type, the string with letters and digits replaced."}),"\n",(0,r.jsx)(e.p,{children:"Special cases:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"If any parameter is NULL, returns NULL"}),"\n",(0,r.jsx)(e.li,{children:"Non-alphanumeric characters remain unchanged"}),"\n",(0,r.jsx)(e.li,{children:"If replacement character parameters contain multiple characters, only the first character is used"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Basic usage: default replacement rules"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT mask('abc123XYZ');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+-------------------+\n| mask('abc123XYZ') |\n+-------------------+\n| xxxnnnXXX         |\n+-------------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"2",children:["\n",(0,r.jsx)(e.li,{children:"Custom replacement characters"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT mask('abc123XYZ', '*', '#', '$');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+----------------------------------+\n| mask('abc123XYZ', '*', '#', '$') |\n+----------------------------------+\n| ###$$$***                        |\n+----------------------------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"3",children:["\n",(0,r.jsx)(e.li,{children:"Special characters remain unchanged"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT mask('Hello-123!');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+--------------------+\n| mask('Hello-123!') |\n+--------------------+\n| Xxxxx-nnn!         |\n+--------------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"4",children:["\n",(0,r.jsx)(e.li,{children:"NULL value handling"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT mask(NULL);\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+------------+\n| mask(NULL) |\n+------------+\n| NULL       |\n+------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"5",children:["\n",(0,r.jsx)(e.li,{children:"Digits-only string"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT mask('1234567890');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+--------------------+\n| mask('1234567890') |\n+--------------------+\n| nnnnnnnnnn         |\n+--------------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"6",children:["\n",(0,r.jsx)(e.li,{children:"Letters-only string"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT mask('AbCdEfGh');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+------------------+\n| mask('AbCdEfGh') |\n+------------------+\n| XxXxXxXx         |\n+------------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"7",children:["\n",(0,r.jsx)(e.li,{children:"Empty string handling"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT mask('');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+----------+\n| mask('') |\n+----------+\n|          |\n+----------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"8",children:["\n",(0,r.jsx)(e.li,{children:"Single character replacement (takes first character from multiple)"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT mask('Test123', 'ABC', 'xyz', '999');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+--------------------------------------+\n| mask('Test123', 'ABC', 'xyz', '999') |\n+--------------------------------------+\n| Xxxx999                              |\n+--------------------------------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"9",children:["\n",(0,r.jsx)(e.li,{children:"Mask credit card number"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT mask('1234-5678-9012-3456');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+-----------------------------+\n| mask('1234-5678-9012-3456') |\n+-----------------------------+\n| nnnn-nnnn-nnnn-nnnn         |\n+-----------------------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"10",children:["\n",(0,r.jsx)(e.li,{children:"Mask email address"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT mask('user@example.com');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+--------------------------+\n| mask('user@example.com') |\n+--------------------------+\n| xxxx@xxxxxxx.xxx         |\n+--------------------------+\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT mask('eee\xe9\xe8\xea\xeb\xec\xed1234');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+-----------------------------+\n| mask('eee\xe9\xe8\xea\xeb\xec\xed1234')       |\n+-----------------------------+\n| xxx\xe9\xe8\xea\xeb\xec\xednnnn               |\n+-----------------------------+\n"})})]})}function o(n={}){let{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(x,{...n})}):x(n)}},250065:function(n,e,s){s.d(e,{Z:function(){return t},a:function(){return c}});var l=s(667294);let r={},a=l.createContext(r);function c(n){let e=l.useContext(a);return l.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:c(n.components),l.createElement(a.Provider,{value:e},n.children)}}}]);