"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["183001"],{969702:function(e,n,t){t.r(n),t.d(n,{default:()=>d,frontMatter:()=>a,metadata:()=>s,assets:()=>c,toc:()=>u,contentTitle:()=>l});var s=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/date-time-functions/minutes-sub","title":"MINUTES_SUB","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/date-time-functions/minutes-sub.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/date-time-functions","slug":"/sql-manual/sql-functions/scalar-functions/date-time-functions/minutes-sub","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/minutes-sub","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"MINUTES_SUB","language":"en"},"sidebar":"docs","previous":{"title":"MINUTES_DIFF","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/minutes-diff"},"next":{"title":"MONTH","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/month"}}'),i=t("785893"),r=t("250065");let a={title:"MINUTES_SUB",language:"en"},l=void 0,c={},u=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function o(e){let n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"The MINUTES_SUB function subtracts a specified number of minutes from the input datetime value and returns the resulting new datetime value. This function supports processing DATE and DATETIME types."}),"\n",(0,i.jsxs)(n.p,{children:["This function is consistent with ",(0,i.jsx)(n.a,{href:"./date-sub",children:"date_sub function"})," and MySQL's ",(0,i.jsx)(n.a,{href:"https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_date-sub",children:"date_sub function"})," when using MINUTE as the unit."]}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"MINUTES_SUB(`<date_or_time_expr>`, `<minutes>`)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<date_or_time_expr>"})}),(0,i.jsxs)(n.td,{children:["The input datetime value, which can be of type DATE or DATETIME. For specific datetime/date formats, see ",(0,i.jsx)(n.a,{href:"../../../../../docs/sql-manual/basic-element/sql-data-types/conversion/datetime-conversion",children:"datetime conversion"})," and ",(0,i.jsx)(n.a,{href:"../../../../../docs/sql-manual/basic-element/sql-data-types/conversion/date-conversion",children:"date conversion"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<minutes>"})}),(0,i.jsx)(n.td,{children:"The number of minutes to subtract, of type BIGINT. Can be positive or negative."})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsx)(n.p,{children:"Returns a value of type DATETIME, representing the datetime value after subtracting the specified number of minutes."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"<minutes>"})," is negative, the function behaves the same as adding the corresponding minutes to the base time (i.e., MINUTES_SUB(date, -n) is equivalent to MINUTES_ADD(date, n))."]}),"\n",(0,i.jsx)(n.li,{children:"If the input is of DATE type (only includes year, month, and day), its time part defaults to 00:00:00."}),"\n",(0,i.jsx)(n.li,{children:"If the input datetime includes microseconds, the original microsecond precision is preserved after subtracting minutes (e.g., '2023-01-01 00:01:00.123456' becomes '2023-01-01 00:00:00.123456' after subtracting 1 minute)."}),"\n",(0,i.jsx)(n.li,{children:"If the calculation result exceeds the valid range of the DATETIME type (0000-01-01 00:00:00 to 9999-12-31 23:59:59.999999), an exception is thrown."}),"\n",(0,i.jsx)(n.li,{children:"If any parameter is NULL, returns NULL."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Subtract minutes from DATETIME\nSELECT MINUTES_SUB('2020-02-02 02:02:02', 1) AS result;\n+---------------------+\n| result              |\n+---------------------+\n| 2020-02-02 02:01:02 |\n+---------------------+\n\n-- Time with microseconds (preserves precision)\nSELECT MINUTES_SUB('2023-07-13 22:38:18.456789', 10) AS result;\n+----------------------------+\n| result                     |\n+----------------------------+\n| 2023-07-13 22:28:18.456789 |\n+----------------------------+\n\n-- Negative minutes (equivalent to addition)\nSELECT MINUTES_SUB('2023-07-13 22:23:18', -5) AS result;\n+---------------------+\n| result              |\n+---------------------+\n| 2023-07-13 22:28:18 |\n+---------------------+\n\n-- Input is of DATE type (default time 00:00:00)\nSELECT MINUTES_SUB('2023-07-13', 30) AS result;\n+---------------------+\n| result              |\n+---------------------+\n| 2023-07-12 23:30:00 |\n+---------------------+\n\n-- Any parameter is NULL, returns NULL\nSELECT MINUTES_SUB(NULL, 10), MINUTES_SUB('2023-07-13 22:28:18', NULL) AS result;\n+-----------------------+--------+\n| MINUTES_SUB(NULL, 10) | result |\n+-----------------------+--------+\n| NULL                  | NULL   |\n+-----------------------+--------+\n\n\n-- Calculation result exceeds datetime range, throws error\nSELECT MINUTES_SUB('0000-01-01 00:00:00', 1) AS result;\nERROR 1105 (HY000): errCode = 2, detailMessage = (10.16.10.3)[E-218]Operation minutes_add of 0000-01-01 00:00:00, -1 out of range\n"})})]})}function d(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return a}});var s=t(667294);let i={},r=s.createContext(i);function a(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);