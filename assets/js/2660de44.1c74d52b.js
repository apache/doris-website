"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["331383"],{367897:function(e,t,n){n.r(t),n.d(t,{default:()=>c,frontMatter:()=>o,metadata:()=>i,assets:()=>u,toc:()=>m,contentTitle:()=>s});var i=JSON.parse('{"id":"query-acceleration/tuning/tuning-execution/adjustment-of-runtimefilter-wait-time","title":"Adjustment of RuntimeFilter Wait Time","description":"Overview","source":"@site/docs/query-acceleration/tuning/tuning-execution/adjustment-of-runtimefilter-wait-time.md","sourceDirName":"query-acceleration/tuning/tuning-execution","slug":"/query-acceleration/tuning/tuning-execution/adjustment-of-runtimefilter-wait-time","permalink":"/docs/dev/query-acceleration/tuning/tuning-execution/adjustment-of-runtimefilter-wait-time","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Adjustment of RuntimeFilter Wait Time","language":"en"},"sidebar":"docs","previous":{"title":"DML Tuning Plan","permalink":"/docs/dev/query-acceleration/tuning/tuning-plan/dml-tuning-plan"},"next":{"title":"Data Skew Handling","permalink":"/docs/dev/query-acceleration/tuning/tuning-execution/data-skew-handling"}}'),a=n("785893"),r=n("250065");let o={title:"Adjustment of RuntimeFilter Wait Time",language:"en"},s="Adjustment of RuntimeFilter Wait Time",u={},m=[{value:"Overview",id:"overview",level:2},{value:"Case: Too Short RuntimeFilter Wait Time",id:"case-too-short-runtimefilter-wait-time",level:2},{value:"Summary",id:"summary",level:2}];function l(e){let t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"adjustment-of-runtimefilter-wait-time",children:"Adjustment of RuntimeFilter Wait Time"})}),"\n",(0,a.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(t.p,{children:"In actual production scenarios, there may be performance issues caused by unreasonable RuntimeFilter wait times. RuntimeFilter is a query optimization technique that generates filter conditions at runtime, thereby avoiding scanning irrelevant data. This optimization method can significantly reduce I/O operations and computational load, thus accelerating query execution. The following sections introduce several common cases to help with optimization in data skew scenarios."}),"\n",(0,a.jsx)(t.h2,{id:"case-too-short-runtimefilter-wait-time",children:"Case: Too Short RuntimeFilter Wait Time"}),"\n",(0,a.jsx)(t.p,{children:"Refer to the following Profile information:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-SQL",children:"OLAP_SCAN_OPERATOR (id=22. nereids_id=1764. table name = test_doris(test_doris)):(ExecTime: 62.870ms)\n               - RuntimeFilters: : RuntimeFilter: (id = 6, type = minmax, need_local_merge: true, is_broadcast: false, build_bf_cardinality: false, RuntimeFilter: (id = 7, type = in_or_bloomfilter, need_local_merge: true, is_broadcast: false, build_bf_cardinality: false, \n               - PushDownPredicates: []\n               - KeyRanges: ScanKeys:ScanKey=[null(-9223372036854775808) : 9223372036854775807]\n               - TabletIds: [1732763414173, 1732763414187, 1732763414201, 1732763414215]\n               - UseSpecificThreadToken: False\n               - AcquireRuntimeFilterTime: 969ns\n               - BlocksProduced: 1.829K (1829)\n               - CloseTime: 0ns\n               - ExecTime: 62.870ms\n               - InitTime: 75.703us\n               - KeyRangesNum: 0\n               - MaxScannerThreadNum: 32\n               - MemoryUsage: \n                 - PeakMemoryUsage: 0.00 \n               - NumScanners: 32\n               - OpenTime: 19.276ms\n               - ProcessConjunctTime: 30.360us\n               - ProjectionTime: 0ns\n               - RowsProduced: 7.433056M (7433056)\n               - RowsRead: 0\n               - RuntimeFilterInfo: \n               - ScannerWorkerWaitTime: 0ns\n               - TabletNum: 4\n               - TotalReadThroughput: 0\n               - WaitForDependency[OLAP_SCAN_OPERATOR_DEPENDENCY]Time: 0ns\n               - WaitForRuntimeFilter: 1000ms\n              RuntimeFilter: (id = 6, type = minmax):\n                 - Info: [IsPushDown = false, RuntimeFilterState = NOT_READY, HasRemoteTarget = true, HasLocalTarget = false, Ignored = false]\n              RuntimeFilter: (id = 7, type = in_or_bloomfilter):\n                 - Info: [IsPushDown = false, RuntimeFilterState = NOT_READY, HasRemoteTarget = true, HasLocalTarget = false, Ignored = false]\n"})}),"\n",(0,a.jsxs)(t.p,{children:["From the Profile, we can see that ",(0,a.jsx)(t.code,{children:"WaitForRuntimeFilter: 1000ms"}),". Here, the RuntimeFilter waited for 1000ms, but this ScanOperator did not receive the corresponding RuntimeFilter, and ",(0,a.jsx)(t.code,{children:"RuntimeFilterState = NOT_READY"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-SQL",children:" RuntimeFilter: (id = 6, type = minmax):\n                 - Info: [IsPushDown = false, RuntimeFilterState = NOT_READY, HasRemoteTarget = true, HasLocalTarget = false, Ignored = false]\n RuntimeFilter: (id = 7, type = in_or_bloomfilter):\n                 - Info: [IsPushDown = false, RuntimeFilterState = NOT_READY, HasRemoteTarget = true, HasLocalTarget = false, Ignored = false]\n"})}),"\n",(0,a.jsx)(t.p,{children:"So, the corresponding RuntimeFilters with ids 6 and 7 were not received. By locating the Join that generates the RuntimeFilter through the Profile, we found that the Join took time:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-SQL",children:"  HASH_JOIN_OPERATOR (id=26, nereids_id=37948):\n                - PlanInfo\n                   - join op: RIGHT OUTER JOIN(PARTITIONED)[]\n                   - equal join conjunct: (id = ID)\n                   - runtime filters: RF006[min_max] <- ID(6418/8192/1048576), RF007[in_or_bloom] <- ID(6418/8192/1048576)\n                   - cardinality=6,418\n                   - vec output tuple id: 27\n                   - output tuple id: 27\n                   - vIntermediate tuple ids: 25 \n                   - hash output slot ids: 396 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 447 \n                   - projections: USER_ID\n                   - project output tuple id: 27\n                - BlocksProduced: sum 1, avg 1, max 1, min 1\n                - CloseTime: avg 10.111us, max 10.111us, min 10.111us\n                - ExecTime: avg 364.497us, max 364.497us, min 364.497us\n                - InitTime: avg 26.653us, max 26.653us, min 26.653us\n                - MemoryUsage: sum, avg, max, min \n                  - PeakMemoryUsage: sum 0.00, avg 0.00, max 0.00, min 0.00 \n                  - ProbeKeyArena: sum 0.00, avg 0.00, max 0.00, min 0.00 \n                - OpenTime: avg 45.985us, max 45.985us, min 45.985us\n                - ProbeRows: sum 0, avg 0, max 0, min 0\n                - ProjectionTime: avg 211.930us, max 211.930us, min 211.930us\n                - RowsProduced: sum 1, avg 1, max 1, min 1\n                - WaitForDependency[HASH_JOIN_OPERATOR_DEPENDENCY]Time: avg 1sec780ms, max 1sec780ms, min 1sec780ms\n"})}),"\n",(0,a.jsxs)(t.p,{children:["It can be seen that this Join took approximately ",(0,a.jsx)(t.code,{children:"1sec780ms"}),", so the RuntimeFilter did not wait in 1s. Therefore, the RuntimeFilter wait time was adjusted:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-SQL",children:"set runtime_filter_wait_time_ms = 3000;\n"})}),"\n",(0,a.jsx)(t.p,{children:"After the adjustment, the query time was reduced from 5s to 2s."}),"\n",(0,a.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,a.jsx)(t.p,{children:"The wait time of RuntimeFilter needs to be defined according to the scenario. Doris is undergoing some adaptive optimization and transformation. Use the EXPLAIN and PROFILE tools to observe the execution bottleneck, locate the corresponding problem, and modify the RuntimeFilter wait time through SQL Hint to avoid the impact of the corresponding problem on performance."})]})}function c(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},250065:function(e,t,n){n.d(t,{Z:function(){return s},a:function(){return o}});var i=n(667294);let a={},r=i.createContext(a);function o(e){let t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);