"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["757449"],{835135:function(e,n,i){i.r(n),i.d(n,{default:()=>h,frontMatter:()=>l,metadata:()=>r,assets:()=>o,toc:()=>c,contentTitle:()=>s});var r=JSON.parse('{"id":"ai/text-search/custom-analyzer","title":"Custom Analyzer","description":"Overview","source":"@site/docs/ai/text-search/custom-analyzer.md","sourceDirName":"ai/text-search","slug":"/ai/text-search/custom-analyzer","permalink":"/docs/dev/ai/text-search/custom-analyzer","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Custom Analyzer","language":"en"},"sidebar":"docs","previous":{"title":"SEARCH Function","permalink":"/docs/dev/ai/text-search/search-function"},"next":{"title":"Relevance Scoring","permalink":"/docs/dev/ai/text-search/scoring"}}'),t=i("785893"),a=i("250065");let l={title:"Custom Analyzer",language:"en"},s=void 0,o={},c=[{value:"Overview",id:"overview",level:2},{value:"Using Custom Analyzers",id:"using-custom-analyzers",level:2},{value:"Creating Components",id:"creating-components",level:3},{value:"1. Creating a char_filter",id:"1-creating-a-char_filter",level:4},{value:"2. Creating a tokenizer",id:"2-creating-a-tokenizer",level:4},{value:"3. Creating a token_filter",id:"3-creating-a-token_filter",level:4},{value:"4. Creating an analyzer",id:"4-creating-an-analyzer",level:4},{value:"Viewing Components",id:"viewing-components",level:3},{value:"Deleting Components",id:"deleting-components",level:3},{value:"Using Custom Analyzers in Table Creation",id:"using-custom-analyzers-in-table-creation",level:2},{value:"Usage Limitations",id:"usage-limitations",level:2},{value:"Notes",id:"notes",level:2},{value:"Complete Examples",id:"complete-examples",level:2},{value:"Example 1: Phone Number Tokenization",id:"example-1-phone-number-tokenization",level:3},{value:"Example 2: Fine-grained Tokenization",id:"example-2-fine-grained-tokenization",level:3},{value:"Example 3: Keyword with Multiple Token Filters",id:"example-3-keyword-with-multiple-token-filters",level:3}];function d(e){let n={code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"Custom analyzers allow you to overcome the limitations of built-in tokenizers by combining character filters, tokenizers, and token filters according to specific needs. This fine-tunes how text is segmented into searchable terms, directly determining search relevance and data analysis accuracy\u2014a foundational key to enhancing search experience and data value."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Custom Analyzer Overview",src:i(203687).Z+"",width:"1636",height:"140"})}),"\n",(0,t.jsx)(n.h2,{id:"using-custom-analyzers",children:"Using Custom Analyzers"}),"\n",(0,t.jsx)(n.h3,{id:"creating-components",children:"Creating Components"}),"\n",(0,t.jsx)(n.h4,{id:"1-creating-a-char_filter",children:"1. Creating a char_filter"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'CREATE INVERTED INDEX CHAR_FILTER IF NOT EXISTS x_char_filter\nPROPERTIES (\n  "type" = "char_replace"\n  -- configure pattern/replacement parameters as needed\n);\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"char_replace"})," replaces specified characters before tokenization."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Parameters\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"char_filter_pattern"}),": characters to replace"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"char_filter_replacement"}),": replacement characters (default: space)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"2-creating-a-tokenizer",children:"2. Creating a tokenizer"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'CREATE INVERTED INDEX TOKENIZER IF NOT EXISTS x_tokenizer\nPROPERTIES (\n  "type" = "standard"\n);\n'})}),"\n",(0,t.jsx)(n.p,{children:"Available tokenizers:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"standard"}),": Grammar-based tokenization following Unicode text segmentation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ngram"}),": Generates N-grams of specified length"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"edge_ngram"}),": Generates N-grams anchored at word start"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"keyword"}),": No-op tokenizer that outputs entire input as single term"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"char_group"}),": Tokenizes on specified characters"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"basic"}),": Simple English, numbers, Chinese, Unicode tokenizer"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"icu"}),": International text segmentation supporting all languages"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"3-creating-a-token_filter",children:"3. Creating a token_filter"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'CREATE INVERTED INDEX TOKEN_FILTER IF NOT EXISTS x_token_filter\nPROPERTIES (\n  "type" = "word_delimiter"\n);\n'})}),"\n",(0,t.jsx)(n.p,{children:"Available token filters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"word_delimiter"}),": Splits tokens at non-alphanumeric characters"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ascii_folding"}),": Converts non-ASCII characters to ASCII equivalents"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"lowercase"}),": Converts tokens to lowercase"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"4-creating-an-analyzer",children:"4. Creating an analyzer"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'CREATE INVERTED INDEX ANALYZER IF NOT EXISTS x_analyzer\nPROPERTIES (\n  "tokenizer" = "x_tokenizer",            -- single tokenizer\n  "token_filter" = "x_filter1, x_filter2" -- one or more token_filters, in order\n);\n'})}),"\n",(0,t.jsx)(n.h3,{id:"viewing-components",children:"Viewing Components"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SHOW INVERTED INDEX TOKENIZER;\nSHOW INVERTED INDEX TOKEN_FILTER;\nSHOW INVERTED INDEX ANALYZER;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"deleting-components",children:"Deleting Components"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"DROP INVERTED INDEX TOKENIZER IF EXISTS x_tokenizer;\nDROP INVERTED INDEX TOKEN_FILTER IF EXISTS x_token_filter;\nDROP INVERTED INDEX ANALYZER IF EXISTS x_analyzer;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"using-custom-analyzers-in-table-creation",children:"Using Custom Analyzers in Table Creation"}),"\n",(0,t.jsxs)(n.p,{children:["Custom analyzers are specified using the ",(0,t.jsx)(n.code,{children:"analyzer"})," parameter in index properties:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE tbl (\n    `a` bigint NOT NULL AUTO_INCREMENT(1),\n    `ch` text NULL,\n    INDEX idx_ch (`ch`) USING INVERTED PROPERTIES("analyzer" = "x_custom_analyzer", "support_phrase" = "true")\n)\ntable_properties;\n'})}),"\n",(0,t.jsx)(n.h2,{id:"usage-limitations",children:"Usage Limitations"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"type"})," and parameters in tokenizer and token_filter must be from the supported list, otherwise table creation will fail"]}),"\n",(0,t.jsx)(n.li,{children:"An analyzer can only be deleted when no tables are using it"}),"\n",(0,t.jsx)(n.li,{children:"Tokenizers and token_filters can only be deleted when no analyzers are using them"}),"\n",(0,t.jsx)(n.li,{children:"After creating custom analyzer syntax, it takes 10 seconds to sync to BE before data loading works normally"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Nesting multiple components in a custom analyzer may degrade tokenization performance"}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"tokenize"})," function supports custom analyzers"]}),"\n",(0,t.jsxs)(n.li,{children:["Predefined tokenization uses ",(0,t.jsx)(n.code,{children:"built_in_analyzer"}),", custom tokenization uses ",(0,t.jsx)(n.code,{children:"analyzer"})," - only one can exist"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"complete-examples",children:"Complete Examples"}),"\n",(0,t.jsx)(n.h3,{id:"example-1-phone-number-tokenization",children:"Example 1: Phone Number Tokenization"}),"\n",(0,t.jsx)(n.p,{children:"Using edge_ngram for phone number tokenization:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'CREATE INVERTED INDEX TOKENIZER IF NOT EXISTS edge_ngram_phone_number_tokenizer\nPROPERTIES\n(\n    "type" = "edge_ngram",\n    "min_gram" = "3",\n    "max_gram" = "10",\n    "token_chars" = "digit"\n);\n\nCREATE INVERTED INDEX ANALYZER IF NOT EXISTS edge_ngram_phone_number\nPROPERTIES\n(\n    "tokenizer" = "edge_ngram_phone_number_tokenizer"\n);\n\nCREATE TABLE tbl (\n    `a` bigint NOT NULL AUTO_INCREMENT(1),\n    `ch` text NULL,\n    INDEX idx_ch (`ch`) USING INVERTED PROPERTIES("support_phrase" = "true", "analyzer" = "edge_ngram_phone_number")\n) ENGINE=OLAP\nDUPLICATE KEY(`a`)\nDISTRIBUTED BY RANDOM BUCKETS 1\nPROPERTIES (\n"replication_allocation" = "tag.location.default: 1"\n);\n'})}),"\n",(0,t.jsx)(n.h3,{id:"example-2-fine-grained-tokenization",children:"Example 2: Fine-grained Tokenization"}),"\n",(0,t.jsx)(n.p,{children:"Using standard + word_delimiter for detailed tokenization:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'CREATE INVERTED INDEX TOKEN_FILTER IF NOT EXISTS word_splitter\nPROPERTIES\n(\n    "type" = "word_delimiter",\n    "split_on_numerics" = "false",\n    "split_on_case_change" = "false"\n);\n\nCREATE INVERTED INDEX ANALYZER IF NOT EXISTS lowercase_delimited\nPROPERTIES\n(\n    "tokenizer" = "standard",\n    "token_filter" = "asciifolding, word_splitter, lowercase"\n);\n'})}),"\n",(0,t.jsx)(n.h3,{id:"example-3-keyword-with-multiple-token-filters",children:"Example 3: Keyword with Multiple Token Filters"}),"\n",(0,t.jsx)(n.p,{children:"Using keyword to preserve original terms with multiple token filters:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'CREATE INVERTED INDEX ANALYZER IF NOT EXISTS keyword_lowercase\nPROPERTIES\n(\n"tokenizer" = "keyword",\n"token_filter" = "asciifolding, lowercase"\n);\n'})})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},203687:function(e,n,i){i.d(n,{Z:function(){return r}});let r=i.p+"assets/images/analyzer-a1a8bdb57c4fa41a7564b4a450ba7121.png"},250065:function(e,n,i){i.d(n,{Z:function(){return s},a:function(){return l}});var r=i(667294);let t={},a=r.createContext(t);function l(e){let n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);