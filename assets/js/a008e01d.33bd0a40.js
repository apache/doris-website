"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["432447"],{36707:function(e,n,t){t.r(n),t.d(n,{default:()=>d,frontMatter:()=>r,metadata:()=>a,assets:()=>c,toc:()=>o,contentTitle:()=>l});var a=JSON.parse('{"id":"sql-manual/sql-functions/aggregate-functions/bitmap-intersect","title":"BITMAP_INTERSECT","description":"Description","source":"@site/docs/sql-manual/sql-functions/aggregate-functions/bitmap-intersect.md","sourceDirName":"sql-manual/sql-functions/aggregate-functions","slug":"/sql-manual/sql-functions/aggregate-functions/bitmap-intersect","permalink":"/docs/dev/sql-manual/sql-functions/aggregate-functions/bitmap-intersect","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"BITMAP_INTERSECT","language":"en"},"sidebar":"docs","previous":{"title":"BITMAP_AGG","permalink":"/docs/dev/sql-manual/sql-functions/aggregate-functions/bitmap-agg"},"next":{"title":"BITMAP_UNION","permalink":"/docs/dev/sql-manual/sql-functions/aggregate-functions/bitmap-union"}}'),s=t("785893"),i=t("250065");let r={title:"BITMAP_INTERSECT",language:"en"},l=void 0,c={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Example",id:"example",level:2},{value:"Example",id:"example-1",level:2}];function u(e){let n={code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"Used to calculate the intersection of grouped Bitmaps. Common use case: calculating user retention."}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"BITMAP_INTERSECT(BITMAP <value>)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"arguments",children:"Arguments"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Argument"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<value>"})}),(0,s.jsx)(n.td,{children:"Data type supporting Bitmap"})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsx)(n.p,{children:"Returns a value of Bitmap type. If there is no valid data in the group, returns NULL."}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.h2,{id:"example-1",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- setup\nCREATE TABLE user_tags (\n	tag VARCHAR(20),\n	date DATETIME,\n	user_id BITMAP bitmap_union\n) AGGREGATE KEY(tag, date) DISTRIBUTED BY HASH(tag) BUCKETS 1\nPROPERTIES (\"replication_num\" = \"1\");\nINSERT INTO user_tags VALUES\n	('A', '2020-05-18', to_bitmap(1)),\n	('A', '2020-05-18', to_bitmap(2)),\n	('A', '2020-05-19', to_bitmap(2)),\n	('A', '2020-05-19', to_bitmap(3)),\n	('B', '2020-05-18', to_bitmap(4)),\n	('B', '2020-05-19', to_bitmap(4)),\n	('B', '2020-05-19', to_bitmap(5));\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select tag, bitmap_to_string(bitmap_intersect(user_id)) from (\n	select tag, date, bitmap_union(user_id) user_id from user_tags where date in ('2020-05-18', '2020-05-19') group by tag, date\n) a group by tag;\n"})}),"\n",(0,s.jsx)(n.p,{children:"Query the user retention for different tags between today and yesterday."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"+------+---------------------------------------------+\n| tag  | bitmap_to_string(bitmap_intersect(user_id)) |\n+------+---------------------------------------------+\n| A    | 2                                           |\n| B    | 4                                           |\n+------+---------------------------------------------+\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select bitmap_to_string(bitmap_intersect(user_id)) from user_tags where tag is null;\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"+---------------------------------------------+\n| bitmap_to_string(bitmap_intersect(user_id)) |\n+---------------------------------------------+\n|                                             |\n+---------------------------------------------+\n"})})]})}function d(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return r}});var a=t(667294);let s={},i=a.createContext(s);function r(e){let n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);