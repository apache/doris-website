"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["591167"],{367189:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>i,metadata:()=>a,assets:()=>d,toc:()=>l,contentTitle:()=>o});var a=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/date-time-functions/from-days","title":"FROM_DAYS","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/date-time-functions/from-days.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/date-time-functions","slug":"/sql-manual/sql-functions/scalar-functions/date-time-functions/from-days","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/from-days","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"FROM_DAYS","language":"en"},"sidebar":"docs","previous":{"title":"EXTRACT","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/extract"},"next":{"title":"FROM_ISO8601_DATE","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/from-iso8601-date"}}'),s=t("785893"),r=t("250065");let i={title:"FROM_DAYS",language:"en"},o=void 0,d={},l=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function c(e){let n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:'The FROM_DAYS function is used to convert an integer number of days to the corresponding date (DATE type). This function uses "January 1st, year 1" as the reference point (i.e., day 0 corresponds to 0000-01-01), calculating the date after the specified number of days from the reference date.'}),"\n",(0,s.jsx)(n.p,{children:'Note: To maintain behavioral consistency with MySQL, the FROM_DAYS function does not support "February 29th, year 1" (0000-02-29), even though theoretically this year conforms to leap year rules, this date will be automatically skipped.\nHistorical date limitation: This function calculates based on the extended Gregorian calendar, and is not suitable for dates before the Gregorian calendar was introduced in 1582 (when the Julian calendar was actually used), which may cause discrepancies between results and actual historical dates.'}),"\n",(0,s.jsxs)(n.p,{children:["This function behaves consistently with the ",(0,s.jsx)(n.a,{href:"https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_from-days",children:"from_days function"})," in MySQL"]}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"FROM_DAYS(<days>)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<days>"})}),(0,s.jsxs)(n.td,{children:["Input number of days, of type ",(0,s.jsx)(n.code,{children:"INT"})]})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsx)(n.p,{children:"Returns a DATE type value in the format YYYY-MM-DD, representing the date after days from the reference date (0000-01-01).\nIf days is negative, returns NULL.\nIf days exceeds the valid date range (typically 1 to 3652424, corresponding to approximately year 10000), returns an error."}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- Calculate days from the reference date\nselect from_days(730669),from_days(5),from_days(59), from_days(60);\n\n+-------------------+--------------+---------------+---------------+\n| from_days(730669) | from_days(5) | from_days(59) | from_days(60) |\n+-------------------+--------------+---------------+---------------+\n| 2000-07-03        | 0000-01-05   | 0000-02-28    | 0000-03-01    |\n+-------------------+--------------+---------------+---------------+\n\n-- If the input parameter is negative, an error is returned\nselect from_days(-60);\nERROR 1105 (HY000): errCode = 2, detailMessage = (10.16.10.3)[E-218]Operation from_days of -60 out of range\n\n-- If the input is NULL, returns NULL\nselect from_days(NULL);\n+-----------------+\n| from_days(NULL) |\n+-----------------+\n| NULL            |\n+-----------------+\n\n-- If days exceeds the valid date range (typically 1 to 3652424, corresponding to approximately year 10000), an error is returned\nselect from_days(99999999);\nERROR 1105 (HY000): errCode = 2, detailMessage = (10.16.10.3)[E-218]Operation from_days of 99999999 out of range\n"})})]})}function u(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return o},a:function(){return i}});var a=t(667294);let s={},r=a.createContext(s);function i(e){let n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);