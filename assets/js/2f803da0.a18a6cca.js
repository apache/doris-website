"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["162301"],{944078:function(e,n,s){s.r(n),s.d(n,{default:()=>h,frontMatter:()=>c,metadata:()=>i,assets:()=>l,toc:()=>d,contentTitle:()=>o});var i=JSON.parse('{"id":"admin-manual/workload-management/kill-query","title":"Kill Query","description":"You can cancel currently executing operations or disconnect current connection sessions using the KILL command. This document introduces related operations and considerations.","source":"@site/docs/admin-manual/workload-management/kill-query.md","sourceDirName":"admin-manual/workload-management","slug":"/admin-manual/workload-management/kill-query","permalink":"/docs/dev/admin-manual/workload-management/kill-query","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Kill Query","language":"en"},"sidebar":"docs","previous":{"title":"Query Circuit Breaker","permalink":"/docs/dev/admin-manual/workload-management/sql-blocking"},"next":{"title":"Job Scheduler","permalink":"/docs/dev/admin-manual/workload-management/job-scheduler"}}'),t=s("785893"),r=s("250065");let c={title:"Kill Query",language:"en"},o=void 0,l={},d=[{value:"Getting Query Identifiers",id:"getting-query-identifiers",level:2},{value:"PROCESSLIST",id:"processlist",level:3},{value:"TRACE ID",id:"trace-id",level:3},{value:"Kill Requests",id:"kill-requests",level:2},{value:"Kill Query",id:"kill-query",level:3},{value:"Kill Connection",id:"kill-connection",level:3},{value:"Best Practices",id:"best-practices",level:2}];function a(e){let n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["You can cancel currently executing operations or disconnect current connection sessions using the ",(0,t.jsx)(n.code,{children:"KILL"})," command. This document introduces related operations and considerations."]}),"\n",(0,t.jsx)(n.h2,{id:"getting-query-identifiers",children:"Getting Query Identifiers"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"KILL"})," requires a query identifier to cancel the corresponding query request. Query identifiers include: Query ID, Connection ID, and Trace ID."]}),"\n",(0,t.jsx)(n.p,{children:"You can obtain query identifiers through the following methods."}),"\n",(0,t.jsx)(n.h3,{id:"processlist",children:"PROCESSLIST"}),"\n",(0,t.jsxs)(n.p,{children:["Through the ",(0,t.jsx)(n.code,{children:"processlist"})," system table, you can get all current session connections and query operations being executed in the connections. This includes the Query ID and Connection ID."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"mysql> SHOW PROCESSLIST;\n+------------------+------+------+---------------------+---------------------+----------+------+---------+------+-------+-----------------------------------+------------------+---------------+--------------+\n| CurrentConnected | Id   | User | Host                | LoginTime           | Catalog  | Db   | Command | Time | State | QueryId                           | Info             | FE            | CloudCluster |\n+------------------+------+------+---------------------+---------------------+----------+------+---------+------+-------+-----------------------------------+------------------+---------------+--------------+\n| No               |    2 | root | 172.20.32.136:54850 | 2025-05-11 10:41:52 | internal |      | Query   |    6 | OK    | 12ccf7f95c1c4d2c-b03fa9c652757c15 | select sleep(20) | 172.20.32.152 | NULL         |\n| Yes              |    3 | root | 172.20.32.136:54862 | 2025-05-11 10:41:55 | internal |      | Query   |    0 | OK    | b710ed990d4144ee-8b15bb53002b7710 | show processlist | 172.20.32.152 | NULL         |\n| No               |    1 | root | 172.20.32.136:47964 | 2025-05-11 10:41:54 | internal |      | Sleep   |   11 | EOF   | b60daa992bac4fe4-b29466aacce67d27 |                  | 172.20.32.153 | NULL         |\n+------------------+------+------+---------------------+---------------------+----------+------+---------+------+-------+-----------------------------------+------------------+---------------+--------------+\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"CurrentConnected"}),": ",(0,t.jsx)(n.code,{children:"Yes"})," indicates the connection corresponding to the current session."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Id"}),": The unique identifier of the connection, i.e., Connection ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"QueryId"}),": The unique identifier of the Query. Displays the Query Id of the most recently executed or currently executing SQL command."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Note that by default, ",(0,t.jsx)(n.code,{children:"SHOW PROCESSLIST"})," only displays all session connections on the FE node that the current session is connected to, and does not display session connections from other FE nodes."]}),"\n",(0,t.jsx)(n.p,{children:"If you want to display session connections from all FE nodes, you need to set the following session variable:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"SET show_all_fe_connection=true;\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Then execute the ",(0,t.jsx)(n.code,{children:"SHOW PROCESSLIST"})," command again to display session connections from all FE nodes."]}),"\n",(0,t.jsxs)(n.p,{children:["You can also view through the system table in ",(0,t.jsx)(n.code,{children:"information_schema"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"SELECT * FROM information_schema.processlist;\n"})}),"\n",(0,t.jsxs)(n.p,{children:["By default, ",(0,t.jsx)(n.code,{children:"processlist"})," displays session connections from all FE nodes without requiring additional settings."]}),"\n",(0,t.jsx)(n.h3,{id:"trace-id",children:"TRACE ID"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"This feature is supported since versions 2.1.11 and 3.0.7."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["By default, the system automatically generates a Query ID for each query. Users need to first obtain the Query ID through the ",(0,t.jsx)(n.code,{children:"processlist"})," system table before performing a KILL operation."]}),"\n",(0,t.jsx)(n.p,{children:"In addition, users can also customize a Trace ID and perform KILL operations using the Trace ID."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'SET session_context = "trace_id:your_trace_id";\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Where ",(0,t.jsx)(n.code,{children:"your_trace_id"})," is the user-defined Trace ID. It can be any string but cannot contain the ",(0,t.jsx)(n.code,{children:";"})," symbol."]}),"\n",(0,t.jsx)(n.p,{children:"Trace ID is a session-level parameter and only applies to the current session. Doris will map subsequent query requests in the current session to this Trace ID."}),"\n",(0,t.jsx)(n.h2,{id:"kill-requests",children:"Kill Requests"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"KILL"})," statement supports canceling specified query operations as well as disconnecting specified session connections."]}),"\n",(0,t.jsxs)(n.p,{children:["Regular users can cancel queries sent by their own user through the ",(0,t.jsx)(n.code,{children:"KILL"})," operation. ADMIN users can cancel queries sent by themselves and any other users."]}),"\n",(0,t.jsx)(n.h3,{id:"kill-query",children:"Kill Query"}),"\n",(0,t.jsx)(n.p,{children:"Syntax:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'KILL QUERY "query_id" | "trace_id" | connection_id;\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"KILL QUERY"})," is used to cancel a specified running query operation."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:'"query_id"'})}),"\n",(0,t.jsxs)(n.p,{children:["The Query ID obtained through the ",(0,t.jsx)(n.code,{children:"processlist"})," system table. Must be wrapped in quotes. For example:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:'KILL QUERY "d36417cc05ff41ab-9d3afe49be251055";'})}),"\n",(0,t.jsx)(n.p,{children:"This operation will attempt to find the Query ID on all FE nodes and cancel the corresponding query."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:'"trace_id"'})}),"\n",(0,t.jsxs)(n.p,{children:["The Trace ID customized through ",(0,t.jsx)(n.code,{children:"session_context"}),". Must be wrapped in quotes. For example:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:'KILL QUERY "your_trace_id";'})}),"\n",(0,t.jsx)(n.p,{children:"This operation will attempt to find the Trace ID on all FE nodes and cancel the corresponding query."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"This feature is supported since versions 2.1.11 and 3.0.7."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"connection_id"})}),"\n",(0,t.jsxs)(n.p,{children:["The Connection ID obtained through the ",(0,t.jsx)(n.code,{children:"processlist"})," system table. Must be an integer greater than 0 and cannot be wrapped in quotes. For example:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"KILL QUERY 55;"})}),"\n",(0,t.jsx)(n.p,{children:"This operation only applies to session connections on the currently connected FE, and will cancel the query currently being executed on the corresponding session connection."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"kill-connection",children:"Kill Connection"}),"\n",(0,t.jsx)(n.p,{children:"Killing a connection will disconnect the specified session connection and also cancel any query operations being executed on the connection."}),"\n",(0,t.jsx)(n.p,{children:"Syntax:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"KILL [CONNECTION] connection_id;\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"CONNECTION"})," keyword can be omitted."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"connection_id"})}),"\n",(0,t.jsxs)(n.p,{children:["The Connection ID obtained through the ",(0,t.jsx)(n.code,{children:"processlist"})," system table. Must be an integer greater than 0 and cannot be wrapped in quotes. For example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"KILL CONNECTION 55;\nKILL 55;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Connection IDs on different FEs may be the same, but this operation only affects the session connection on the currently connected FE."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Implementing query management through custom Trace ID"}),"\n",(0,t.jsx)(n.p,{children:"Custom Trace IDs allow you to specify unique identifiers for queries in advance, making it easier for management system to implement the [Cancel Query] function. You can customize Trace IDs in the following ways:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Set ",(0,t.jsx)(n.code,{children:"session_context"})," before each query"]}),"\n",(0,t.jsx)(n.p,{children:"Users generate their own Trace ID. It is recommended to use UUID to ensure the uniqueness of the Trace ID."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'SET session_context="trace_id:your_trace_id";\nSELECT * FROM table ...;\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Add Trace ID in the query statement"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT /*+SET_VAR(session_context=trace_id:your_trace_id)*/ * FROM table ...;\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Afterward, management system can cancel running operations at any time using the Trace ID."}),"\n"]}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return o},a:function(){return c}});var i=s(667294);let t={},r=i.createContext(t);function c(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);