"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["490856"],{439481:function(n,e,t){t.r(e),t.d(e,{default:()=>d,frontMatter:()=>r,metadata:()=>l,assets:()=>a,toc:()=>c,contentTitle:()=>o});var l=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/conditional-functions/not-null-or-empty","title":"NOT_NULL_OR_EMPTY","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/conditional-functions/not-null-or-empty.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/conditional-functions","slug":"/sql-manual/sql-functions/scalar-functions/conditional-functions/not-null-or-empty","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/conditional-functions/not-null-or-empty","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"NOT_NULL_OR_EMPTY","language":"en"},"sidebar":"docs","previous":{"title":"LEAST","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/conditional-functions/least"},"next":{"title":"NULL_OR_EMPTY","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/conditional-functions/null-or-empty"}}'),s=t("785893"),i=t("250065");let r={title:"NOT_NULL_OR_EMPTY",language:"en"},o=void 0,a={},c=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function u(n){let e={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.code,{children:"not_null_or_empty"})," function is used to determine whether the given value is not NULL and not empty. If the input value is neither NULL nor empty, it returns true; otherwise, it returns false."]}),"\n",(0,s.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"NOT_NULL_OR_EMPTY (<str>)\n"})}),"\n",(0,s.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"<str>"}),": String type, the string to be checked for NULL or empty."]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsx)(e.p,{children:"Returns false if the string is an empty string or NULL; otherwise, returns true."}),"\n",(0,s.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["Example 1\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:'select not_null_or_empty(null), not_null_or_empty("");, not_null_or_empty(" ");\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-text",children:'+-------------------------+-----------------------+------------------------+\n| not_null_or_empty(null) | not_null_or_empty("") | not_null_or_empty(" ") |\n+-------------------------+-----------------------+------------------------+\n|                       0 |                     0 |                      1 |\n+-------------------------+-----------------------+------------------------+\n'})}),"\n"]}),"\n"]})]})}function d(n={}){let{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(u,{...n})}):u(n)}},250065:function(n,e,t){t.d(e,{Z:function(){return o},a:function(){return r}});var l=t(667294);let s={},i=l.createContext(s);function r(n){let e=l.useContext(i);return l.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),l.createElement(i.Provider,{value:e},n.children)}}}]);