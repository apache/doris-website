"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["378653"],{51950:function(e,n,t){t.r(n),t.d(n,{default:()=>d,frontMatter:()=>a,metadata:()=>s,assets:()=>c,toc:()=>o,contentTitle:()=>l});var s=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/date-time-functions/time-to-sec","title":"TIME_TO_SEC","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/date-time-functions/time-to-sec.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/date-time-functions","slug":"/sql-manual/sql-functions/scalar-functions/date-time-functions/time-to-sec","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/time-to-sec","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"TIME_TO_SEC","language":"en"},"sidebar":"docs","previous":{"title":"TIMEDIFF","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/timediff"},"next":{"title":"TO_DATE","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/to-date"}}'),i=t("785893"),r=t("250065");let a={title:"TIME_TO_SEC",language:"en"},l=void 0,c={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function u(e){let n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"The TIME_TO_SEC function converts an input time value to the total number of seconds. This function supports processing TIME and DATETIME types: if the input is DATETIME type, it automatically extracts the time portion (HH:MM:SS) for calculation; if the input is a pure time value, it directly converts to total seconds."}),"\n",(0,i.jsxs)(n.p,{children:["This function behaves consistently with the ",(0,i.jsx)(n.a,{href:"https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_time-to-sec",children:"time_to_sec function"})," in MySQL."]}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"TIME_TO_SEC(<date_or_time_expr>)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<date_or_time_expr>"})}),(0,i.jsxs)(n.td,{children:["Required. Supports TIME or DATETIME. If the input is DATETIME type, the function extracts the time portion for calculation. For specific datetime/time formats, please refer to ",(0,i.jsx)(n.a,{href:"../../../../../docs/sql-manual/basic-element/sql-data-types/conversion/datetime-conversion",children:"datetime conversion"})," and ",(0,i.jsx)(n.a,{href:"../../../../../docs/sql-manual/basic-element/sql-data-types/conversion/date-conversion",children:"date conversion"})]})]})})]}),"\n",(0,i.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsx)(n.p,{children:"Returns an INT type representing the total seconds corresponding to the input time value, calculated as: hours\xd73600 + minutes\xd760 + seconds."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"When entering a datetime string, you must explicitly convert it to a datetime type; otherwise, it will be converted to a time type by default, and NULL will be returned."}),"\n",(0,i.jsx)(n.li,{children:"If the input is negative time (such as -01:30:00), returns the corresponding negative seconds (such as -5400)"}),"\n",(0,i.jsx)(n.li,{children:"If the input is NULL, returns NULL"}),"\n",(0,i.jsx)(n.li,{children:"Ignores the microsecond portion (e.g., 12:34:56.789 is calculated as 12:34:56 only)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Pure time type\nSELECT TIME_TO_SEC('16:32:18') AS result;\n+--------+\n| result |\n+--------+\n|  59538 |\n+--------+\n\n-- Process the DATETIME string and return NULL.\nSELECT TIME_TO_SEC('2025-01-01 16:32:18') AS result;\n+--------+\n| result |\n+--------+\n|   NULL |\n+--------+\n\n-- A datetime string needs to be explicitly converted to a datetime type.\nSELECT TIME_TO_SEC(cast('2025-01-01 16:32:18' as datetime)) AS result;\n+--------+\n| result |\n+--------+\n|  59538 |\n+--------+\n\n-- Negative time conversion\nSELECT TIME_TO_SEC('-02:30:00') AS result;\n+--------+\n| result |\n+--------+\n|  -9000 |\n+--------+\n\n-- Negative time with microseconds (ignore microseconds)\nSELECT TIME_TO_SEC('-16:32:18.99') AS result;\n+--------+\n| result |\n+--------+\n| -59538 |\n+--------+\n\n-- Microsecond processing (ignore microseconds)\nSELECT TIME_TO_SEC('10:15:30.123456') AS result;\n+--------+\n| result |\n+--------+\n|  36930 |\n+--------+\n\n-- Invalid time\nSELECT TIME_TO_SEC('12:60:00') AS result;\n+--------+\n| result |\n+--------+\n| NULL   |\n+--------+\n\n-- Exceeds TIME range\nSELECT TIME_TO_SEC('839:00:00') AS result;\n+--------+\n| result |\n+--------+\n| NULL   |\n+--------+\n\n-- Parameter is NULL\nSELECT TIME_TO_SEC(NULL) AS result;\n+--------+\n| result |\n+--------+\n| NULL   |\n+--------+\n"})})]})}function d(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return a}});var s=t(667294);let i={},r=s.createContext(i);function a(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);