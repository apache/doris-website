"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["383391"],{168302:function(e,n,s){s.r(n),s.d(n,{default:()=>p,frontMatter:()=>i,metadata:()=>o,assets:()=>l,toc:()=>c,contentTitle:()=>r});var o=JSON.parse('{"id":"install/cluster-deployment/k8s-deploy/persistent-volume","title":"Persistent Volume and ConfigMap","description":"Doris-Operator supports mounting PV (Persistent Volume) on pods of various Doris components.","source":"@site/versioned_docs/version-2.0/install/cluster-deployment/k8s-deploy/persistent-volume.md","sourceDirName":"install/cluster-deployment/k8s-deploy","slug":"/install/cluster-deployment/k8s-deploy/persistent-volume","permalink":"/docs/2.0/install/cluster-deployment/k8s-deploy/persistent-volume","draft":false,"unlisted":false,"tags":[],"version":"2.0","frontMatter":{"title":"Persistent Volume and ConfigMap","language":"en"}}'),a=s("785893"),t=s("250065");let i={title:"Persistent Volume and ConfigMap",language:"en"},r=void 0,l={},c=[{value:"StorageClass",id:"storageclass",level:2},{value:"Customized ConfigMap",id:"customized-configmap",level:2},{value:"Add special configuration files to the conf directory",id:"add-special-configuration-files-to-the-conf-directory",level:2},{value:"BE multi-disk configuration",id:"be-multi-disk-configuration",level:2}];function d(e){let n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Doris-Operator supports mounting PV (Persistent Volume) on pods of various Doris components."}),"\n",(0,a.jsx)(n.p,{children:"PV is generally created by the kubernetes system administrator. Doris-Operator does not use PV directly when deploying Doris services. Instead, it declares a set of resources through PVC to apply for PV from the kubernetes cluster.\nWhen a PVC is created, Kubernetes will attempt to bind it to an available PV that meets the requirements.\nStorageClass shields administrators from the process of manually creating PVs. When there are no ready-made PVs that meet PVC requirements, PVs can be dynamically allocated based on StorageClass.\nPV provides a variety of storage types, mainly divided into two categories: network storage and local storage. Based on their respective principles and implementations, the two provide users with different performance and usage experiences. Users can choose according to their own containerized service types and their own needs."}),"\n",(0,a.jsxs)(n.p,{children:["If PVC is not configured during deployment, Doris-Operator uses the ",(0,a.jsx)(n.code,{children:"emptyDir"})," mode by default to store metadata data files and run logs. When the pod is restarted, related data will be lost."]}),"\n",(0,a.jsx)(n.p,{children:"Recommended node directory type for persistent storage:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"FE: doris-meta, log"}),"\n",(0,a.jsx)(n.li,{children:"BE: storage, log"}),"\n",(0,a.jsx)(n.li,{children:"CN: storage, log"}),"\n",(0,a.jsx)(n.li,{children:"BROKER: log"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Doris-Operator outputs logs to the console and the specified directory at the same time. If the user's Kubernetes system has complete log collection capabilities, log information at the Doris INFO level (default) can be collected through console output.\nHowever, it is still recommended to configure PVC to persist log files, because in addition to INFO level logs, there are also logs such as fe.out, be.out, audit.log and garbage collection logs, which facilitates quick problem location and audit log backtracking."}),"\n",(0,a.jsx)(n.p,{children:"ConfigMap is a resource object used to store configuration files in Kubernetes. It allows dynamically mounting configuration files and decouples configuration files from applications, making configuration management more flexible and maintainable.\nLike PVCs, ConfigMap can be referenced by Pods in order to use configuration data in the application."}),"\n",(0,a.jsx)(n.h2,{id:"storageclass",children:"StorageClass"}),"\n",(0,a.jsxs)(n.p,{children:["Doris-Operator provides Kubernetes default ",(0,a.jsx)(n.code,{children:"StorageClass"})," mode to support FE and BE data storage, where the storage path (mountPath) uses the default configuration in the image.\nIf users need to specify the StorageClass themselves, they need to modify ",(0,a.jsx)(n.code,{children:"persistentVolumeClaimSpec.storageClassName"})," in ",(0,a.jsx)(n.code,{children:"spec.feSpec.persistentVolumes"}),", as shown below:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: doris.selectdb.com/v1\nkind: DorisCluster\nmetadata:\n  labels:\n    app.kubernetes.io/name: doriscluster\n  name: doriscluster-sample-storageclass1\nspec:\n  feSpec:\n    replicas: 3\n    image: selectdb/doris.fe-ubuntu:2.0.2\n    limits:\n      cpu: 8\n      memory: 16Gi\n    requests:\n      cpu: 8\n      memory: 16Gi\n    persistentVolumes:\n    - mountPath: /opt/apache-doris/fe/doris-meta\n      name: storage0\n      persistentVolumeClaimSpec:\n        # when use specific storageclass, the storageClassName should reConfig, example as annotation.\n        storageClassName: ${your_storageclass}\n        accessModes:\n        - ReadWriteOnce\n        resources:\n          # notice: if the storage size less 5G, fe will not start normal.\n          requests:\n            storage: 100Gi\n    - mountPath: /opt/apache-doris/fe/log\n      name: storage1\n      persistentVolumeClaimSpec:\n        # when use specific storageclass, the storageClassName should reConfig, example as annotation.\n        storageClassName: ${your_storageclass}\n        accessModes:\n        - ReadWriteOnce\n        resources:\n          requests:\n            storage: 100Gi\n  beSpec:\n    replicas: 3\n    image: selectdb/doris.be-ubuntu:2.0.2\n    limits:\n      cpu: 8\n      memory: 16Gi\n    requests:\n      cpu: 8\n      memory: 16Gi\n    persistentVolumes:\n    - mountPath: /opt/apache-doris/be/storage\n      name: storage2\n      persistentVolumeClaimSpec:\n        # when use specific storageclass, the storageClassName should reConfig, example as annotation.\n        storageClassName: ${your_storageclass}\n        accessModes:\n        - ReadWriteOnce\n        resources:\n          requests:\n            storage: 100Gi\n    - mountPath: /opt/apache-doris/be/log\n      name: storage3\n      persistentVolumeClaimSpec:\n        # when use specific storageclass, the storageClassName should reConfig, example as annotation.\n        storageClassName: ${your_storageclass}\n        accessModes:\n        - ReadWriteOnce\n        resources:\n          requests:\n            storage: 100Gi\n"})}),"\n",(0,a.jsx)(n.h2,{id:"customized-configmap",children:"Customized ConfigMap"}),"\n",(0,a.jsxs)(n.p,{children:["Doris uses ",(0,a.jsx)(n.code,{children:"ConfigMap"})," in Kubernetes to decouple configuration files and services. Before deploying ",(0,a.jsx)(n.code,{children:"doriscluster"}),", you need to deploy the ",(0,a.jsx)(n.code,{children:"ConfigMap"})," you want to use under the same ",(0,a.jsx)(n.code,{children:"namespace"})," in advance. The following example shows that FE uses ",(0,a.jsx)(n.code,{children:"ConfigMap"})," named fe-configmap and BE uses ",(0,a.jsx)(n.code,{children:"ConfigMap"})," named be-configmap. Cluster related yaml:"]}),"\n",(0,a.jsx)(n.p,{children:"ConfigMap sample for FE"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: fe-configmap\n  labels:\n    app.kubernetes.io/component: fe\ndata:\n  fe.conf: |\n    CUR_DATE=`date +%Y%m%d-%H%M%S`\n\n    # the output dir of stderr and stdout\n    LOG_DIR = ${DORIS_HOME}/log\n\n    JAVA_OPTS="-Djavax.security.auth.useSubjectCredsOnly=false -Xss4m -Xmx8192m -XX:+UseMembar -XX:SurvivorRatio=8 -XX:MaxTenuringThreshold=7 -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSClassUnloadingEnabled -XX:-CMSParallelRemarkEnabled -XX:CMSInitiatingOccupancyFraction=80 -XX:SoftRefLRUPolicyMSPerMB=0 -Xloggc:$DORIS_HOME/log/fe.gc.log.$CUR_DATE"\n\n    # For jdk 9+, this JAVA_OPTS will be used as default JVM options\n    JAVA_OPTS_FOR_JDK_9="-Djavax.security.auth.useSubjectCredsOnly=false -Xss4m -Xmx8192m -XX:SurvivorRatio=8 -XX:MaxTenuringThreshold=7 -XX:+CMSClassUnloadingEnabled -XX:-CMSParallelRemarkEnabled -XX:CMSInitiatingOccupancyFraction=80 -XX:SoftRefLRUPolicyMSPerMB=0 -Xlog:gc*:$DORIS_HOME/log/fe.gc.log.$CUR_DATE:time"\n\n    # INFO, WARN, ERROR, FATAL\n    sys_log_level = INFO\n\n    # NORMAL, BRIEF, ASYNC\n    sys_log_mode = NORMAL\n\n    # Default dirs to put jdbc drivers,default value is ${DORIS_HOME}/jdbc_drivers\n    # jdbc_drivers_dir = ${DORIS_HOME}/jdbc_drivers\n\n    http_port = 8030\n    rpc_port = 9020\n    query_port = 9030\n    edit_log_port = 9010\n    \n    enable_fqdn_mode = true\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Note that when using FE's ConfigMap, you must add ",(0,a.jsx)(n.code,{children:"enable_fqdn_mode = true"})," to ",(0,a.jsx)(n.code,{children:"fe.conf"}),". For specific reasons, please refer to ",(0,a.jsx)(n.a,{href:"https://doris.apache.org/docs/dev/admin-manual/cluster-management/fqdn",children:"document here"})]}),"\n",(0,a.jsx)(n.p,{children:"BE's ConfigMap sample"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: be-configmap\n  labels:\n    app.kubernetes.io/component: be\ndata:\n  be.conf: |\n    CUR_DATE=`date +%Y%m%d-%H%M%S`\n\n    PPROF_TMPDIR="$DORIS_HOME/log/"\n\n    JAVA_OPTS="-Xmx1024m -DlogPath=$DORIS_HOME/log/jni.log -Xloggc:$DORIS_HOME/log/be.gc.log.$CUR_DATE -Djavax.security.auth.useSubjectCredsOnly=false -Dsun.java.command=DorisBE -XX:-CriticalJNINatives -DJDBC_MIN_POOL=1 -DJDBC_MAX_POOL=100 -DJDBC_MAX_IDLE_TIME=300000 -DJDBC_MAX_WAIT_TIME=5000"\n\n    # For jdk 9+, this JAVA_OPTS will be used as default JVM options\n    JAVA_OPTS_FOR_JDK_9="-Xmx1024m -DlogPath=$DORIS_HOME/log/jni.log -Xlog:gc:$DORIS_HOME/log/be.gc.log.$CUR_DATE -Djavax.security.auth.useSubjectCredsOnly=false -Dsun.java.command=DorisBE -XX:-CriticalJNINatives -DJDBC_MIN_POOL=1 -DJDBC_MAX_POOL=100 -DJDBC_MAX_IDLE_TIME=300000 -DJDBC_MAX_WAIT_TIME=5000"\n\n    # since 1.2, the JAVA_HOME need to be set to run BE process.\n    # JAVA_HOME=/path/to/jdk/\n\n    # https://github.com/apache/doris/blob/master/docs/zh-CN/community/developer-guide/debug-tool.md#jemalloc-heap-profile\n    # https://jemalloc.net/jemalloc.3.html\n    JEMALLOC_CONF="percpu_arena:percpu,background_thread:true,metadata_thp:auto,muzzy_decay_ms:15000,dirty_decay_ms:15000,oversize_threshold:0,lg_tcache_max:20,prof:false,lg_prof_interval:32,lg_prof_sample:19,prof_gdump:false,prof_accum:false,prof_leak:false,prof_final:false"\n    JEMALLOC_PROF_PRFIX=""\n\n    # INFO, WARNING, ERROR, FATAL\n    sys_log_level = INFO\n\n    # ports for admin, web, heartbeat service\n    be_port = 9060\n    webserver_port = 8040\n    heartbeat_service_port = 9050\n    brpc_port = 8060\n'})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"doriscluster"})," deployment example using the above two ",(0,a.jsx)(n.code,{children:"ConfigMap"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: doris.selectdb.com/v1\nkind: DorisCluster\nmetadata:\n  labels:\n    app.kubernetes.io/name: doriscluster\n  name: doriscluster-sample-configmap\nspec:\n  feSpec:\n    replicas: 3\n    image: selectdb/doris.fe-ubuntu:2.0.2\n    limits:\n      cpu: 8\n      memory: 16Gi\n    requests:\n      cpu: 8\n      memory: 16Gi\n    configMapInfo:\n      # use kubectl create configmap fe-configmap --from-file=fe.conf\n      configMapName: fe-configmap\n      resolveKey: fe.conf\n  beSpec:\n    replicas: 3\n    image: selectdb/doris.be-ubuntu:2.0.2\n    limits:\n      cpu: 8\n      memory: 16Gi\n    requests:\n      cpu: 8\n      memory: 16Gi\n    configMapInfo:\n      # use kubectl create configmap be-configmap --from-file=be.conf\n      configMapName: be-configmap\n      resolveKey: be.conf\n  brokerSpec:\n    replicas: 3\n    image: selectdb/doris.broker-ubuntu:2.0.2\n    limits:\n      cpu: 2\n      memory: 4Gi\n    requests:\n      cpu: 2\n      memory: 4Gi\n    configMapInfo:\n      # use kubectl create configmap broker-configmap --from-file=apache_hdfs_broker.conf\n      configMapName: broker-configmap\n      resolveKey: apache_hdfs_broker.conf\n\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"resolveKey"})," here is the name of the incoming configuration file (must be ",(0,a.jsx)(n.code,{children:"fe.conf"}),", ",(0,a.jsx)(n.code,{children:"be.conf"})," or ",(0,a.jsx)(n.code,{children:"apache_hdfs_broker.conf"}),", the cn node is also ",(0,a.jsx)(n.code,{children:"be.conf"}),") used to parse the incoming Doris cluster configuration file, doris-operator will parse the file to guide the customized deployment of doriscluster."]}),"\n",(0,a.jsx)(n.h2,{id:"add-special-configuration-files-to-the-conf-directory",children:"Add special configuration files to the conf directory"}),"\n",(0,a.jsxs)(n.p,{children:["This paragraph is for reference. Containerized deployment solutions that configure other files need to be placed in the conf directory of the Doris node. For example, the common HDFS/Hive configuration file mapping of ",(0,a.jsx)(n.a,{href:"https://doris.apache.org/docs/dev/lakehouse/multi-catalog/hive",children:"Data Lake Multi-catalog"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Here we take BE's ConfigMap and the core-site.xml file that needs to be added as an example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: be-configmap\n  labels:\n    app.kubernetes.io/component: be\ndata:\n  be.conf: |\n    be_port = 9060\n    webserver_port = 8040\n    heartbeat_service_port = 9050\n    brpc_port = 8060\n  core-site.xml: |\n    <?xml version="1.0" encoding="UTF-8"?>\n    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>\n    <configuration>\n      <property>\n      <name>hadoop.security.authentication</name>\n        <value>kerberos</value>\n      </property>\n    </configuration>\n    ...\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Note that the data structure in ",(0,a.jsx)(n.code,{children:"data"})," is as follows: key-value pair mapping:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"data:\n  file_name_1:\n    file_content_1\n  file_name_2:\n    file_content_2\n  file_name_3:\n    file_content_3\n"})}),"\n",(0,a.jsx)(n.h2,{id:"be-multi-disk-configuration",children:"BE multi-disk configuration"}),"\n",(0,a.jsxs)(n.p,{children:["Doris' BE service supports multi-disk mounting, which can well solve the problem of mismatch between computing resources and storage resources in the server era. At the same time, using multiple disks can also greatly improve the storage efficiency of doris. On Kubernetes, Doris can also mount multiple disks to maximize storage efficiency. Using multiple disks on Kubernetes requires using configuration files.\nIn order to achieve decoupling of service and configuration, doris uses ",(0,a.jsx)(n.code,{children:"ConfigMap"})," as the bearer of configuration to dynamically mount configuration files for service use.\nThe following is the doriscluster configuration in which the BE service uses ",(0,a.jsx)(n.code,{children:"ConfigMap"})," to host the configuration file and mount two disks for BE use:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: doris.selectdb.com/v1\nkind: DorisCluster\nmetadata:\n  labels:\n    app.kubernetes.io/name: doriscluster\n  name: doriscluster-sample-storageclass1\nspec:\n  feSpec:\n    replicas: 3\n    image: selectdb/doris.fe-ubuntu:2.0.2\n    limits:\n      cpu: 8\n      memory: 16Gi\n    requests:\n      cpu: 8\n      memory: 16Gi\n    persistentVolumes:\n    - mountPath: /opt/apache-doris/fe/doris-meta\n      name: storage0\n      persistentVolumeClaimSpec:\n        # when use specific storageclass, the storageClassName should reConfig, example as annotation.\n        #storageClassName: openebs-jiva-csi-default\n        accessModes:\n        - ReadWriteOnce\n        resources:\n          # notice: if the storage size less 5G, fe will not start normal.\n          requests:\n            storage: 100Gi\n    - mountPath: /opt/apache-doris/fe/log\n      name: storage1\n      persistentVolumeClaimSpec:\n        # when use specific storageclass, the storageClassName should reConfig, example as annotation.\n        #storageClassName: openebs-jiva-csi-default\n        accessModes:\n        - ReadWriteOnce\n        resources:\n          requests:\n            storage: 100Gi\n  beSpec:\n    replicas: 3\n    image: selectdb/doris.be-ubuntu:2.0.2\n    limits:\n      cpu: 8\n      memory: 16Gi\n    requests:\n      cpu: 8\n      memory: 16Gi\n    configMapInfo:\n      configMapName: be-configmap\n      resolveKey: be.conf\n    persistentVolumes:\n    - mountPath: /opt/apache-doris/be/storage\n      name: storage2\n      persistentVolumeClaimSpec:\n        # when use specific storageclass, the storageClassName should reConfig, example as annotation.\n        #storageClassName: openebs-jiva-csi-default\n        accessModes:\n        - ReadWriteOnce\n        resources:\n          requests:\n            storage: 100Gi\n    - mountPath: /opt/apache-doris/be/storage1\n      name: storage3\n      persistentVolumeClaimSpec:\n        # when use specific storageclass, the storageClassName should reConfig, example as annotation.\n        #storageClassName: openebs-jiva-csi-default\n        accessModes:\n        - ReadWriteOnce\n        resources:\n          requests:\n            storage: 100Gi\n    - mountPath: /opt/apache-doris/be/log\n      name: storage4\n      persistentVolumeClaimSpec:\n        # when use specific storageclass, the storageClassName should reConfig, example as annotation.\n        #storageClassName: openebs-jiva-csi-default\n        accessModes:\n        - ReadWriteOnce\n        resources:\n          requests:\n            storage: 100Gi\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Compared with the default example, the configuration of ",(0,a.jsx)(n.code,{children:"configMapInfo"})," is added, and a configuration of ",(0,a.jsx)(n.code,{children:"persistentVolumeClaimSpec"})," is also added, ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#PersistentVolumeClaimSpec",children:(0,a.jsx)(n.code,{children:"persistentVolumeClaimSpec"})})," fully follows the definition format of the Kubernetes native resource PVC spec.\nIn the example, ",(0,a.jsx)(n.code,{children:"configMapInfo"})," identifies which ConfigMap under the same ",(0,a.jsx)(n.code,{children:"namespace"})," and which key corresponding content will be used as the configuration file after BE is deployed, where the key must be be.conf. The following is an example of the above ",(0,a.jsx)(n.code,{children:"doriscluster"})," ConfigMap that needs to be pre-deployed:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: be-configmap\n  labels:\n    app.kubernetes.io/component: be\ndata:\n  be.conf: |\n    CUR_DATE=`date +%Y%m%d-%H%M%S`\n\n    PPROF_TMPDIR="$DORIS_HOME/log/"\n\n    JAVA_OPTS="-Xmx1024m -DlogPath=$DORIS_HOME/log/jni.log -Xloggc:$DORIS_HOME/log/be.gc.log.$CUR_DATE -Djavax.security.auth.useSubjectCredsOnly=false -Dsun.java.command=DorisBE -XX:-CriticalJNINatives -DJDBC_MIN_POOL=1 -DJDBC_MAX_POOL=100 -DJDBC_MAX_IDLE_TIME=300000 -DJDBC_MAX_WAIT_TIME=5000"\n\n    # For jdk 9+, this JAVA_OPTS will be used as default JVM options\n    JAVA_OPTS_FOR_JDK_9="-Xmx1024m -DlogPath=$DORIS_HOME/log/jni.log -Xlog:gc:$DORIS_HOME/log/be.gc.log.$CUR_DATE -Djavax.security.auth.useSubjectCredsOnly=false -Dsun.java.command=DorisBE -XX:-CriticalJNINatives -DJDBC_MIN_POOL=1 -DJDBC_MAX_POOL=100 -DJDBC_MAX_IDLE_TIME=300000 -DJDBC_MAX_WAIT_TIME=5000"\n\n    # since 1.2, the JAVA_HOME need to be set to run BE process.\n    # JAVA_HOME=/path/to/jdk/\n\n    # https://github.com/apache/doris/blob/master/docs/zh-CN/community/developer-guide/debug-tool.md#jemalloc-heap-profile\n    # https://jemalloc.net/jemalloc.3.html\n    JEMALLOC_CONF="percpu_arena:percpu,background_thread:true,metadata_thp:auto,muzzy_decay_ms:15000,dirty_decay_ms:15000,oversize_threshold:0,lg_tcache_max:20,prof:false,lg_prof_interval:32,lg_prof_sample:19,prof_gdump:false,prof_accum:false,prof_leak:false,prof_final:false"\n    JEMALLOC_PROF_PRFIX=""\n\n    # INFO, WARNING, ERROR, FATAL\n    sys_log_level = INFO\n\n    # ports for admin, web, heartbeat service\n    be_port = 9060\n    webserver_port = 8040\n    heartbeat_service_port = 9050\n    brpc_port = 8060\n    \n    storage_root_path = /opt/apache-doris/be/storage,medium:ssd;/opt/apache-doris/be/storage1,medium:ssd\n'})}),"\n",(0,a.jsxs)(n.p,{children:["When using multiple disks, the path in the corresponding value of ",(0,a.jsx)(n.code,{children:"storage_root_path"})," in ",(0,a.jsx)(n.code,{children:"ConfigMap"})," should correspond to each mounting path of ",(0,a.jsx)(n.code,{children:"persistentVolume"})," in ",(0,a.jsx)(n.code,{children:"doriscluster"}),". ",(0,a.jsx)(n.a,{href:"https://doris.apache.org/docs/dev/admin-manual/config/be-config/#storage_root_path",children:(0,a.jsx)(n.code,{children:"storage_root_path"})})," For the corresponding writing rules, please refer to the document in the link.\nWhen using cloud disks, the media is uniformly ",(0,a.jsx)(n.code,{children:"SSD"}),"."]})]})}function p(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return r},a:function(){return i}});var o=s(667294);let a={},t=o.createContext(a);function i(e){let n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);