"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["753642"],{47828:function(n,e,s){s.r(e),s.d(e,{default:()=>u,frontMatter:()=>a,metadata:()=>i,assets:()=>c,toc:()=>d,contentTitle:()=>l});var i=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/binary-functions/sub-binary","title":"SUB_BINARY","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/binary-functions/sub-binary.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/binary-functions","slug":"/sql-manual/sql-functions/scalar-functions/binary-functions/sub-binary","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/binary-functions/sub-binary","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"SUB_BINARY","language":"en"},"sidebar":"docs","previous":{"title":"FROM_HEX","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/binary-functions/from_hex"},"next":{"title":"TO_BASE64_BINARY","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/binary-functions/to-base64-binary"}}'),r=s("785893"),t=s("250065");let a={title:"SUB_BINARY",language:"en"},l=void 0,c={},d=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return value",id:"return-value",level:2},{value:"Example",id:"example",level:2}];function o(n){let e={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(e.p,{children:"The SUB_BINARY function extracts a binary subsequence from a VARBINARY value. You can specify the starting position and the length of bytes to extract. The first byte position in the binary is 1."}),"\n",(0,r.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"sub_binary(<bin>, <pos> [, <len>])\n"})}),"\n",(0,r.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Parameter"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<bin>"})}),(0,r.jsx)(e.td,{children:"Source binary value. Type: VARBINARY"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<pos>"})}),(0,r.jsx)(e.td,{children:"Starting byte position, can be negative. Type: INT"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<len>"})}),(0,r.jsx)(e.td,{children:"Optional parameter, number of bytes to extract. Type: INT"})]})]})]}),"\n",(0,r.jsx)(e.h2,{id:"return-value",children:"Return value"}),"\n",(0,r.jsx)(e.p,{children:"Returns VARBINARY type, representing the extracted binary subsequence."}),"\n",(0,r.jsx)(e.p,{children:"Special cases:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"If any parameter is NULL, returns NULL."}),"\n",(0,r.jsx)(e.li,{children:"If pos is 0, returns an empty binary."}),"\n",(0,r.jsx)(e.li,{children:"If pos is negative, counts from the end of the binary backwards."}),"\n",(0,r.jsx)(e.li,{children:"If pos exceeds the binary length, returns an empty binary."}),"\n",(0,r.jsx)(e.li,{children:"If len is not specified, returns all bytes from pos to the end of the binary."}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"example",children:"Example"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Basic usage (specify starting position)"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT sub_binary(x'61626331', 2);\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+--------------------------------------------------------+\n| sub_binary(x'61626331', 2)                             |\n+--------------------------------------------------------+\n| 0x626331                                               |\n+--------------------------------------------------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"2",children:["\n",(0,r.jsx)(e.li,{children:"Using negative position"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT sub_binary(x'61626331', -2);\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+----------------------------------------------------------+\n| sub_binary(x'61626331', -2)                              |\n+----------------------------------------------------------+\n| 0x6331                                                   |\n+----------------------------------------------------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"3",children:["\n",(0,r.jsx)(e.li,{children:"Case when position is 0"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT sub_binary(x'61626331', 0);\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+--------------------------------------------------------+\n| sub_binary(x'61626331', 0)                             |\n+--------------------------------------------------------+\n| 0x                                                     |\n+--------------------------------------------------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"4",children:["\n",(0,r.jsx)(e.li,{children:"Position exceeds binary length"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT sub_binary(x'61626331', 5);\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+--------------------------------------------------------+\n| sub_binary(x'61626331', 5)                             |\n+--------------------------------------------------------+\n| 0x                                                     |\n+--------------------------------------------------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"5",children:["\n",(0,r.jsx)(e.li,{children:"Specifying length parameter"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT sub_binary(x'61626331646566', 2, 2);\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+--------------------------------------------------------+\n| sub_binary(x'61626331646566', 2, 2)                    |\n+--------------------------------------------------------+\n| 0x6263                                                 |\n+--------------------------------------------------------+\n"})})]})}function u(n={}){let{wrapper:e}={...(0,t.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(o,{...n})}):o(n)}},250065:function(n,e,s){s.d(e,{Z:function(){return l},a:function(){return a}});var i=s(667294);let r={},t=i.createContext(r);function a(n){let e=i.useContext(t);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);