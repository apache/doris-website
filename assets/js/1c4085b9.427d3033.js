"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["726722"],{357310:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>r,metadata:()=>s,assets:()=>d,toc:()=>c,contentTitle:()=>l});var s=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/date-time-functions/next-day","title":"NEXT_DAY","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/date-time-functions/next-day.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/date-time-functions","slug":"/sql-manual/sql-functions/scalar-functions/date-time-functions/next-day","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/next-day","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"NEXT_DAY","language":"en"},"sidebar":"docs","previous":{"title":"NOW","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/now"},"next":{"title":"QUARTER","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/quarter"}}'),i=t("785893"),a=t("250065");let r={title:"NEXT_DAY",language:"en"},l=void 0,d={},c=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function o(e){let n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"The NEXT_DAY function returns the first date after the specified date that matches the target day of the week. For example, NEXT_DAY('2020-01-31', 'MONDAY') returns the first Monday after 2020-01-31. This function supports processing DATE and DATETIME types and ignores the time portion in the input (calculation is based only on the date portion)."}),"\n",(0,i.jsxs)(n.p,{children:["This function is consistent with Oracle's ",(0,i.jsx)(n.a,{href:"https://docs.oracle.com/en/database/oracle/oracle-database/19/sqlrf/NEXT_DAY.html",children:"next_day function"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"NEXT_DAY(`<date_or_time_expr>`, `<day_of_week>`)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<date_or_time_expr>"})}),(0,i.jsxs)(n.td,{children:["Supports date/datetime types. For specific datetime and date formats, ",(0,i.jsx)(n.a,{href:"../../../../../docs/sql-manual/basic-element/sql-data-types/conversion/datetime-conversion",children:"datetime conversion"})," and ",(0,i.jsx)(n.a,{href:"../../../../../docs/sql-manual/basic-element/sql-data-types/conversion/date-conversion",children:"date conversion"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<day_of_week>"})}),(0,i.jsx)(n.td,{children:"String expression used to identify the day of the week, of string type."})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"<day_of_week>"})," must be one of the following values (case insensitive):"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"'SU', 'SUN', 'SUNDAY'"}),"\n",(0,i.jsx)(n.li,{children:"'MO', 'MON', 'MONDAY'"}),"\n",(0,i.jsx)(n.li,{children:"'TU', 'TUE', 'TUESDAY'"}),"\n",(0,i.jsx)(n.li,{children:"'WE', 'WED', 'WEDNESDAY'"}),"\n",(0,i.jsx)(n.li,{children:"'TH', 'THU', 'THURSDAY'"}),"\n",(0,i.jsx)(n.li,{children:"'FR', 'FRI', 'FRIDAY'"}),"\n",(0,i.jsx)(n.li,{children:"'SA', 'SAT', 'SATURDAY'"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a value of type DATE, representing the first date after the base date that matches ",(0,i.jsx)(n.code,{children:"<day_of_week>"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Special cases:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If the base date itself is the target day of the week, returns the next occurrence of the target day of the week (not the current date);"}),"\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"<date_or_time_expr>"})," is NULL, returns NULL;"]}),"\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"<day_of_week>"})," is an invalid value (e.g., 'ABC'), throws an exception;"]}),"\n",(0,i.jsx)(n.li,{children:"If the input is 9999-12-31 (regardless of whether it includes time), returns itself (since this date is the maximum valid date, no subsequent dates exist);"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- First Monday after base date\nSELECT NEXT_DAY('2020-01-31', 'MONDAY') AS result;\n+------------+\n| result     |\n+------------+\n| 2020-02-03 |\n+------------+\n\n-- Including time component (ignores time, uses only date for calculation)\nSELECT NEXT_DAY('2020-01-31 02:02:02', 'MON') AS result;\n+------------+\n| result     |\n+------------+\n| 2020-02-03 |\n+------------+\n\n-- Base date itself is target day of week (returns next occurrence)\nSELECT NEXT_DAY('2023-07-17', 'MON') AS result;  -- 2023-07-17 is Monday\n+------------+\n| result     |\n+------------+\n| 2023-07-24 |\n+------------+\n\n-- Target day of week as abbreviation (case insensitive)\nSELECT NEXT_DAY('2023-07-13', 'FR') AS result;  -- 2023-07-13 is Thursday\n+------------+\n| result     |\n+------------+\n| 2023-07-14 |\n+------------+\n\n-- Input is NULL (returns NULL)\nSELECT NEXT_DAY(NULL, 'SUN') AS result;\n+--------+\n| result |\n+--------+\n| NULL   |\n+--------+\n\n--- Invalid weekday identifier (throws exception)\nmysql> SELECT NEXT_DAY('2023-07-13', 'ABC') AS result;\nERROR 1105 (HY000): errCode = 2, detailMessage = (10.16.10.3)[INVALID_ARGUMENT]Function next_day failed to parse weekday: ABC\n\n--- Maximum date (returns itself)\nSELECT NEXT_DAY('9999-12-31 12:00:00', 'SUNDAY') AS result;\n+------------+\n| result     |\n+------------+\n| 9999-12-31 |\n+------------+\n"})})]})}function u(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return r}});var s=t(667294);let i={},a=s.createContext(i);function r(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);