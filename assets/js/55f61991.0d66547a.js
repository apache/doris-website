"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["557612"],{764795:function(e,i,s){s.r(i),s.d(i,{default:()=>u,frontMatter:()=>r,metadata:()=>n,assets:()=>l,toc:()=>c,contentTitle:()=>o});var n=JSON.parse('{"id":"observability/overview","title":"Overview","description":"What Is Observability?","source":"@site/versioned_docs/version-3.x/observability/overview.mdx","sourceDirName":"observability","slug":"/observability/overview","permalink":"/docs/3.x/observability/overview","draft":false,"unlisted":false,"tags":[],"version":"3.x","frontMatter":{"title":"Overview","language":"en"},"sidebar":"docs","previous":{"title":"Generating TPC-DS on Hive/Iceberg","permalink":"/docs/3.x/lakehouse/best-practices/tpcds"},"next":{"title":"Log","permalink":"/docs/3.x/observability/log"}}'),a=s("785893"),t=s("250065");let r={title:"Overview",language:"en"},o=void 0,l={},c=[{value:"What Is Observability?",id:"what-is-observability",level:2},{value:"Why Observability Is Becoming Increasingly Important",id:"why-observability-is-becoming-increasingly-important",level:2},{value:"How to Choose an Observability Solution",id:"how-to-choose-an-observability-solution",level:2},{value:"1. <strong>Performance: Includes Write and Query Performance</strong>",id:"1-performance-includes-write-and-query-performance",level:3},{value:"2. <strong>Cost: Includes Storage and Compute Costs</strong>",id:"2-cost-includes-storage-and-compute-costs",level:3},{value:"3. <strong>Openness: Includes Open Source and Multi-Cloud Neutrality</strong>",id:"3-openness-includes-open-source-and-multi-cloud-neutrality",level:3},{value:"4. <strong>Ease of Use: Includes Manageability and Usability</strong>",id:"4-ease-of-use-includes-manageability-and-usability",level:3},{value:"Observability Solution Based on Doris",id:"observability-solution-based-on-doris",level:2},{value:"System Architecture",id:"system-architecture",level:3},{value:"Key Features and Advantages",id:"key-features-and-advantages",level:3},{value:"<strong>High Performance</strong>",id:"high-performance",level:4},{value:"<strong>Low Cost</strong>",id:"low-cost",level:4},{value:"<strong>Flexible Schema</strong>",id:"flexible-schema",level:4},{value:"<strong>User-Friendly</strong>",id:"user-friendly",level:4},{value:"<strong>Openness</strong>",id:"openness",level:4},{value:"Demo &amp; Screenshots",id:"demo--screenshots",level:3}];function d(e){let i={a:"a",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.h2,{id:"what-is-observability",children:"What Is Observability?"}),"\n",(0,a.jsx)(i.p,{children:"Observability refers to the ability to infer a system's internal state through its external output data. An observability platform collects, stores, and visualizes three core data: Logs, Traces, and Metrics. This helps teams gain a comprehensive understanding of the operational status of distributed systems, supports resource optimization, fault prediction, root cause analysis, improves system reliability, and enhances user experience."}),"\n",(0,a.jsx)(i.h2,{id:"why-observability-is-becoming-increasingly-important",children:"Why Observability Is Becoming Increasingly Important"}),"\n",(0,a.jsx)(i.p,{children:"Observability platforms have several critical use cases that are vital for improving system stability, optimizing operations efficiency, and enabling business innovation."}),"\n",(0,a.jsxs)(i.ol,{children:["\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"Fault Diagnosis and Root Cause Analysis"}),": Real-time monitoring, anomaly detection, and tracing capabilities enable quick identification and analysis of faults. For example, in the financial industry, combining observability with transaction tracing and AI technologies can shorten recovery time and ensure business continuity. It also supports chaos engineering to simulate failure scenarios and validate system fault tolerance."]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"Performance Optimization and Resource Planning"}),": Analyzing system resource utilization and response times helps identify performance bottlenecks and dynamically adjust configurations (e.g., load balancing, auto-scaling). Historical data can be used to predict resource needs, optimize cloud resource allocation, and reduce costs."]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"Business Decision Support"}),": Correlating IT performance data with business outcomes (such as user retention rates and transaction volumes) helps formulate business strategies. For instance, analyzing user experience metrics can guide product feature improvements."]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"Security and Compliance Monitoring"}),": Detects abnormal behaviors (e.g., zero-day attacks) and triggers automated responses to enhance system security. At the same time, log auditing ensures compliance with regulatory requirements."]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"DevOps Collaboration"}),": During canary releases, traffic tagging enables tracking of new version behavior. Combined with call chain analysis, it informs release progression and helps developers optimize code performance, reducing production incidents."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:(0,a.jsx)(i.strong,{children:"The growing importance of observability in recent years is mainly driven by two factors:"})}),"\n",(0,a.jsxs)(i.ol,{children:["\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"Increasing Complexity of Business and IT Systems"}),": With the development of cloud computing and microservices, business systems are becoming increasingly complex. For example, a GenAI application request might involve dozens of services such as App, service gateway, authentication service, billing service, RAG engine, Agent engine, vector database, business database, distributed cache, message queue, and large model APIs. Traditional methods like checking server status via SSH and analyzing logs are no longer effective in such complex environments. Observability platforms unify Log, Trace, and Metric data collection and storage, providing centralized visualization and rapid issue investigation."]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"Higher Requirements for Business Reliability"}),": System failures have increasingly high impacts on user experience. Therefore, the efficiency of fault detection and recovery has become more critical. Observability provides full data visibility and panoramic analytics, allowing teams to quickly locate root causes, reduce downtime, and ensure service availability. Moreover, with global data analytics and forecasting, potential resource bottlenecks can be identified early, preventing failures before they occur."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(i.h2,{id:"how-to-choose-an-observability-solution",children:"How to Choose an Observability Solution"}),"\n",(0,a.jsx)(i.p,{children:"Observability data has several characteristics, and addressing the challenges of massive data storage and analysis is key to any observability solution."}),"\n",(0,a.jsxs)(i.ol,{children:["\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"High Storage Volume and Cost Sensitivity"}),": Observability data, especially Logs and Traces, are typically enormous in volume and generated continuously. In medium-to-large enterprises, daily data generation often reaches terabytes or even petabytes. To meet business or regulatory requirements, data must often be stored for months or even years, leading to storage volumes reaching the PB or EB scale and resulting in significant storage costs. Over time, the value of this data diminishes, making cost efficiency increasingly important."]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"High Throughput Writes with Real-Time Requirements"}),": Handling daily ingestion of TB or PB-scale data offen requires write throughput ranging from 1\u201310 GB/s or millions to tens of millions of records per second. Simultaneously, due to the need for real-time troubleshooting and security investigations, platforms must support sub-second write latencies to ensure real-time data availability."]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"Real-Time Analysis and Full-Text Search Capabilities"}),": Logs and Traces contain large amounts of textual data. Quickly searching for keywords and phrases is essential. Traditional full-scan and string-matching approaches often fail to deliver real-time performance, especially at this scale\u2014especially under high-throughput, low-latency ingestion conditions. Thus, building inverted indexes tailored for text becomes crucial for achieving sub-second query responsiveness."]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"Dynamic Data Schema and Frequent Expansion Needs"}),": Logs originally existed as unstructured free-text logs but evolved into semi-structured JSON formats. Producers frequently modify JSON fields, making schema flexibility essential. Traditional databases and data warehouses struggle to handle such dynamic schemas efficiently, while datalake systems offer storage flexibility but fall short in real-time analytical performance."]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"Integration with Multiple Data Sources and Analysis Tools"}),": There are many observability ecosystem tools for data collection and visualization. The storage and analysis engine must integrate seamlessly with these diverse tools."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Given options like Elasticsearch, ClickHouse, Doris, and logging services provided by Cloud vendors, how should one choose? Here are the key evaluation criteria:"}),"\n",(0,a.jsxs)(i.h3,{id:"1-performance-includes-write-and-query-performance",children:["1. ",(0,a.jsx)(i.strong,{children:"Performance: Includes Write and Query Performance"})]}),"\n",(0,a.jsx)(i.p,{children:"Since observability is often used in urgent situations like troubleshooting, queries must respond quickly\u2014especially for textual content in Logs and Traces, which require real-time full-text search to support iterative exploration. Additionally, users must be able to query near real-time data\u2014queries limited to data from hours or minutes ago are insufficient; fresh data from the past few seconds is needed."}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Elasticsearch"})," is known for inverted indexing and full-text search, offering sub-second retrieval. However, it struggles with high-throughput writes, often rejecting writes or experiencing high latency during peak loads. Its aggregation and statistical analysis performance is also relatively weak."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Cloud Logging Services"})," provide sufficient performance through rich resources but come with higher costs."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"ClickHouse"})," delivers high write throughput and high aggregation query performance using columnar storage and vectorized execution. However, its full-text search performance lags behind Elasticsearch and Doris by multiples and remains experimental and unsuitable for production use."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Doris"}),", leveraging columnar storage and vectorized execution, optimizes inverted indexing for observability scenarios. It offers better performance than Elasticsearch, with ~5x faster writes and ~2x faster queries. Aggregation performance is up to 6\u201321x better than Elasticsearch."]}),"\n"]}),"\n",(0,a.jsxs)(i.h3,{id:"2-cost-includes-storage-and-compute-costs",children:["2. ",(0,a.jsx)(i.strong,{children:"Cost: Includes Storage and Compute Costs"})]}),"\n",(0,a.jsx)(i.p,{children:"Observability data volumes are huge, especially Logs and Traces. Medium-to-large enterprises generate TBs or even PBs of data daily. Due to business or regulatory needs, data must be retained for months or years, pushing storage requirements into the PB or even EB range. Compared to business-critical data, observability data has lower value density, and its value decreases over time, making cost sensitivity critical. Additionally, processing massive volumes of data incurs substantial compute costs."}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Elasticsearch"})," suffers from high costs. Its storage model combines row-based raw data, inverted indexes, and docvalue columnar storage, with typical compression ratios around 1.5:1. High CPU overhead from JVM and index construction further increases compute costs."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Doris"})," includes numerous optimizations for observability scenarios. Compared to Elasticsearch, it reduces total cost by 50\u201380%. These include simplified inverted indexing, columnar storage with ZSTD compression (5:1\u201310:1), cold-hot tiered storage, single-replica writes, time-series compaction to reduce write amplification, and vectorized index building."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"ClickHouse"})," uses columnar storage and vectorized engines, delivering lower storage and write costs."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Cloud Logging Services"})," are expensive as Elasticsearch."]}),"\n"]}),"\n",(0,a.jsxs)(i.h3,{id:"3-openness-includes-open-source-and-multi-cloud-neutrality",children:["3. ",(0,a.jsx)(i.strong,{children:"Openness: Includes Open Source and Multi-Cloud Neutrality"})]}),"\n",(0,a.jsx)(i.p,{children:"When selecting an observability platform, consider openness, including whether it's open source and multi-cloud neutral."}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Elasticsearch"})," is an open-source project maintained by Elastic, available on multiple clouds. Its ELK ecosystem is self-contained and difficult to integrate with other ecosystems, eg. Kibana only supports Elasticsearch and is hard to extend."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Doris"})," is an Apache Top-Level open-source project, supported by major global cloud providers. It integrates well with OpenTelemetry, Grafana, and ELK, maintaining openness and neutrality."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"ClickHouse"})," is an open-source project maintained by ClickHouse Inc., available across clouds. While it supports OpenTelemetry and Grafana, its acquisition of an observability company raises concerns about future neutrality."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Cloud Logging Services"})," are tied to their respective clouds, not open source, and differ between vendors, limiting consistent experiences and migration flexibility."]}),"\n"]}),"\n",(0,a.jsxs)(i.h3,{id:"4-ease-of-use-includes-manageability-and-usability",children:["4. ",(0,a.jsx)(i.strong,{children:"Ease of Use: Includes Manageability and Usability"})]}),"\n",(0,a.jsx)(i.p,{children:"Due to the volume of data, observability platforms usually adopt distributed architectures. Ease of deployment, scaling, upgrades, and other management tasks significantly affects scalability. The interface provided by the system determines developer efficiency and user experience."}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Elasticsearch"}),"'s Kibana web UI is very user-friendly and manageable. However, its DSL query language is complex and hard to learn, posing integration and development challenges."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Doris"})," provides an interactive analysis interface similar to Kibana and integrates natively with Grafana and Kibana (comming soon). Its SQL is standard and MySQL-compatible, making it developer- and analyst-friendly. Doris has a simple architecture that\u2019s easy to deploy and maintain, supports online scaling without service interruption, automatic load balancing, and includes a visual Cluster Manager."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"ClickHouse"})," provides SQL interfaces but uses its own syntax. Maintenance is challenging due to exposed concepts like local tables vs. distributed tables and lack of automatic rebalancing during scaling. Typically, developing a custom cluster management system is required."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Cloud Logging Services"})," offer SaaS convenience\u2014users don't manage infrastructure and enjoy ease of use."]}),"\n"]}),"\n",(0,a.jsxs)(i.p,{children:["Based on the above analysis, ",(0,a.jsx)(i.strong,{children:"Doris"})," achieves high-performance ingestion and queries while keeping costs low. Its SQL interface is easy to use, and its architecture is simple to maintain and scale. It also ensures consistent experiences across multiple clouds, making it an optimal choice for building an observability platform."]}),"\n",(0,a.jsx)(i.h2,{id:"observability-solution-based-on-doris",children:"Observability Solution Based on Doris"}),"\n",(0,a.jsx)(i.h3,{id:"system-architecture",children:"System Architecture"}),"\n",(0,a.jsx)(i.p,{children:"Apache Doris is a modern data warehouse with an MPP distributed architecture, integrating vectorized execution engines, CBO optimizers, advanced indexing, and materialized views. It supports ultra-fast querying and analysis on large-scale real-time datasets, delivering an exceptional analytical experience. Through continuous technical innovation, Doris has achieved top rankings in authoritative benchmarks such as ClickBench (single table), TPC-H, and TPC-DS (multi tables)."}),"\n",(0,a.jsx)(i.p,{children:"For observability scenarios, Doris introduces inverted indexing and ultra-fast full-text search capabilities, achieving optimized write performance and storage efficiency. This allows users to build high-performance, low-cost, and open observability platforms based on Doris."}),"\n",(0,a.jsx)(i.p,{children:"A Doris-based observability platform consists of three core components:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Data Collection and Preprocessing"}),": Supports various observability data collection tools, including OpenTelemetry and ELK ecosystem tools like Logstash and Filebeat. Log, Trace, and Metric data are ingested into Doris via HTTP APIs."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Data Storage and Analysis Engine"}),": Doris provides unified, high-performance, low-cost storage for observability data and exposes powerful search and analysis capabilities via SQL interfaces."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Query Analysis and Visualization"}),": Integrates with popular observability visualization tools such as Grafana and Kibana (from the ELK stack), offering intuitive interfaces for searching, analyzing, alerting, and achieving real-time monitoring and rapid response."]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:(0,a.jsx)(i.img,{alt:"doris-observabiltiy-architecture",src:s(772196).Z+"",width:"1920",height:"948"})}),"\n",(0,a.jsx)(i.h3,{id:"key-features-and-advantages",children:"Key Features and Advantages"}),"\n",(0,a.jsx)(i.h4,{id:"high-performance",children:(0,a.jsx)(i.strong,{children:"High Performance"})}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"High Throughput, Low Latency Writes"}),": Supports stable ingestion of PB-scale (10GB/s) Log, Trace, and Metric data daily with sub-second latency."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"High-Performance Inverted Index and Full-Text Search"}),": Supports inverted indexing and full-text search, delivering sub-second response times for common log keyword searches\u20143\u201310x faster than ClickHouse."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"High-Performance Aggregation Analysis"}),": Utilizing MPP distributed architecture and vectorized pipeline execution engines, Doris excels in trend analysis and alerting in observability scenarios, leading globally in ClickBench tests."]}),"\n"]}),"\n",(0,a.jsx)(i.h4,{id:"low-cost",children:(0,a.jsx)(i.strong,{children:"Low Cost"})}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"High Compression Ratio and Low-Cost Storage"}),": Supports PB-scale storage with compression ratios of 5:1 \u2013 10:1 (including indexes), reducing storage costs by 50\u201380% compared to Elasticsearch. Cold data can be offloaded to S3/HDFS, cutting storage costs by another 50%."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Low-Cost Writes"}),": Consumes 70% less CPU than Elasticsearch for the same write throughput."]}),"\n"]}),"\n",(0,a.jsx)(i.h4,{id:"flexible-schema",children:(0,a.jsx)(i.strong,{children:"Flexible Schema"})}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Schema Changes at the Top Level"}),": Users can use Light Schema Change to add or drop columns or indexes (ADD/DROP COLUMN/INDEX), and schema modifications can be completed in seconds. When designing an observability platform, users only need to consider which fields and indexes are needed at the current stage."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Internal Field Changes"}),": A semi-structured data type called VARIANT is specially designed for scalable JSON data. It can automatically identify field names and types within JSON, and further split frequently occurring fields into columnar storage, improving compression ratio and analytical performance. Compared to Elasticsearch\u2019s Dynamic Mapping, VARIANT allows changes in the data type of a single field."]}),"\n"]}),"\n",(0,a.jsx)(i.h4,{id:"user-friendly",children:(0,a.jsx)(i.strong,{children:"User-Friendly"})}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Standard SQL Interface"}),": Doris supports standard SQL and is compatible with MySQL protocols and syntax, making it accessible to engineers and analysts."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Integration with Observability Ecosystems"}),": Compatible with OpenTelemetry and ELK ecosystems, supporting Grafana and Kibana (comming soon) visualization tools for seamless data collection and analysis."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Easy Operations"}),": Supports online scaling, automatic load balancing, and visual management via Cluster Manager."]}),"\n"]}),"\n",(0,a.jsx)(i.h4,{id:"openness",children:(0,a.jsx)(i.strong,{children:"Openness"})}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Open Source"}),": Apache Doris is a top-level open-source project adopted by over 5000 companies worldwide, supporting OpenTelemetry, Grafana, and other observability ecosystems."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Multi-Cloud Neutral"}),": Major cloud providers offer Doris SaaS services, ensuring consistent experiences across clouds."]}),"\n"]}),"\n",(0,a.jsx)(i.h3,{id:"demo--screenshots",children:"Demo & Screenshots"}),"\n",(0,a.jsxs)(i.p,{children:["We demonstrate the Doris-based observability platform using a comprehensive ",(0,a.jsx)(i.a,{href:"https://github.com/apache/doris-opentelemetry-demo",children:"demo"})," from the OpenTelemetry community."]}),"\n",(0,a.jsxs)(i.p,{children:["The observed business system simulates an [e-commerce website] (",(0,a.jsx)(i.a,{href:"https://opentelemetry.io/docs/demo/architecture/",children:"https://opentelemetry.io/docs/demo/architecture/"}),") composed of frontend, authentication, cart, payment, logistics, advertising, recommendation, risk control, and more than ten modules, reflecting a high level of system complexity, thus presenting significant challenges for observability data collection, storage, and analysis."]}),"\n",(0,a.jsx)(i.p,{children:"The Load Generator tool sends continuous requests to the entry service, generating vast volumes of observability data (Logs, Traces, Metrics). These data are collected using OpenTelemetry SDKs in various languages, sent to the OpenTelemetry Collector, preprocessed by Processors, and finally written into Doris via the OpenTelemetry Doris Exporter. Observability visualization tools such as Grafana connects to Doris through the MySQL interface, providing visualized query and analysis capabilities."}),"\n",(0,a.jsx)("a",{href:"https://youtu.be/LrR4SNyAlg8",children:(0,a.jsx)("img",{src:"/images/observability/otel_demo_doris.png",alt:"Doris OpenTelemetry Demo"})}),"\n",(0,a.jsx)(i.p,{children:"Grafana connects to Doris via MySQL datasource, offering unified visualization and analysis of Logs, Traces, and Metrics, including cross-analysis between Logs and Traces."}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"Log"}),"\n",(0,a.jsx)(i.img,{alt:"log-visualization",src:s(653671).Z+"",width:"1280",height:"628"})]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"Trace"}),"\n",(0,a.jsx)(i.img,{alt:"log-visualization",src:s(802859).Z+"",width:"1280",height:"640"})]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"Metrics"}),"\n",(0,a.jsx)(i.img,{alt:"metrics-visualization",src:s(478374).Z+"",width:"1280",height:"500"})]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"While Grafana's log visualization and analysis capabilities are relatively basic compared to Kibana, third-party vendors have implemented Kibana-like Discover features. These will soon be integrated into Grafana's Doris datasource, enhancing unified observability visualization. Future enhancements will include Elasticsearch protocol compatibility, enabling native Kibana connections to Doris. For ELK users, replacing Elasticsearch with Doris maintains existing logging and visualization habits while significantly reducing costs and improving efficiency."}),"\n",(0,a.jsx)(i.p,{children:(0,a.jsx)(i.img,{alt:"studio-visualization",src:s(71857).Z+"",width:"2523",height:"1497"})})]})}function u(e={}){let{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},653671:function(e,i,s){s.d(i,{Z:function(){return n}});let n=s.p+"assets/images/log-visualization-4d229267456f4500ab7773288b00831f.png"},478374:function(e,i,s){s.d(i,{Z:function(){return n}});let n=s.p+"assets/images/metrics-visualization-f333290f209fa044fdafdee89e08659a.png"},772196:function(e,i,s){s.d(i,{Z:function(){return n}});let n=s.p+"assets/images/observability_architecture_doris-861ac9c6b18a7e6e1070f10e1d398984.png"},71857:function(e,i,s){s.d(i,{Z:function(){return n}});let n=s.p+"assets/images/studio-discover-8c09c2212aa3b8a0662b30ef0816ce0f.jpeg"},802859:function(e,i,s){s.d(i,{Z:function(){return n}});let n=s.p+"assets/images/trace-visualization-f89d819cc08b54ab4e5844d913ca543d.png"},250065:function(e,i,s){s.d(i,{Z:function(){return o},a:function(){return r}});var n=s(667294);let a={},t=n.createContext(a);function r(e){let i=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(t.Provider,{value:i},e.children)}}}]);