"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["459367"],{680216:function(e,t,a){a.r(t),a.d(t,{default:()=>c,frontMatter:()=>o,metadata:()=>n,assets:()=>l,toc:()=>d,contentTitle:()=>i});var n=JSON.parse('{"id":"data-operate/import/complex-types/bitmap","title":"Bitmap","description":"The BITMAP type can be used in Duplicate tables, Unique tables, and Aggregate tables, and can only be used as a Key type, not as a Value column. When using the BITMAP type in an Aggregate table, the table must be created with the aggregate type BITMAP_UNION. Users do not need to specify length and default values. The length is controlled by the system based on the degree of data aggregation. For more documentation, refer to Bitmap.","source":"@site/docs/data-operate/import/complex-types/bitmap.md","sourceDirName":"data-operate/import/complex-types","slug":"/data-operate/import/complex-types/bitmap","permalink":"/docs/dev/data-operate/import/complex-types/bitmap","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Bitmap","language":"en"},"sidebar":"docs","previous":{"title":"JSON","permalink":"/docs/dev/data-operate/import/complex-types/json"},"next":{"title":"HLL","permalink":"/docs/dev/data-operate/import/complex-types/hll"}}'),r=a("785893"),s=a("250065");let o={title:"Bitmap",language:"en"},i=void 0,l={},d=[{value:"Usage Example",id:"usage-example",level:2},{value:"Step 1: Prepare Data",id:"step-1-prepare-data",level:3},{value:"Step 2: Create Table in Database",id:"step-2-create-table-in-database",level:3},{value:"Step 3: Load Data",id:"step-3-load-data",level:3},{value:"Step 4: Check Loaded Data",id:"step-4-check-loaded-data",level:3},{value:"Importing a Bitmap Containing Multiple Elements",id:"importing-a-bitmap-containing-multiple-elements",level:2},{value:"bitmap_from_string",id:"bitmap_from_string",level:3},{value:"bitmap_from_array",id:"bitmap_from_array",level:3}];function p(e){let t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["The BITMAP type can be used in Duplicate tables, Unique tables, and Aggregate tables, and can only be used as a Key type, not as a Value column. When using the BITMAP type in an Aggregate table, the table must be created with the aggregate type BITMAP_UNION. Users do not need to specify length and default values. The length is controlled by the system based on the degree of data aggregation. For more documentation, refer to ",(0,r.jsx)(t.a,{href:"../../../sql-manual/basic-element/sql-data-types/aggregate/BITMAP",children:"Bitmap"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,r.jsx)(t.h3,{id:"step-1-prepare-data",children:"Step 1: Prepare Data"}),"\n",(0,r.jsx)(t.p,{children:"Create the following CSV file: test_bitmap.csv"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"1|koga|17723\n2|nijg|146285\n3|lojn|347890\n4|lofn|489871\n5|jfin|545679\n6|kon|676724\n7|nhga|767689\n8|nfubg|879878\n9|huang|969798\n10|buag|97997\n"})}),"\n",(0,r.jsx)(t.h3,{id:"step-2-create-table-in-database",children:"Step 2: Create Table in Database"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:'CREATE TABLE testdb.test_bitmap(\n    typ_id     BIGINT                NULL   COMMENT "ID",\n    hou        VARCHAR(10)           NULL   COMMENT "one",\n    arr        BITMAP  BITMAP_UNION  NOT NULL   COMMENT "two"\n)\nAGGREGATE KEY(typ_id,hou)\nDISTRIBUTED BY HASH(typ_id,hou) BUCKETS 10;\n'})}),"\n",(0,r.jsx)(t.h3,{id:"step-3-load-data",children:"Step 3: Load Data"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:'curl --location-trusted -u <doris_user>:<doris_password> \\\n    -H "column_separator:|" \\\n    -H "columns:typ_id,hou,arr,arr=to_bitmap(arr)" \\\n    -T test_bitmap.csv \\\n    -XPUT http://<fe_ip>:<fe_http_port>/api/testdb/test_bitmap/_stream_load\n'})}),"\n",(0,r.jsx)(t.h3,{id:"step-4-check-loaded-data",children:"Step 4: Check Loaded Data"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"mysql> select typ_id,hou,bitmap_to_string(arr) from testdb.test_bitmap;\n+--------+-------+-----------------------+\n| typ_id | hou   | bitmap_to_string(arr) |\n+--------+-------+-----------------------+\n|      4 | lofn  | 489871                |\n|      6 | kon   | 676724                |\n|      9 | huang | 969798                |\n|      3 | lojn  | 347890                |\n|      8 | nfubg | 879878                |\n|      7 | nhga  | 767689                |\n|      1 | koga  | 17723                 |\n|      2 | nijg  | 146285                |\n|      5 | jfin  | 545679                |\n|     10 | buag  | 97997                 |\n+--------+-------+-----------------------+\n10 rows in set (0.07 sec)\n"})}),"\n",(0,r.jsx)(t.h2,{id:"importing-a-bitmap-containing-multiple-elements",children:"Importing a Bitmap Containing Multiple Elements"}),"\n",(0,r.jsx)(t.p,{children:"The following demonstrates two methods for importing a bitmap column containing multiple elements using stream load. Users can choose the appropriate method based on their source file format."}),"\n",(0,r.jsx)(t.h3,{id:"bitmap_from_string",children:"bitmap_from_string"}),"\n",(0,r.jsxs)(t.p,{children:["When using ",(0,r.jsx)(t.code,{children:"bitmap_from_string"}),", square brackets are not allowed in the arr column of the source file. Otherwise, it will be considered a data quality error."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"1|koga|17,723\n2|nijg|146,285\n3|lojn|347,890\n4|lofn|489,871\n5|jfin|545,679\n6|kon|676,724\n7|nhga|767,689\n8|nfubg|879,878\n9|huang|969,798\n10|buag|97,997\n"})}),"\n",(0,r.jsx)(t.p,{children:"Command for stream load"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:'curl --location-trusted -u <doris_user>:<doris_password> \\\n    -H "column_separator:|" \\\n    -H "columns:typ_id,hou,arr,arr=bitmap_from_string(arr)" \\\n    -T test_bitmap.csv \\\n    -XPUT http://<fe_ip>:<fe_http_port>/api/testdb/test_bitmap/_stream_load\n'})}),"\n",(0,r.jsx)(t.h3,{id:"bitmap_from_array",children:"bitmap_from_array"}),"\n",(0,r.jsxs)(t.p,{children:["When using ",(0,r.jsx)(t.code,{children:"bitmap_from_array"}),", the source file can contain square brackets in the arr column. However, in stream load, the string type must first be cast to an array type before use.\nIf the cast conversion is not applied, an error will occur due to the function signature not being found:  ",(0,r.jsx)(t.code,{children:"[ANALYSIS_ERROR]TStatus: errCode = 2, detailMessage = Does not support non-builtin functions, or function does not exist: bitmap_from_array(<slot 8>)"})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"1|koga|[17,723]\n2|nijg|[146,285]\n3|lojn|[347,890]\n4|lofn|[489,871]\n5|jfin|[545,679]\n6|kon|[676,724]\n7|nhga|[767,689]\n8|nfubg|[879,878]\n9|huang|[969,798]\n10|buag|[97,997]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Command for stream load"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:'curl --location-trusted -u <doris_user>:<doris_password> \\\n    -H "column_separator:|" \\\n    -H "columns:typ_id,hou,arr_str,arr=bitmap_from_array(cast(arr_str as array<int>))" \\\n    -T test_bitmap.csv \\\n    -XPUT http://<fe_ip>:<fe_http_port>/api/testdb/test_bitmap/_stream_load\n'})})]})}function c(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},250065:function(e,t,a){a.d(t,{Z:function(){return i},a:function(){return o}});var n=a(667294);let r={},s=n.createContext(r);function o(e){let t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);