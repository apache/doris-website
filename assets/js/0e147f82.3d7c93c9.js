"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["845132"],{980353:function(e,n,t){t.r(n),t.d(n,{default:()=>o,frontMatter:()=>i,metadata:()=>s,assets:()=>a,toc:()=>u,contentTitle:()=>r});var s=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/struct-functions/struct-element","title":"STRUCT_ELEMENT","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/struct-functions/struct-element.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/struct-functions","slug":"/sql-manual/sql-functions/scalar-functions/struct-functions/struct-element","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/struct-functions/struct-element","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"STRUCT_ELEMENT","language":"en-US"},"sidebar":"docs","previous":{"title":"STRUCT","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/struct-functions/struct"},"next":{"title":"GET_JSON_BIGINT","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/json-functions/get-json-bigint"}}'),l=t("785893"),c=t("250065");let i={title:"STRUCT_ELEMENT",language:"en-US"},r=void 0,a={},u=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Usage",id:"usage",level:2},{value:"Examples",id:"examples",level:2}];function d(e){let n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Returns a specific field within a struct data column. The function supports accessing fields in a struct through field position (index) or field name."}),"\n",(0,l.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"STRUCT_ELEMENT( <struct>, <field_location_or_name> )\n"})}),"\n",(0,l.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"<struct>"}),": Input struct column"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"<field_location_or_name>"}),": Field position (starting from 1) or field name, only supports constants"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,l.jsx)(n.p,{children:"Return type: Field value type supported by struct"}),"\n",(0,l.jsx)(n.p,{children:"Return value meaning:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Returns the specified field value"}),"\n",(0,l.jsx)(n.li,{children:"If the input struct is null, returns null"}),"\n",(0,l.jsx)(n.li,{children:"If the specified field does not exist, an error will be reported"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Supports accessing by field position (index), index starts from 1"}),"\n",(0,l.jsx)(n.li,{children:"Supports accessing by field name, field name must match exactly"}),"\n",(0,l.jsx)(n.li,{children:"The second parameter must be a constant (cannot be a column)"}),"\n",(0,l.jsx)(n.li,{children:"The function is marked as AlwaysNullable, return value may be null"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Query Examples:"})}),"\n",(0,l.jsx)(n.p,{children:"Access by position:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"select struct_element(named_struct('name', 'Alice', 'age', 25, 'city', 'Beijing'), 1);\n+--------------------------------------------------------------------------------+\n| struct_element(named_struct('name', 'Alice', 'age', 25, 'city', 'Beijing'), 1) |\n+--------------------------------------------------------------------------------+\n| Alice                                                                          |\n+--------------------------------------------------------------------------------+\n"})}),"\n",(0,l.jsx)(n.p,{children:"Access by field name:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"select struct_element(named_struct('name', 'Alice', 'age', 25, 'city', 'Beijing'), 'age');\n+------------------------------------------------------------------------------------+\n| struct_element(named_struct('name', 'Alice', 'age', 25, 'city', 'Beijing'), 'age') |\n+------------------------------------------------------------------------------------+\n|                                                                                 25 |\n+------------------------------------------------------------------------------------+\n"})}),"\n",(0,l.jsx)(n.p,{children:"Accessing struct containing complex types:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"select struct_element(named_struct('array', [1,2,3], 'map', {'key':'value'}), 'array');\n+---------------------------------------------------------------------------------+\n| struct_element(named_struct('array', [1,2,3], 'map', {'key':'value'}), 'array') |\n+---------------------------------------------------------------------------------+\n| [1, 2, 3]                                                                       |\n+---------------------------------------------------------------------------------+\n"})}),"\n",(0,l.jsx)(n.p,{children:"Accessing result with null field value:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"select struct_element(named_struct('name', null, 'age', 25), 'name');\n+---------------------------------------------------------------+\n| struct_element(named_struct('name', null, 'age', 25), 'name') |\n+---------------------------------------------------------------+\n| NULL                                                          |\n+---------------------------------------------------------------+\n"})}),"\n",(0,l.jsx)(n.p,{children:"Error Examples"}),"\n",(0,l.jsx)(n.p,{children:"Accessing non-existent field name:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"select struct_element(named_struct('name', 'Alice', 'age', 25), 'nonexistent');\nERROR 1105 (HY000): errCode = 2, detailMessage = the specified field name nonexistent was not found: struct_element(named_struct('name', 'Alice', 'age', 25), 'nonexistent')\n"})}),"\n",(0,l.jsx)(n.p,{children:"Accessing out-of-bounds index:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"select struct_element(named_struct('name', 'Alice', 'age', 25), 5);\nERROR 1105 (HY000): errCode = 2, detailMessage = the specified field index out of bound: struct_element(named_struct('name', 'Alice', 'age', 25), 5)\n"})}),"\n",(0,l.jsx)(n.p,{children:"Second parameter is not a constant:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"select struct_element(named_struct('name', 'Alice', 'age', 25), inv) from var_with_index where k = 4;\nERROR 1105 (HY000): errCode = 2, detailMessage = struct_element only allows constant int or string second parameter: struct_element(named_struct('name', 'Alice', 'age', 25), inv)\n"})}),"\n",(0,l.jsx)(n.p,{children:"Input struct is NULL, will report error:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"select struct_element(NULL, 5);\nERROR 1105 (HY000): errCode = 2, detailMessage = Can not find the compatibility function signature: struct_element(NULL, TINYINT)\n"})})]})}function o(e={}){let{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return r},a:function(){return i}});var s=t(667294);let l={},c=s.createContext(l);function i(e){let n=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);