"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["399273"],{303589:function(e,n,s){s.r(n),s.d(n,{default:()=>d,frontMatter:()=>t,metadata:()=>r,assets:()=>c,toc:()=>o,contentTitle:()=>i});var r=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/spatial-functions/st-area-square-meters","title":"ST_AREA_SQUARE_METERS","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/spatial-functions/st-area-square-meters.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/spatial-functions","slug":"/sql-manual/sql-functions/scalar-functions/spatial-functions/st-area-square-meters","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/spatial-functions/st-area-square-meters","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"ST_AREA_SQUARE_METERS","language":"en"},"sidebar":"docs","previous":{"title":"ST_AREA_SQUARE_KM","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/spatial-functions/st-area-square-km"},"next":{"title":"ST_ASBINARY","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/spatial-functions/st-asbinary"}}'),a=s("785893"),l=s("250065");let t={title:"ST_AREA_SQUARE_METERS",language:"en"},i=void 0,c={},o=[{value:"Description",id:"description",level:2},{value:"Sytax",id:"sytax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return value",id:"return-value",level:2},{value:"Example",id:"example",level:2}];function u(e){let n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)(n.p,{children:"Calculates the area of a closed region on the Earth's surface in square meters. The input parameter is a geometric object representing a region on the Earth's surface (such as polygons, circles, polyhedrons, etc.)."}),"\n",(0,a.jsx)(n.p,{children:"For non-closed geometric objects (such as points, line segments), their area is 0; for invalid geometric objects (such as self-intersecting polygons), returns NULL."}),"\n",(0,a.jsx)(n.h2,{id:"sytax",children:"Sytax"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"ST_AREA_SQUARE_METERS( <geo>)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsx)(n.tbody,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"<geo>"})}),(0,a.jsx)(n.td,{children:"A geometric object on the Earth's surface, supporting closed region types such as GeoPolygon, GeoCircle, and GeoMultiPolygon."})]})})]}),"\n",(0,a.jsx)(n.h2,{id:"return-value",children:"Return value"}),"\n",(0,a.jsx)(n.p,{children:"Returns the area of the region in square meters, of type DOUBLE."}),"\n",(0,a.jsx)(n.p,{children:"ST_AREA_SQUARE_METERS has the following edge cases:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"If the input parameter is NULL, returns NULL."}),"\n",(0,a.jsx)(n.li,{children:"If the input is a non-closed geometric object (such as point GeoPoint, line segment GeoLineString), returns 0."}),"\n",(0,a.jsx)(n.li,{children:"If the input geometric object is invalid (such as self-intersecting polygon, unclosed polygon), returns NULL."}),"\n",(0,a.jsx)(n.li,{children:"If the input coordinates exceed the longitude/latitude range (longitude [-180, 180], latitude [-90, 90]), returns NULL."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.p,{children:"Circular region (circle with a radius of 1 degree)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT ST_Area_Square_Meters(ST_Circle(0, 0, 1));\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"+-------------------------------------------------+\n| st_area_square_meters(st_circle(0.0, 0.0, 1.0)) |\n+-------------------------------------------------+\n|                              3.1415926535897869 |\n+-------------------------------------------------+\n"})}),"\n",(0,a.jsx)(n.p,{children:"Point object (no area)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT ST_Area_Square_Meters(ST_Point(0, 1));\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"+-------------------------------------------+\n| st_area_square_meters(st_point(0.0, 1.0)) |\n+-------------------------------------------+\n|                                         0 |\n+-------------------------------------------+\n"})}),"\n",(0,a.jsx)(n.p,{children:"Line segment object (no area)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'SELECT ST_Area_Square_Meters(ST_LineFromText("LINESTRING (1 1, 2 2)"));\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"+-----------------------------------------------------------------+\n| st_area_square_meters(st_linefromtext('LINESTRING (1 1, 2 2)')) |\n+-----------------------------------------------------------------+\n|                                                               0 |\n+-----------------------------------------------------------------+\n"})}),"\n",(0,a.jsx)(n.p,{children:"Simple square region (small longitude/latitude range)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'\nmysql> SELECT ST_Area_Square_Meters(ST_Polygon("POLYGON ((0 0, 1 0, 1 1, 0 1, 0 0))"));\n+--------------------------------------------------------------------------+\n| ST_Area_Square_Meters(ST_Polygon("POLYGON ((0 0, 1 0, 1 1, 0 1, 0 0))")) |\n+--------------------------------------------------------------------------+\n|                                                       12364036567.076408 |\n+--------------------------------------------------------------------------+\n'})}),"\n",(0,a.jsx)(n.p,{children:"Complex polygon region"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'mysql> SELECT ST_Area_Square_Meters(ST_Polygon("POLYGON ((0 0, 5 1, 10 0, 5 -1, 0 0))"));\n+----------------------------------------------------------------------------+\n| ST_Area_Square_Meters(ST_Polygon("POLYGON ((0 0, 5 1, 10 0, 5 -1, 0 0))")) |\n+----------------------------------------------------------------------------+\n|                                                         123725166420.83101 |\n+----------------------------------------------------------------------------+\n'})}),"\n",(0,a.jsx)(n.p,{children:"Rectangular region crossing 180\xb0 longitude"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'\nmysql> SELECT ST_Area_Square_Meters(ST_Polygon("POLYGON ((179 0, 180 0, 180 1, 179 1, 179 0))"));\n+------------------------------------------------------------------------------------+\n| ST_Area_Square_Meters(ST_Polygon("POLYGON ((179 0, 180 0, 180 1, 179 1, 179 0))")) |\n+------------------------------------------------------------------------------------+\n|                                                                  12364036567.07628 |\n+------------------------------------------------------------------------------------+\n'})}),"\n",(0,a.jsx)(n.p,{children:"Circular region in the Southern Hemisphere"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"mysql> SELECT ST_Area_Square_Meters(ST_Circle(0, -30, 2));\n+---------------------------------------------+\n| ST_Area_Square_Meters(ST_Circle(0, -30, 2)) |\n+---------------------------------------------+\n|                          12.566370614359073 |\n+---------------------------------------------+\n"})}),"\n",(0,a.jsx)(n.p,{children:"Invalid polygon (self-intersecting)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'mysql>  SELECT ST_Area_Square_Meters(ST_Polygon("POLYGON ((0 0, 1 1, 0 1, 1 0, 0 0))"));\n+--------------------------------------------------------------------------+\n| ST_Area_Square_Meters(ST_Polygon("POLYGON ((0 0, 1 1, 0 1, 1 0, 0 0))")) |\n+--------------------------------------------------------------------------+\n|                                                                     NULL |\n+--------------------------------------------------------------------------+\n'})}),"\n",(0,a.jsx)(n.p,{children:"Unclosed polygon"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'mysql> SELECT ST_Area_Square_Meters(ST_Polygon("POLYGON ((0 0, 1 0, 1 1, 0 1))"));\n+---------------------------------------------------------------------+\n| ST_Area_Square_Meters(ST_Polygon("POLYGON ((0 0, 1 0, 1 1, 0 1))")) |\n+---------------------------------------------------------------------+\n|                                                                NULL |\n+---------------------------------------------------------------------+\n'})}),"\n",(0,a.jsx)(n.p,{children:"Coordinates out of range"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'mysql>  SELECT ST_Area_Square_Meters(ST_Polygon("POLYGON ((0 0, 200 0, 200 1, 0 1, 0 0))"));\n+------------------------------------------------------------------------------+\n| ST_Area_Square_Meters(ST_Polygon("POLYGON ((0 0, 200 0, 200 1, 0 1, 0 0))")) |\n+------------------------------------------------------------------------------+\n|                                                                         NULL |\n+------------------------------------------------------------------------------+\n'})}),"\n",(0,a.jsx)(n.p,{children:"Null input"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"mysql> SELECT ST_Area_Square_Meters(NULL);\n+-----------------------------+\n| ST_Area_Square_Meters(NULL) |\n+-----------------------------+\n|                        NULL |\n+-----------------------------+\n"})})]})}function d(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return i},a:function(){return t}});var r=s(667294);let a={},l=r.createContext(a);function t(e){let n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);