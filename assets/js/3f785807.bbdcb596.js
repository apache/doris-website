"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["805147"],{532842:function(e,n,t){t.r(n),t.d(n,{default:()=>m,frontMatter:()=>r,metadata:()=>s,assets:()=>l,toc:()=>d,contentTitle:()=>o});var s=JSON.parse('{"id":"sql-manual/sql-data-types/date-time/DATETIME","title":"DATETIME","description":"DATETIME","source":"@site/versioned_docs/version-2.0/sql-manual/sql-data-types/date-time/DATETIME.md","sourceDirName":"sql-manual/sql-data-types/date-time","slug":"/sql-manual/sql-data-types/date-time/DATETIME","permalink":"/docs/2.0/sql-manual/sql-data-types/date-time/DATETIME","draft":false,"unlisted":false,"tags":[],"version":"2.0","frontMatter":{"title":"DATETIME","language":"en"},"sidebar":"docs","previous":{"title":"TIME","permalink":"/docs/2.0/sql-manual/sql-data-types/date-time/TIME"},"next":{"title":"CHAR","permalink":"/docs/2.0/sql-manual/sql-data-types/string-type/CHAR"}}'),i=t("785893"),a=t("250065");let r={title:"DATETIME",language:"en"},o=void 0,l={},d=[{value:"DATETIME",id:"datetime",level:2},{value:"Description",id:"description",level:3},{value:"note",id:"note",level:3},{value:"example",id:"example",level:3}];function c(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"datetime",children:"DATETIME"}),"\n",(0,i.jsx)(n.p,{children:"DATETIME"}),"\n",(0,i.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"DATETIME([P])\nDate and time type.\nThe optional parameter P indicates the time precision and the value range is [0, 6], that is, it supports up to 6 decimal places (microseconds). 0 when not set.\nValue range is ['0000-01-01 00:00:00[.000000]','9999-12-31 23:59:59[.999999]'].\nThe form of printing is 'yyyy-MM-dd HH:mm:ss.SSSSSS'"}),"\n",(0,i.jsx)(n.h3,{id:"note",children:"note"}),"\n",(0,i.jsxs)(n.p,{children:["DATETIME supports temporal precision up to microseconds. When parsing imported DATETIME type data using the BE side (e.g. using Stream load, Spark load, etc.), or using the FE side with the ",(0,i.jsx)(n.a,{href:"/docs/query/nereids/nereids-new",children:"Nereids"})," on, decimals exceeding the current precision will be ",(0,i.jsx)(n.strong,{children:"rounded"}),".\nInserting a DATETIME value with a fractional seconds part into a column of the same type but having fewer fractional digits results in ",(0,i.jsx)(n.strong,{children:"rounded"}),".\nDATETIME reads support resolving the time zone in the format of the original DATETIME literal followed by the time zone:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"<date> <time>[<timezone>]\n"})}),"\n",(0,i.jsxs)(n.p,{children:["For the specific supported formats for ",(0,i.jsx)(n.code,{children:"<timezone>"}),", see ",(0,i.jsx)(n.a,{href:"../../../admin-manual/cluster-management/time-zone",children:"timezone"}),". Note that the ",(0,i.jsx)(n.code,{children:"DATE"}),", ",(0,i.jsx)(n.code,{children:"DATEV2"}),", ",(0,i.jsx)(n.code,{children:"DATETIME"}),", and ",(0,i.jsx)(n.code,{children:"DATETIMEV2"})," types ",(0,i.jsx)(n.strong,{children:"don't"}),' contain time zone information. For example, if an input time string "2012-12-12 08:00:00+08:00" is parsed and converted to the current time zone "+02:00", and the actual value "2012-12-12 02:00:00" is stored in the DATETIME column, the value itself will not change, no matter how much the cluster environment variables are changed.']}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:'mysql> select @@time_zone;\n+----------------+\n| @@time_zone    |\n+----------------+\n| Asia/Hong_Kong |\n+----------------+\n1 row in set (0.11 sec)\n\nmysql> insert into dtv23 values ("2020-12-12 12:12:12Z"), ("2020-12-12 12:12:12GMT"), ("2020-12-12 12:12:12+02:00"), ("2020-12-12 12:12:12America/Los_Angeles");\nQuery OK, 4 rows affected (0.17 sec)\n\nmysql> select * from dtv23;\n+-------------------------+\n| k0                      |\n+-------------------------+\n| 2020-12-12 20:12:12.000 |\n| 2020-12-12 20:12:12.000 |\n| 2020-12-13 04:12:12.000 |\n| 2020-12-12 18:12:12.000 |\n+-------------------------+\n4 rows in set (0.15 sec)\n'})})]})}function m(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return o},a:function(){return r}});var s=t(667294);let i={},a=s.createContext(i);function r(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);