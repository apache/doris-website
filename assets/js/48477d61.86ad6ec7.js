"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["349820"],{734207:function(e,n,t){t.r(n),t.d(n,{default:()=>d,frontMatter:()=>a,metadata:()=>i,assets:()=>l,toc:()=>c,contentTitle:()=>o});var i=JSON.parse('{"id":"query-acceleration/hints/distribute-hint","title":"Distribute Hint","description":"Overview","source":"@site/docs/query-acceleration/hints/distribute-hint.md","sourceDirName":"query-acceleration/hints","slug":"/query-acceleration/hints/distribute-hint","permalink":"/docs/dev/query-acceleration/hints/distribute-hint","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Distribute Hint","language":"en"},"sidebar":"docs","previous":{"title":"Leading Hint","permalink":"/docs/dev/query-acceleration/hints/leading-hint"},"next":{"title":"Optimizing Table Schema Design","permalink":"/docs/dev/query-acceleration/tuning/tuning-plan/optimizing-table-schema"}}'),r=t("785893"),s=t("250065");let a={title:"Distribute Hint",language:"en"},o=void 0,l={},c=[{value:"Overview",id:"overview",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Examples",id:"examples",level:2},{value:"Summary",id:"summary",level:2}];function h(e){let n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The Distribute hint is used to control the shuffle method for joins."}),"\n",(0,r.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Supports specifying the Distribute Type for the right table, which can be either ",(0,r.jsx)(n.code,{children:"[shuffle]"})," or ",(0,r.jsx)(n.code,{children:"[broadcast]"}),", and should be written before the right table in the Join."]}),"\n",(0,r.jsx)(n.li,{children:"Supports an arbitrary number of Distribute Hints."}),"\n",(0,r.jsx)(n.li,{children:"When encountering a Distribute Hint that cannot correctly generate a plan, the system will not display an error. It will make the best effort to apply the hint, and the final Distribute method will be shown in the EXPLAIN output."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Used in Combination with Ordered Hint"})}),"\n",(0,r.jsx)(n.p,{children:"Fix the Join order to the textual sequence, and then specify the expected Distribute method for the Join. For example:"}),"\n",(0,r.jsx)(n.p,{children:"Before using:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"mysql> explain shape plan select count(*) from t1 join t2 on t1.c1 = t2.c2;\r\n  +----------------------------------------------------------------------------------+\r\n  | Explain String(Nereids Planner)                                                  |\r\n  +----------------------------------------------------------------------------------+\r\n  | PhysicalResultSink                                                               |\r\n  | --hashAgg[GLOBAL]                                                                |\r\n  | ----PhysicalDistribute[DistributionSpecGather]                                   |\r\n  | ------hashAgg[LOCAL]                                                             |\r\n  | --------PhysicalProject                                                          |\r\n  | ----------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=() |\r\n  | ------------PhysicalProject                                                      |\r\n  | --------------PhysicalOlapScan[t1]                                               |\r\n  | ------------PhysicalDistribute[DistributionSpecHash]                             |\r\n  | --------------PhysicalProject                                                    |\r\n  | ----------------PhysicalOlapScan[t2]                                             |\r\n  +----------------------------------------------------------------------------------+\n"})}),"\n",(0,r.jsx)(n.p,{children:"After using:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"mysql> explain shape plan select /*+ ordered */ count(*) from t2 join[broadcast] t1 on t1.c1 = t2.c2;\r\n+----------------------------------------------------------------------------------+\r\n| Explain String(Nereids Planner)                                                  |\r\n+----------------------------------------------------------------------------------+\r\n| PhysicalResultSink                                                               |\r\n| --hashAgg[GLOBAL]                                                                |\r\n| ----PhysicalDistribute[DistributionSpecGather]                                   |\r\n| ------hashAgg[LOCAL]                                                             |\r\n| --------PhysicalProject                                                          |\r\n| ----------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=() |\r\n| ------------PhysicalProject                                                      |\r\n| --------------PhysicalOlapScan[t2]                                               |\r\n| ------------PhysicalDistribute[DistributionSpecReplicated]                       |\r\n| --------------PhysicalProject                                                    |\r\n| ----------------PhysicalOlapScan[t1]                                             |\r\n|                                                                                  |\r\n| Hint log:                                                                        |\r\n| Used: ORDERED                                                                    |\r\n| UnUsed:                                                                          |\r\n| SyntaxError:                                                                     |\r\n+----------------------------------------------------------------------------------+\n"})}),"\n",(0,r.jsx)(n.p,{children:"The Explain Shape Plan will display information related to the Distribute operator. Specifically:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DistributionSpecReplicated"})," indicates that the corresponding data will be replicated to all BE nodes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DistributionSpecGather"})," indicates that the data will be gathered to the FE node."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DistributionSpecHash"})," indicates that the data will be distributed to different BE nodes based on a specific hashKey and algorithm.\r\n",(0,r.jsx)(n.strong,{children:"Used in Combination with Leading Hint"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["When writing SQL queries, you can specify the corresponding ",(0,r.jsx)(n.code,{children:"DISTRIBUTE"})," method for each ",(0,r.jsx)(n.code,{children:"JOIN"})," operation while using the ",(0,r.jsx)(n.code,{children:"LEADING"})," hint. Below is a specific example demonstrating how to mix ",(0,r.jsx)(n.code,{children:"Distribute Hint"})," and ",(0,r.jsx)(n.code,{children:"Leading Hint"})," in an SQL query."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"explain shape plan\r\n    select \r\n        nation,\r\n        o_year,\r\n        sum(amount) as sum_profit\r\n    from\r\n        (\r\n            select\r\n                /*+ leading(orders shuffle {lineitem shuffle part} shuffle {supplier broadcast nation} shuffle partsupp) */\r\n                n_name as nation,\r\n                extract(year from o_orderdate) as o_year,\r\n                l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount\r\n            from\r\n                part,\r\n                supplier,\r\n                lineitem,\r\n                partsupp,\r\n                orders,\r\n                nation\r\n            where\r\n                s_suppkey = l_suppkey\r\n                and ps_suppkey = l_suppkey\r\n                and ps_partkey = l_partkey\r\n                and p_partkey = l_partkey\r\n                and o_orderkey = l_orderkey\r\n                and s_nationkey = n_nationkey\r\n                and p_name like '%green%'\r\n        ) as profit\r\n    group by\r\n        nation,\r\n        o_year\r\n    order by\r\n        nation,\r\n        o_year desc;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(n.p,{children:"The Distribute hint is a commonly used hint for controlling the join shuffle method, allowing manual specification of shuffle or broadcast distribution methods. Proper use of the Distribute hint can meet on-site tuning needs for join shuffle methods, increasing the flexibility of system control."})]})}function d(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return o},a:function(){return a}});var i=t(667294);let r={},s=i.createContext(r);function a(e){let n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);