"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["271342"],{312571:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>r,metadata:()=>s,assets:()=>d,toc:()=>c,contentTitle:()=>l});var s=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/date-time-functions/date-add","title":"DATE_ADD","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/date-time-functions/date-add.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/date-time-functions","slug":"/sql-manual/sql-functions/scalar-functions/date-time-functions/date-add","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/date-add","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"DATE_ADD","language":"en"},"sidebar":"docs","previous":{"title":"DATE","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/date"},"next":{"title":"DATE_CEIL","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/date-ceil"}}'),a=t("785893"),i=t("250065");let r={title:"DATE_ADD",language:"en"},l=void 0,d={},c=[{value:"Description",id:"description",level:2},{value:"Aliases",id:"aliases",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function o(e){let n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)(n.p,{children:"The DATE_ADD function is used to add a specified time interval to a specified date or time value and return the calculated result."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Supported input date types include DATE, DATETIME (such as '2023-12-31', '2023-12-31 23:59:59')."}),"\n",(0,a.jsxs)(n.li,{children:["The time interval is specified by both a numeric value (",(0,a.jsx)(n.code,{children:"expr"}),") and a unit (",(0,a.jsx)(n.code,{children:"time_unit"}),"). When ",(0,a.jsx)(n.code,{children:"expr"}),' is positive, it means "add", and when it is negative, it is equivalent to "subtract" the corresponding interval.']}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["This function behaves generally consistently with the ",(0,a.jsx)(n.a,{href:"https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_date-add",children:"date_add function"})," in MySQL, but the difference is that MySQL supports compound unit additions and subtractions, such as:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT DATE_ADD('2100-12-31 23:59:59',INTERVAL '1:1' MINUTE_SECOND);\n        -> '2101-01-01 00:01:00'\n"})}),"\n",(0,a.jsx)(n.p,{children:"Doris does not support this type of input."}),"\n",(0,a.jsx)(n.h2,{id:"aliases",children:"Aliases"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"days_add"}),"\n",(0,a.jsx)(n.li,{children:"adddate"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"DATE_ADD(<date_or_time_expr>, <expr> <time_unit>)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"<date_or_time_expr>"})}),(0,a.jsxs)(n.td,{children:["The date/time value to be processed. Supported types: datetime or date type, with a maximum precision of six decimal places for seconds (e.g., 2022-12-28 23:59:59.999999). For specific datetime and date formats, please refer to ",(0,a.jsx)(n.a,{href:"../../../../../docs/sql-manual/basic-element/sql-data-types/conversion/datetime-conversion",children:"datetime conversion"})," and ",(0,a.jsx)(n.a,{href:"../../../../../docs/sql-manual/basic-element/sql-data-types/conversion/date-conversion",children:"date conversion"})]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"<expr>"})}),(0,a.jsxs)(n.td,{children:["The time interval to be added, of ",(0,a.jsx)(n.code,{children:"INT"})," type"]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"<time_unit>"})}),(0,a.jsx)(n.td,{children:"Enumeration values: YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND"})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,a.jsx)(n.p,{children:"Returns a result with the same type as <date_or_time_expr>:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"When DATE type is input, returns DATE (date part only);"}),"\n",(0,a.jsx)(n.li,{children:"When DATETIME type input, returns DATETIME (including date and time);"}),"\n",(0,a.jsx)(n.li,{children:"Input with scale (such as '2024-01-01 12:00:00.123') will preserve the scale, with a maximum of six decimal places."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Special cases:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"When any parameter is NULL, returns NULL;"}),"\n",(0,a.jsx)(n.li,{children:"When illegal unit or non-numeric expr, returns an error;"}),"\n",(0,a.jsx)(n.li,{children:"When the calculation result exceeds the date type range (such as before '0000-00-00 23:59:59' or after '9999-12-31 23:59:59'), returns an error."}),"\n",(0,a.jsx)(n.li,{children:"If the next month does not have enough days for the input date, it will automatically be set to the last day of the next month."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- Add days\nselect date_add(cast('2010-11-30 23:59:59' as datetime), INTERVAL 2 DAY);\n\n+-------------------------------------------------+\n| date_add('2010-11-30 23:59:59', INTERVAL 2 DAY) |\n+-------------------------------------------------+\n| 2010-12-02 23:59:59                             |\n+-------------------------------------------------+\n\n-- Add quarters\nmysql> select DATE_ADD(cast('2023-01-01' as date), INTERVAL 1 QUARTER);\n+--------------------------------------------+\n| DATE_ADD('2023-01-01', INTERVAL 1 QUARTER) |\n+--------------------------------------------+\n| 2023-04-01                                 |\n+--------------------------------------------+\n\n-- Add weeks\nmysql> select DATE_ADD('2023-01-01', INTERVAL 1 WEEK);\n+-----------------------------------------+\n| DATE_ADD('2023-01-01', INTERVAL 1 WEEK) |\n+-----------------------------------------+\n| 2023-01-08                              |\n+-----------------------------------------+\n\n-- Add months, since February 2023 only has 28 days, January 31 plus one month returns February 28\nmysql> select DATE_ADD('2023-01-31', INTERVAL 1 MONTH);\n+------------------------------------------+\n| DATE_ADD('2023-01-31', INTERVAL 1 MONTH) |\n+------------------------------------------+\n| 2023-02-28                               |\n+------------------------------------------+\n\n-- Negative number test\nmysql> select DATE_ADD('2019-01-01', INTERVAL -3 DAY);\n+-----------------------------------------+\n| DATE_ADD('2019-01-01', INTERVAL -3 DAY) |\n+-----------------------------------------+\n| 2018-12-29                              |\n+-----------------------------------------+\n\n-- Cross-year hour addition\nmysql> select DATE_ADD('2023-12-31 23:00:00', INTERVAL 2 HOUR);\n+--------------------------------------------------+\n| DATE_ADD('2023-12-31 23:00:00', INTERVAL 2 HOUR) |\n+--------------------------------------------------+\n| 2024-01-01 01:00:00                              |\n+--------------------------------------------------+\n\n-- Illegal unit\nselect DATE_ADD('2023-12-31 23:00:00', INTERVAL 2 sa);\nERROR 1105 (HY000): errCode = 2, detailMessage = \nmismatched input 'sa' expecting {'.', '[', 'AND', 'BETWEEN', 'COLLATE', 'DAY', 'DIV', 'HOUR', 'IN', 'IS', 'LIKE', 'MATCH', 'MATCH_ALL', 'MATCH_ANY', 'MATCH_PHRASE', 'MATCH_PHRASE_EDGE', 'MATCH_PHRASE_PREFIX', 'MATCH_REGEXP', 'MINUTE', 'MONTH', 'NOT', 'OR', 'QUARTER', 'REGEXP', 'RLIKE', 'SECOND', 'WEEK', 'XOR', 'YEAR', EQ, '<=>', NEQ, '<', LTE, '>', GTE, '+', '-', '*', '/', '%', '&', '&&', '|', '||', '^'}(line 1, pos 50)\n\n-- Parameter is NULL, returns NULL\nmysql> select DATE_ADD(NULL, INTERVAL 1 MONTH);\n+----------------------------------+\n| DATE_ADD(NULL, INTERVAL 1 MONTH) |\n+----------------------------------+\n| NULL                             |\n+----------------------------------+\n\n-- Calculated result is not in date range [0000,9999], returns error\nmysql> select DATE_ADD('0001-01-28', INTERVAL -2 YEAR);\nERROR 1105 (HY000): errCode = 2, detailMessage = (10.16.10.2)[E-218]Operation years_add of 0001-01-28, -2 out of range\n\nmysql> select DATE_ADD('9999-01-28', INTERVAL 2 YEAR);\nERROR 1105 (HY000): errCode = 2, detailMessage = (10.16.10.2)[E-218]Operation years_add of 9999-01-28, 2 out of range\n"})})]})}function u(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return r}});var s=t(667294);let a={},i=s.createContext(a);function r(e){let n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);