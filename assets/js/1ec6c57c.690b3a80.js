"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["622817"],{761384:function(e,n,s){s.r(n),s.d(n,{default:()=>u,frontMatter:()=>c,metadata:()=>r,assets:()=>t,toc:()=>o,contentTitle:()=>a});var r=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/array-functions/array-zip","title":"ARRAY_ZIP","description":"Function","source":"@site/docs/sql-manual/sql-functions/scalar-functions/array-functions/array-zip.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/array-functions","slug":"/sql-manual/sql-functions/scalar-functions/array-functions/array-zip","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/array-functions/array-zip","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"ARRAY_ZIP","language":"en"},"sidebar":"docs","previous":{"title":"ARRAY_WITH_CONSTANT","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/array-functions/array-with-constant"},"next":{"title":"ARRAYS_OVERLAP","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/array-functions/arrays-overlap"}}'),l=s("785893"),i=s("250065");let c={title:"ARRAY_ZIP",language:"en"},a=void 0,t={},o=[{value:"Function",id:"function",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Usage Notes",id:"usage-notes",level:2},{value:"Examples",id:"examples",level:2}];function d(e){let n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"function",children:"Function"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"ARRAY_ZIP"})," function combines multiple ",(0,l.jsx)(n.code,{children:"ARRAY"}),"s (e.g., ",(0,l.jsx)(n.code,{children:"arr1, arr2, ... , arrN"}),") element-wise into a single ",(0,l.jsx)(n.code,{children:"ARRAY<STRUCT>"}),", where each ",(0,l.jsx)(n.code,{children:"STRUCT"})," contains the corresponding elements from each input array."]}),"\n",(0,l.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-SQL",children:"ARRAY_ZIP(arr1, arr2, ... , arrN)\n"})}),"\n",(0,l.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"arr1, arr2, ..., arrN"}),": The N input arrays, with types ",(0,l.jsx)(n.code,{children:"ARRAY<T1>, ARRAY<T2>, ..., ARRAY<Tn>"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["The return type is ",(0,l.jsx)(n.code,{children:"ARRAY<STRUCT<col1 T1, col2 T2, ..., colN Tn>>"}),", where each ",(0,l.jsx)(n.code,{children:"STRUCT"})," represents the combination of elements at the same index from the input arrays."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"usage-notes",children:"Usage Notes"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsxs)(n.strong,{children:["If the arrays have different lengths, the function fails with ",(0,l.jsx)(n.code,{children:"RUNTIME_ERROR"})]}),"."]}),"\n",(0,l.jsx)(n.li,{children:"Supports input arrays of different types; the resulting struct fields correspond one-to-one with the input array types."}),"\n",(0,l.jsx)(n.li,{children:"Useful for combining multiple parallel arrays into a structured format for easier processing or analysis."}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Combine multiple arrays"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-SQL",children:'SELECT ARRAY_ZIP(ARRAY(23, 24, 25), ARRAY("John", "Jane", "Jim"), ARRAY(true, false, true));\n+-------------------------------------------------------------------------------------------------------------------+\n| ARRAY_ZIP(ARRAY(23, 24, 25), ARRAY("John", "Jane", "Jim"), ARRAY(true, false, true))                              |\n+-------------------------------------------------------------------------------------------------------------------+\n| [{"col1":23, "col2":"John", "col3":1}, {"col1":24, "col2":"Jane", "col3":0}, {"col1":25, "col2":"Jim", "col3":1}] |\n+-------------------------------------------------------------------------------------------------------------------+\n'})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["The first ",(0,l.jsx)(n.code,{children:"STRUCT"})," in the return value contains the first element from each input ",(0,l.jsx)(n.code,{children:"ARRAY"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["The second ",(0,l.jsx)(n.code,{children:"STRUCT"})," contains the second element from each input ",(0,l.jsx)(n.code,{children:"ARRAY"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["The third ",(0,l.jsx)(n.code,{children:"STRUCT"})," contains the third element from each input ",(0,l.jsx)(n.code,{children:"ARRAY"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Access the return value"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-SQL",children:'-- Access the returned ARRAY\nSELECT ARRAY_ZIP(ARRAY(23, 24, 25), ARRAY("John", "Jane", "Jim"))[1];\n+---------------------------------------------------------------+\n| ARRAY_ZIP(ARRAY(23, 24, 25), ARRAY("John", "Jane", "Jim"))[1] |\n+---------------------------------------------------------------+\n| {"col1":23, "col2":"John"}                                    |\n+---------------------------------------------------------------+\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["If one of the arrays is ",(0,l.jsx)(n.code,{children:"NULL"}),", returns ",(0,l.jsx)(n.code,{children:"NULL"})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-SQL",children:'SELECT ARRAY_ZIP(ARRAY(23, 24, 25), ARRAY("John", "Jane", "Jim"), NULL) ;\n+------------------------------------------------------------------+\n| ARRAY_ZIP(ARRAY(23, 24, 25), ARRAY("John", "Jane", "Jim"), NULL) |\n+------------------------------------------------------------------+\n| NULL                                                             |\n+------------------------------------------------------------------+\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["If an element in an ",(0,l.jsx)(n.code,{children:"ARRAY"})," is ",(0,l.jsx)(n.code,{children:"NULL"}),", the corresponding field in the ",(0,l.jsx)(n.code,{children:"STRUCT"})," is ",(0,l.jsx)(n.code,{children:"NULL"})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-SQL",children:' SELECT ARRAY_ZIP(ARRAY(23, NULL, 25), ARRAY("John", "Jane", NULL), ARRAY(NULL, false, true));\n+-----------------------------------------------------------------------------------------------------------------------+\n| ARRAY_ZIP(ARRAY(23, NULL, 25), ARRAY("John", "Jane", NULL), ARRAY(NULL, false, true))                                 |\n+-----------------------------------------------------------------------------------------------------------------------+\n| [{"col1":23, "col2":"John", "col3":null}, {"col1":null, "col2":"Jane", "col3":0}, {"col1":25, "col2":null, "col3":1}] |\n+-----------------------------------------------------------------------------------------------------------------------+\n'})}),"\n"]}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return a},a:function(){return c}});var r=s(667294);let l={},i=r.createContext(l);function c(e){let n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);