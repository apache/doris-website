"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["738763"],{970347:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>c,metadata:()=>s,assets:()=>o,toc:()=>d,contentTitle:()=>a});var s=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/date-time-functions/microseconds-sub","title":"MICROSECONDS_SUB","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/date-time-functions/microseconds-sub.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/date-time-functions","slug":"/sql-manual/sql-functions/scalar-functions/date-time-functions/microseconds-sub","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/microseconds-sub","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"MICROSECONDS_SUB","language":"en"},"sidebar":"docs","previous":{"title":"microseconds-diff","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/microseconds-diff"},"next":{"title":"MILLISECOND_TIMESTAMP","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/millisecond-timestamp"}}'),i=t("785893"),r=t("250065");let c={title:"MICROSECONDS_SUB",language:"en"},a=void 0,o={},d=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function l(e){let n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"MICROSECONDS_SUB"})," function subtracts a specified number of microseconds from the input datetime value and returns the resulting new datetime value. This function supports processing ",(0,i.jsx)(n.code,{children:"DATETIME"})," types with microsecond precision."]}),"\n",(0,i.jsxs)(n.p,{children:["This function behaves the same as MySQL\u2019s ",(0,i.jsx)(n.a,{href:"https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_date-sub",children:"date_sub function"})," when using MICROSECOND as the unit."]}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"MICROSECONDS_SUB(`<datetime>`, `<delta>`)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<datetime>"})}),(0,i.jsxs)(n.td,{children:["The input datetime value, of type ",(0,i.jsx)(n.code,{children:"DATETIME"}),". For specific datetime formats, see ",(0,i.jsx)(n.a,{href:"../../../../../docs/sql-manual/basic-element/sql-data-types/conversion/datetime-conversion",children:"datetime conversion"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<delta>"})}),(0,i.jsxs)(n.td,{children:["The number of microseconds to subtract, of type ",(0,i.jsx)(n.code,{children:"BIGINT"}),". 1 second = 1,000,000 microseconds."]})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a value of type ",(0,i.jsx)(n.code,{children:"DATETIME"}),", representing the result of subtracting the specified number of microseconds from the base time."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"<delta>"})," is negative, the function behaves the same as adding the corresponding number of microseconds to the base time (i.e., ",(0,i.jsx)(n.code,{children:"MICROSECONDS_SUB(basetime, -n)"})," is equivalent to ",(0,i.jsx)(n.code,{children:"MICROSECONDS_ADD(basetime, n)"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["If the calculation result exceeds the valid range of the ",(0,i.jsx)(n.code,{children:"DATETIME"})," type (",(0,i.jsx)(n.code,{children:"0000-01-01 00:00:00"})," to ",(0,i.jsx)(n.code,{children:"9999-12-31 23:59:59.999999"}),"), an exception is thrown."]}),"\n",(0,i.jsxs)(n.li,{children:["If any parameter is ",(0,i.jsx)(n.code,{children:"NULL"}),", the function returns ",(0,i.jsx)(n.code,{children:"NULL"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Subtract microseconds\nSELECT NOW(3) AS current_time, MICROSECONDS_SUB(NOW(3), 100000) AS after_sub;\n\n+-------------------------+----------------------------+\n| current_time            | after_sub                  |\n+-------------------------+----------------------------+\n| 2025-01-16 11:52:22.296 | 2025-01-16 11:52:22.196000 |\n+-------------------------+----------------------------+\n\n-- Negative delta (equivalent to addition)\nmysql> SELECT MICROSECONDS_SUB('2023-10-01 12:00:00.200000', -300000) AS after_sub;\n+----------------------------+\n| after_sub                  |\n+----------------------------+\n| 2023-10-01 12:00:00.500000 |\n+----------------------------+\n\n-- Any parameter is NULL, returns NULL\nSELECT MICROSECONDS_SUB(NULL, 1000), MICROSECONDS_SUB('2023-01-01', NULL) AS after_sub;\n+------------------------------+----------------------------+\n| microseconds_sub(NULL, 1000) | after_sub                  |\n+------------------------------+----------------------------+\n| NULL                         | NULL                       |\n+------------------------------+----------------------------+\n\n-- Input type is DATE, time part is automatically set to 00:00:00.000000\nSELECT MICROSECONDS_SUB('2023-10-01', -300000);\n+-----------------------------------------+\n| MICROSECONDS_SUB('2023-10-01', -300000) |\n+-----------------------------------------+\n| 2023-10-01 00:00:00.300000              |\n+-----------------------------------------+\n\n-- Exceeds datetime range, throws an error\nmysql> SELECT MICROSECONDS_SUB('0000-01-01 00:00:00.000000', 1000000) AS after_sub;\nERROR 1105 (HY000): errCode = 2, detailMessage = (10.16.10.3)[E-218]Operation microseconds_add of 0000-01-01 00:00:00, -1000000 \nout of range\n\n"})})]})}function u(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return c}});var s=t(667294);let i={},r=s.createContext(i);function c(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);