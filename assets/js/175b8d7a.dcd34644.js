"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["596203"],{270007:function(e,n,s){s.r(n),s.d(n,{default:()=>h,frontMatter:()=>i,metadata:()=>l,assets:()=>a,toc:()=>d,contentTitle:()=>c});var l=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/string-functions/substring-index","title":"SUBSTRING_INDEX","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/string-functions/substring-index.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/string-functions","slug":"/sql-manual/sql-functions/scalar-functions/string-functions/substring-index","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/substring-index","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"SUBSTRING_INDEX","language":"en"},"sidebar":"docs","previous":{"title":"SUBSTRING","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/substring"},"next":{"title":"TOKENIZE","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/tokenize"}}'),r=s("785893"),t=s("250065");let i={title:"SUBSTRING_INDEX",language:"en"},c=void 0,a={},d=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2},{value:"Keywords",id:"keywords",level:3}];function o(e){let n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(n.p,{children:"The SUBSTRING_INDEX function is used to extract a portion of a string based on a specified delimiter. By specifying the number of delimiter occurrences, extraction can be performed from either the left or right side."}),"\n",(0,r.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SUBSTRING_INDEX(<content>, <delimiter>, <field>)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<content>"})}),(0,r.jsx)(n.td,{children:"The source string to extract from. Type: VARCHAR"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<delimiter>"})}),(0,r.jsx)(n.td,{children:"The delimiter string, case-sensitive and supports multi-byte characters. Type: VARCHAR"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<field>"})}),(0,r.jsx)(n.td,{children:"Number of delimiter occurrences. Positive counts from left, negative counts from right, 0 returns empty string. Type: INT"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,r.jsx)(n.p,{children:"Returns VARCHAR type, representing the extracted substring."}),"\n",(0,r.jsx)(n.p,{children:"Extraction rules:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"When field > 0: returns content before the field-th delimiter from the left"}),"\n",(0,r.jsx)(n.li,{children:"When field < 0: returns content after the |field|-th delimiter from the right"}),"\n",(0,r.jsx)(n.li,{children:"When field = 0: returns empty string (returns NULL when content is NULL)"}),"\n",(0,r.jsx)(n.li,{children:"Case-sensitive exact delimiter matching"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Special cases:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If any parameter is NULL, returns NULL"}),"\n",(0,r.jsx)(n.li,{children:"If delimiter doesn't exist in string, returns original string"}),"\n",(0,r.jsx)(n.li,{children:"If specified count exceeds actual delimiter occurrences, returns maximum extractable portion"}),"\n",(0,r.jsx)(n.li,{children:"If delimiter is empty string, returns empty string"}),"\n",(0,r.jsx)(n.li,{children:"If source string is empty, returns empty string"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Basic left extraction"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT SUBSTRING_INDEX('hello world', ' ', 1), SUBSTRING_INDEX('one,two,three', ',', 2);\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"+----------------------------------------+------------------------------------------+\n| SUBSTRING_INDEX('hello world', ' ', 1) | SUBSTRING_INDEX('one,two,three', ',', 2) |\n+----------------------------------------+------------------------------------------+\n| hello                                  | one,two                                  |\n+----------------------------------------+------------------------------------------+\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Right extraction (negative count)"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT SUBSTRING_INDEX('hello world', ' ', -1), SUBSTRING_INDEX('one,two,three', ',', -1);\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"+-----------------------------------------+-------------------------------------------+\n| SUBSTRING_INDEX('hello world', ' ', -1) | SUBSTRING_INDEX('one,two,three', ',', -1) |\n+-----------------------------------------+-------------------------------------------+\n| world                                   | three                                     |\n+-----------------------------------------+-------------------------------------------+\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"NULL value handling"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT SUBSTRING_INDEX(NULL, ',', 1), SUBSTRING_INDEX('test', NULL, 1);\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"+--------------------------------+------------------------------------+\n| SUBSTRING_INDEX(NULL, ',', 1)  | SUBSTRING_INDEX('test', NULL, 1)   |\n+--------------------------------+------------------------------------+\n| NULL                           | NULL                               |\n+--------------------------------+------------------------------------+\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:"Zero count handling"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT SUBSTRING_INDEX('hello world', ' ', 0), SUBSTRING_INDEX('a,b,c', ',', 0);\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"+----------------------------------------+----------------------------------+\n| SUBSTRING_INDEX('hello world', ' ', 0) | SUBSTRING_INDEX('a,b,c', ',', 0) |\n+----------------------------------------+----------------------------------+\n|                                        |                                  |\n+----------------------------------------+----------------------------------+\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"5",children:["\n",(0,r.jsx)(n.li,{children:"Delimiter doesn't exist"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT SUBSTRING_INDEX('hello world', ',', 1), SUBSTRING_INDEX('no-delimiter', '|', -1);\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"+----------------------------------------+------------------------------------------+\n| SUBSTRING_INDEX('hello world', ',', 1) | SUBSTRING_INDEX('no-delimiter', '|', -1) |\n+----------------------------------------+------------------------------------------+\n| hello world                            | no-delimiter                             |\n+----------------------------------------+------------------------------------------+\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"6",children:["\n",(0,r.jsx)(n.li,{children:"Count exceeds delimiter occurrences"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT SUBSTRING_INDEX('a,b,c', ',', 5), SUBSTRING_INDEX('a,b,c', ',', -5);\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"+----------------------------------+-----------------------------------+\n| SUBSTRING_INDEX('a,b,c', ',', 5) | SUBSTRING_INDEX('a,b,c', ',', -5) |\n+----------------------------------+-----------------------------------+\n| a,b,c                            | a,b,c                             |\n+----------------------------------+-----------------------------------+\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"7",children:["\n",(0,r.jsx)(n.li,{children:"UTF-8 multi-byte character delimiter"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT SUBSTRING_INDEX('\u1E6D\u1E5B\xec\u2192\u1E0D\u1E0Dumai\u2192hello', '\u2192', 1), SUBSTRING_INDEX('\u1E6D\u1E5B\xec\u2192\u1E0D\u1E0Dumai\u2192hello', '\u2192', -1);\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"+-----------------------------------------------+------------------------------------------------+\n| SUBSTRING_INDEX('\u1E6D\u1E5B\xec\u2192\u1E0D\u1E0Dumai\u2192hello', '\u2192', 1)   | SUBSTRING_INDEX('\u1E6D\u1E5B\xec\u2192\u1E0D\u1E0Dumai\u2192hello', '\u2192', -1)  |\n+-----------------------------------------------+------------------------------------------------+\n| \u1E6D\u1E5B\xec                                           | hello                                          |\n+-----------------------------------------------+------------------------------------------------+\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"8",children:["\n",(0,r.jsx)(n.li,{children:"Multi-character delimiter"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT SUBSTRING_INDEX('data::field::value', '::', 2), SUBSTRING_INDEX('data::field::value', '::', -1);\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"+---------------------------------------------+----------------------------------------------+\n| SUBSTRING_INDEX('data::field::value', '::', 2) | SUBSTRING_INDEX('data::field::value', '::', -1) |\n+---------------------------------------------+----------------------------------------------+\n| data::field                                 | value                                        |\n+---------------------------------------------+----------------------------------------------+\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"9",children:["\n",(0,r.jsx)(n.li,{children:"Empty source string"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT SUBSTRING_INDEX('', ' ', 1);\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"+-----------------------------+\n| SUBSTRING_INDEX('', ' ', 1) |\n+-----------------------------+\n|                             |\n+-----------------------------+\n"})}),"\n",(0,r.jsx)(n.h3,{id:"keywords",children:"Keywords"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"SUBSTRING_INDEX, SUBSTRING\n"})})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return c},a:function(){return i}});var l=s(667294);let r={},t=l.createContext(r);function i(e){let n=l.useContext(t);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);