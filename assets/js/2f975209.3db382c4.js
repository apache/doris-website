"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["729411"],{397768:function(n,e,s){s.r(e),s.d(e,{default:()=>h,frontMatter:()=>t,metadata:()=>l,assets:()=>a,toc:()=>d,contentTitle:()=>c});var l=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/string-functions/unhex","title":"UNHEX","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/string-functions/unhex.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/string-functions","slug":"/sql-manual/sql-functions/scalar-functions/string-functions/unhex","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/unhex","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"UNHEX","language":"en"},"sidebar":"docs","previous":{"title":"UNCOMPRESS","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/uncompress"},"next":{"title":"UCASE/UPPER","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/ucase"}}'),r=s("785893"),i=s("250065");let t={title:"UNHEX",language:"en"},c=void 0,a={},d=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2},{value:"Keywords",id:"keywords",level:3}];function o(n){let e={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(e.p,{children:"The UNHEX function converts a hexadecimal string back to the original string, serving as the inverse operation of the HEX function. This function converts every two hexadecimal characters (0-9, A-F, a-f) into one byte. The UNHEX_NULL function works identically but returns NULL instead of an empty string when encountering invalid input. These functions are useful when handling binary data, encrypted data, or data requiring hexadecimal representation."}),"\n",(0,r.jsx)(e.admonition,{type:"tip",children:(0,r.jsx)(e.p,{children:"This function is supported since version 3.0.6."})}),"\n",(0,r.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"UNHEX(<str>)\n"})}),"\n",(0,r.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Parameter"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsx)(e.tbody,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<str>"})}),(0,r.jsx)(e.td,{children:"The hexadecimal character string"})]})})]}),"\n",(0,r.jsx)(e.h2,{id:"return-value",children:"Return Value"}),"\n",(0,r.jsx)(e.p,{children:"Returns VARCHAR type, representing the decoded original string from hexadecimal."}),"\n",(0,r.jsx)(e.p,{children:"Decoding rules:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Accepts character range: 0-9, a-f, A-F"}),"\n",(0,r.jsx)(e.li,{children:"Every two hexadecimal characters convert to one byte"}),"\n",(0,r.jsx)(e.li,{children:"Result may contain unprintable characters"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Special cases (UNHEX):"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"If input is NULL, returns empty string"}),"\n",(0,r.jsx)(e.li,{children:"If string length is 0 or odd, returns empty string"}),"\n",(0,r.jsx)(e.li,{children:"If contains non-hexadecimal characters, returns empty string"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Special cases (UNHEX_NULL):"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"If input is NULL, returns NULL"}),"\n",(0,r.jsx)(e.li,{children:"If string length is 0 or odd, returns NULL"}),"\n",(0,r.jsx)(e.li,{children:"If contains non-hexadecimal characters, returns NULL"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"select unhex('@');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+------------+\n| unhex('@') |\n+------------+\n|            |\n+------------+\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"select unhex_null('@');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+-----------------+\n| unhex_null('@') |\n+-----------------+\n| NULL            |\n+-----------------+\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"select unhex('41');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+-------------+\n| unhex('41') |\n+-------------+\n| A           |\n+-------------+\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"select unhex('4142'), unhex('48656C6C6F');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+---------------+----------------------+\n| unhex('4142') | unhex('48656C6C6F')  |\n+---------------+----------------------+\n| AB            | Hello                |\n+---------------+----------------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"5",children:["\n",(0,r.jsx)(e.li,{children:"NULL handling comparison"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT UNHEX(NULL), UNHEX_NULL(NULL);\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+-------------+-----------------+\n| UNHEX(NULL) | UNHEX_NULL(NULL) |\n+-------------+-----------------+\n|             | NULL            |\n+-------------+-----------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"6",children:["\n",(0,r.jsx)(e.li,{children:"UTF-8 character decoding"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT UNHEX('E4B8AD'), UNHEX('E69687');\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+-----------------+-----------------+\n| UNHEX('E4B8AD') | UNHEX('E69687') |\n+-----------------+-----------------+\n| \u4E2D              | \u6587              |\n+-----------------+-----------------+\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"7",children:["\n",(0,r.jsx)(e.li,{children:"Hexadecimal encoding-decoding cycle verification"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"SELECT UNHEX(HEX('Hello')), UNHEX(HEX('Test123'));\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",children:"+---------------------+------------------------+\n| UNHEX(HEX('Hello')) | UNHEX(HEX('Test123'))  |\n+---------------------+------------------------+\n| Hello               | Test123                |\n+---------------------+------------------------+\n"})}),"\n",(0,r.jsx)(e.h3,{id:"keywords",children:"Keywords"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"UNHEX, UNHEX_NULL, HEX\n"})})]})}function h(n={}){let{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(o,{...n})}):o(n)}},250065:function(n,e,s){s.d(e,{Z:function(){return c},a:function(){return t}});var l=s(667294);let r={},i=l.createContext(r);function t(n){let e=l.useContext(i);return l.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:t(n.components),l.createElement(i.Provider,{value:e},n.children)}}}]);