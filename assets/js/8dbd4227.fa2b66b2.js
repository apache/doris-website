"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["727257"],{819894:function(e,n,r){r.r(n),r.d(n,{default:()=>u,frontMatter:()=>t,metadata:()=>a,assets:()=>c,toc:()=>o,contentTitle:()=>i});var a=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/array-functions/array-compact","title":"ARRAY_COMPACT","description":"array_compact","source":"@site/docs/sql-manual/sql-functions/scalar-functions/array-functions/array-compact.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/array-functions","slug":"/sql-manual/sql-functions/scalar-functions/array-functions/array-compact","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/array-functions/array-compact","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"ARRAY_COMPACT","language":"en"},"sidebar":"docs","previous":{"title":"ARRAY_AVG","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/array-functions/array-avg"},"next":{"title":"ARRAY_CONCAT","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/array-functions/array-concat"}}'),l=r("785893"),s=r("250065");let t={title:"ARRAY_COMPACT",language:"en"},i=void 0,c={},o=[{value:"array_compact",id:"array_compact",level:2},{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Return Value",id:"return-value",level:3},{value:"Examples",id:"examples",level:3},{value:"Keywords",id:"keywords",level:3}];function d(e){let n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",t:"t",ul:"ul",version:"version",...(0,s.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"array_compact",children:"array_compact"}),"\n",(0,l.jsx)(n.version,{since:"2.0.0",children:"\n"}),"\n",(0,l.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Removes consecutive duplicate elements from an array, keeping only the first occurrence of each different value. The function traverses the array from left to right, skipping elements that are the same as the previous element, and only retains the first occurrence of each value."}),"\n",(0,l.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"array_compact(ARRAY<T> arr)\n"})}),"\n",(0,l.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"arr"}),"\uFF1AARRAY",(0,l.jsx)(n.t,{children:" type, the array to deduplicate. Supports column names or constant values."})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"T supported types:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Numeric types: TINYINT, SMALLINT, INT, BIGINT, LARGEINT, FLOAT, DOUBLE, DECIMAL"}),"\n",(0,l.jsx)(n.li,{children:"String types: CHAR, VARCHAR, STRING"}),"\n",(0,l.jsx)(n.li,{children:"Date and time types: DATE, DATETIME, DATEV2, DATETIMEV2"}),"\n",(0,l.jsx)(n.li,{children:"Boolean type: BOOLEAN"}),"\n",(0,l.jsx)(n.li,{children:"IP types: IPV4, IPV6"}),"\n",(0,l.jsx)(n.li,{children:"Complex data types: ARRAY"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"return-value",children:"Return Value"}),"\n",(0,l.jsx)(n.p,{children:"Return type: ARRAY<T>"}),"\n",(0,l.jsx)(n.p,{children:"Return value meaning:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"The deduplicated array, keeping only the first occurrence of consecutive duplicate elements"}),"\n",(0,l.jsx)(n.li,{children:"NULL: if the input array is NULL"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Return value behavior description:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Normal deduplication behavior:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Traverses the array from left to right, keeping the first occurrence of each element, skipping consecutive elements that are the same as the previous element"}),"\n",(0,l.jsx)(n.li,{children:"Only removes consecutive duplicate elements, non-consecutive duplicate elements will be retained"}),"\n",(0,l.jsx)(n.li,{children:"Retains null values (null and null are considered the same)"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Boundary condition behavior:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"When the input array is empty, returns an empty array"}),"\n",(0,l.jsx)(n.li,{children:"When the input array is NULL, returns NULL"}),"\n",(0,l.jsx)(n.li,{children:"When the array has only one element, returns the original array"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Usage notes:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"The function maintains the original order of array elements"}),"\n",(0,l.jsx)(n.li,{children:"Only removes consecutive duplicate elements, does not perform global deduplication"}),"\n",(0,l.jsx)(n.li,{children:"map, struct do not support deduplication logic"}),"\n",(0,l.jsx)(n.li,{children:"For null values in array elements: null elements will be processed normally, multiple consecutive null elements will be merged into one"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE array_compact_test (\n    id INT,\n    int_array ARRAY<INT>,\n    string_array ARRAY<STRING>\n)\nDUPLICATE KEY(id)\nDISTRIBUTED BY HASH(id) BUCKETS 3\nPROPERTIES (\n    \"replication_num\" = \"1\"\n);\n\nINSERT INTO array_compact_test VALUES\n(1, [1, 1, 2, 2, 2, 3, 1, 4], ['a', 'a', 'b', 'b', 'c']),\n(2, [1, 2, 3, 1, 2, 3], ['a', 'b', 'a', 'b']),\n(3, [1, null, null, 2, null, null, 3], ['a', null, null, 'b']),\n(4, [], []),\n(5, NULL, NULL);\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Query examples:"})}),"\n",(0,l.jsx)(n.p,{children:"Consecutive duplicate removal in string_array: Only adjacent 'a' or 'b' will be removed, 'c' is retained."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT array_compact(string_array) FROM array_compact_test WHERE id = 1;\n+-----------------------------+\n| array_compact(string_array) |\n+-----------------------------+\n| ["a", "b", "c"]             |\n+-----------------------------+\n'})}),"\n",(0,l.jsx)(n.p,{children:"Non-consecutive duplicate elements will not be removed, original order and content are preserved."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT array_compact(int_array) FROM array_compact_test WHERE id = 2;\n+-------------------------------+\n| array_compact(int_array)      |\n+-------------------------------+\n| [1, 2, 3, 1, 2, 3]            |\n+-------------------------------+\n"})}),"\n",(0,l.jsx)(n.p,{children:"Array containing null values, consecutive nulls only keep one: null is treated as a normal value, consecutive nulls only keep one, non-consecutive nulls will not be merged."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT array_compact(int_array) FROM array_compact_test WHERE id = 3;\n+------------------------------------------+\n| array_compact(int_array)                 |\n+------------------------------------------+\n| [1, null, 2, null, 3]                    |\n+------------------------------------------+\n"})}),"\n",(0,l.jsx)(n.p,{children:"Complex type examples:"}),"\n",(0,l.jsx)(n.p,{children:"Consecutive duplicate removal for nested array types. Only adjacent completely identical sub-arrays will be removed, non-consecutive ones will not."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT array_compact([[1,2],[1,2],[3,4],[3,4]]);\n+------------------------------------------+\n| array_compact([[1,2],[1,2],[3,4],[3,4]]) |\n+------------------------------------------+\n| [[1,2],[3,4]]                            |\n+------------------------------------------+\n"})}),"\n",(0,l.jsx)(n.p,{children:"Empty array returns empty array:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT array_compact(int_array) FROM array_compact_test WHERE id = 4;\n+----------------------+\n| array_compact(int_array) |\n+----------------------+\n| []                   |\n+----------------------+\n"})}),"\n",(0,l.jsx)(n.p,{children:"NULL array returns NULL:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT array_compact(int_array) FROM array_compact_test WHERE id = 5;\n+----------------------+\n| array_compact(int_array) |\n+----------------------+\n| NULL                 |\n+----------------------+\n"})}),"\n",(0,l.jsx)(n.p,{children:"Array with only one element returns the original array:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT array_compact([42]);\n+----------------------+\n| array_compact([42])  |\n+----------------------+\n| [42]                 |\n+----------------------+\n"})}),"\n",(0,l.jsx)(n.p,{children:"Passing multiple parameters will cause an error."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT array_compact([1,2,3],[4,5,6]);\nERROR 1105 (HY000): errCode = 2, detailMessage = Can not found function 'array_compact' which has 2 arity. Candidate functions are: [array_compact(Expression)]\n"})}),"\n",(0,l.jsx)(n.p,{children:"Passing non-array type will cause an error."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT array_compact('not_an_array');\nERROR 1105 (HY000): errCode = 2, detailMessage = Can not find the compatibility function signature: array_compact(VARCHAR(12))\n"})}),"\n",(0,l.jsx)(n.h3,{id:"keywords",children:"Keywords"}),"\n",(0,l.jsx)(n.p,{children:"ARRAY, COMPACT, ARRAY_COMPACT"})]})}function u(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return i},a:function(){return t}});var a=r(667294);let l={},s=a.createContext(l);function t(e){let n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);