"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["47733"],{401121:function(e,n,t){t.r(n),t.d(n,{default:()=>h,frontMatter:()=>i,metadata:()=>s,assets:()=>o,toc:()=>c,contentTitle:()=>r});var s=JSON.parse('{"id":"sql-manual/sql-statements/data-modification/load-and-export/CREATE-SYNC-JOB","title":"CREATE SYNC JOB","description":"Description","source":"@site/docs/sql-manual/sql-statements/data-modification/load-and-export/CREATE-SYNC-JOB.md","sourceDirName":"sql-manual/sql-statements/data-modification/load-and-export","slug":"/sql-manual/sql-statements/data-modification/load-and-export/CREATE-SYNC-JOB","permalink":"/docs/dev/sql-manual/sql-statements/data-modification/load-and-export/CREATE-SYNC-JOB","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"CREATE SYNC JOB","language":"en"},"sidebar":"docs","previous":{"title":"SHOW CREATE ROUTINE LOAD","permalink":"/docs/dev/sql-manual/sql-statements/data-modification/load-and-export/SHOW-CREATE-ROUTINE-LOAD"},"next":{"title":"PAUSE SYNC JOB","permalink":"/docs/dev/sql-manual/sql-statements/data-modification/load-and-export/PAUSE-SYNC-JOB"}}'),a=t("785893"),l=t("250065");let i={title:"CREATE SYNC JOB",language:"en"},r=void 0,o={},c=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Required Parameters",id:"required-parameters",level:2},{value:"Usage Notes",id:"usage-notes",level:2},{value:"Access Control Requirements",id:"access-control-requirements",level:2},{value:"Examples",id:"examples",level:2}];function d(e){let n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)(n.p,{children:"The data synchronization (Sync Job) function allows users to submit a persistent data synchronization job. It incrementally synchronizes the CDC (Change Data Capture) of data update operations from a MySQL database by reading the Binlog from a specified remote source. Currently, the synchronization job supports connecting to Canal, obtaining parsed Binlog data from the Canal server, and importing it into Doris."}),"\n",(0,a.jsxs)(n.p,{children:["Users can view the status of synchronization jobs via ",(0,a.jsx)(n.a,{href:"../../../../sql-manual/sql-statements/data-modification/load-and-export/SHOW-SYNC-JOB",children:"SHOW SYNC JOB"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"CREATE SYNC [<db>.]<job_name>\n(<channel_desc> [, ... ])\n<binlog_desc>\n"})}),"\n",(0,a.jsx)(n.p,{children:"where:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"channel_desc\n  : FROM <mysql_db>.<src_tbl> INTO <des_tbl> [ <columns_mapping> ]\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'binlog_desc\n  : FROM BINLOG ("<key>" = "<value>" [, ... ])\n'})}),"\n",(0,a.jsx)(n.h2,{id:"required-parameters",children:"Required Parameters"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.strong,{children:["1. ",(0,a.jsx)(n.code,{children:"<job_name>"})]})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Specifies the unique name of the synchronization job within the current database. Only one job with the same ",(0,a.jsx)(n.code,{children:"<job_name>"})," can be running at a time."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.strong,{children:["2. ",(0,a.jsx)(n.code,{children:"<channel_desc>"})]})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Describes the mapping relationship between the MySQL source table and the Doris target table."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"<mysql_db.src_tbl>"})}),": Specifies the source table in MySQL (including the database name)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"<des_tbl>"})}),": Specifies the target table in Doris. The target table must be unique, and its batch delete function must be enabled."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"<columns_mapping>"})})," (Optional): Defines the mapping between columns of the source and target tables. If omitted, columns are mapped one-to-one in order. Note that the form ",(0,a.jsx)(n.code,{children:"col_name = expr"})," is not supported."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.strong,{children:["3. ",(0,a.jsx)(n.code,{children:"<binlog_desc>"})]})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Describes the remote data source for the Binlog."}),"\n",(0,a.jsxs)(n.p,{children:["The properties for the Canal data source (keys prefixed with ",(0,a.jsx)(n.code,{children:"canal."}),") include:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"canal.server.ip"})}),": Address of the Canal server."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"canal.server.port"})}),": Port of the Canal server."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"canal.destination"})}),": Identifier of the Canal instance."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"canal.batchSize"})}),": Maximum batch size to fetch (default is 8192)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"canal.username"})}),": Username for the Canal instance."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"canal.password"})}),": Password for the Canal instance."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"canal.debug"})})," (Optional): If set to true, prints detailed batch and row information."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"usage-notes",children:"Usage Notes"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Currently, the synchronization job only supports connecting to a Canal server."}),"\n",(0,a.jsxs)(n.li,{children:["Only one synchronization job with the same ",(0,a.jsx)(n.code,{children:"<job_name>"})," can run concurrently within a database."]}),"\n",(0,a.jsxs)(n.li,{children:["The target table specified in ",(0,a.jsx)(n.code,{children:"<channel_desc>"})," must have its batch delete function enabled."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"access-control-requirements",children:"Access Control Requirements"}),"\n",(0,a.jsx)(n.p,{children:"Users executing this SQL command must have at least the following privileges:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{style:{textAlign:"left"},children:"Privilege"}),(0,a.jsx)(n.th,{style:{textAlign:"left"},children:"Object"}),(0,a.jsx)(n.th,{style:{textAlign:"left"},children:"Notes"})]})}),(0,a.jsx)(n.tbody,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{style:{textAlign:"left"},children:"LOAD_PRIV"}),(0,a.jsx)(n.td,{style:{textAlign:"left"},children:"Table"}),(0,a.jsx)(n.td,{style:{textAlign:"left"},children:"This operation can only be performed by users or roles who have the LOAD_PRIV privilege for the imported table."})]})})]}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Create a simple synchronization job"})}),"\n",(0,a.jsxs)(n.p,{children:["Create a synchronization job named ",(0,a.jsx)(n.code,{children:"job1"})," in the ",(0,a.jsx)(n.code,{children:"test_db"})," database that maps the MySQL source table ",(0,a.jsx)(n.code,{children:"mysql_db1.tbl1"})," to the Doris target table ",(0,a.jsx)(n.code,{children:"test_tbl"}),", connecting to a local Canal server."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'CREATE SYNC `test_db`.`job1`\n(\n  FROM `mysql_db1`.`tbl1` INTO `test_tbl`\n)\nFROM BINLOG\n(\n  "type" = "canal",\n  "canal.server.ip" = "127.0.0.1",\n  "canal.server.port" = "11111",\n  "canal.destination" = "example",\n  "canal.username" = "",\n  "canal.password" = ""\n);\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Create a synchronization job with multiple channels and explicit column mapping"})}),"\n",(0,a.jsxs)(n.p,{children:["Create a synchronization job named ",(0,a.jsx)(n.code,{children:"job1"})," in the ",(0,a.jsx)(n.code,{children:"test_db"})," database for multiple MySQL source tables with one-to-one mapping and explicitly specified column orders."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'CREATE SYNC `test_db`.`job1`\n(\n  FROM `mysql_db`.`t1` INTO `test1` (k1, k2, v1),\n  FROM `mysql_db`.`t2` INTO `test2` (k3, k4, v2)\n)\nFROM BINLOG\n(\n  "type" = "canal",\n  "canal.server.ip" = "xx.xxx.xxx.xx",\n  "canal.server.port" = "12111",\n  "canal.destination" = "example",\n  "canal.username" = "username",\n  "canal.password" = "password"\n);\n'})}),"\n"]}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return r},a:function(){return i}});var s=t(667294);let a={},l=s.createContext(a);function i(e){let n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);