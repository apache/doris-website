"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["969092"],{474010:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>s,metadata:()=>a,assets:()=>o,toc:()=>c,contentTitle:()=>r});var a=JSON.parse('{"id":"sql-manual/sql-reference/Data-Manipulation-Statements/Manipulation/UPDATE","title":"UPDATE","description":"UPDATE","source":"@site/versioned_docs/version-2.0/sql-manual/sql-reference/Data-Manipulation-Statements/Manipulation/UPDATE.md","sourceDirName":"sql-manual/sql-reference/Data-Manipulation-Statements/Manipulation","slug":"/sql-manual/sql-reference/Data-Manipulation-Statements/Manipulation/UPDATE","permalink":"/docs/2.0/sql-manual/sql-reference/Data-Manipulation-Statements/Manipulation/UPDATE","draft":false,"unlisted":false,"tags":[],"version":"2.0","frontMatter":{"title":"UPDATE","language":"en"},"sidebar":"docs","previous":{"title":"DELETE","permalink":"/docs/2.0/sql-manual/sql-reference/Data-Manipulation-Statements/Manipulation/DELETE"},"next":{"title":"EXPORT","permalink":"/docs/2.0/sql-manual/sql-reference/Data-Manipulation-Statements/Manipulation/EXPORT"}}'),l=t("785893"),i=t("250065");let s={title:"UPDATE",language:"en"},r=void 0,o={},c=[{value:"UPDATE",id:"update",level:2},{value:"Name",id:"name",level:3},{value:"Description",id:"description",level:3},{value:"Syntax",id:"syntax",level:4},{value:"Required Parameters",id:"required-parameters",level:4},{value:"Optional Parameters",id:"optional-parameters",level:4},{value:"Note",id:"note",level:4},{value:"Example",id:"example",level:3},{value:"Keywords",id:"keywords",level:3},{value:"Best Practice",id:"best-practice",level:3}];function d(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"update",children:"UPDATE"}),"\n",(0,l.jsx)(n.h3,{id:"name",children:"Name"}),"\n",(0,l.jsx)(n.p,{children:"UPDATE"}),"\n",(0,l.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"This statement is used to update the data. The UPDATE statement currently only supports the UNIQUE KEY model."}),"\n",(0,l.jsxs)(n.p,{children:["The UPDATE operation currently only supports updating the Value column. The update of the Key column can refer to ",(0,l.jsx)(n.a,{href:"/docs/2.0/ecosystem/flink-doris-connector#use-flink-cdc-to-update-key-column",children:"Using FlinkCDC to update Key column"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"syntax",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"UPDATE target_table [table_alias]\n    SET assignment_list\n    WHERE condition\n\nassignment_list:\n    assignment [, assignment] ...\n\nassignment:\n    col_name = value\n\nvalue:\n    {expr | DEFAULT}\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"UPDATE target_table [table_alias]\n    SET assignment_list\n    [ FROM additional_tables]\n    WHERE condition\n"})}),"\n",(0,l.jsx)(n.h4,{id:"required-parameters",children:"Required Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"target_table: The target table of the data to be updated. Can be of the form 'db_name.table_name'"}),"\n",(0,l.jsx)(n.li,{children:"assignment_list: The target column to be updated, in the format 'col_name = value, col_name = value'"}),"\n",(0,l.jsx)(n.li,{children:"where condition: the condition that is expected to be updated, an expression that returns true or false can be"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"optional-parameters",children:"Optional Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"table_alias: alias of table"}),"\n",(0,l.jsx)(n.li,{children:"FROM additional_tables: Specifies one or more tables to use for selecting rows to update or for setting new values. Note that if you want use target table here, you should give it a alias explicitly."}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"note",children:"Note"}),"\n",(0,l.jsx)(n.p,{children:"The current UPDATE statement only supports row updates on the UNIQUE KEY model."}),"\n",(0,l.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"test"})," table is a unique model table, which contains four columns: k1, k2, v1, v2. Where k1, k2 are keys, v1, v2 are values, and the aggregation method is Replace."]}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Update the v1 column in the 'test' table that satisfies the conditions k1 =1 , k2 =2 to 1"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"UPDATE test SET v1 = 1 WHERE k1=1 and k2=2;\n"})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsx)(n.li,{children:"Increment the v1 column of the k1=1 column in the 'test' table by 1"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"UPDATE test SET v1 = v1+1 WHERE k1=1;\n"})}),"\n",(0,l.jsxs)(n.ol,{start:"3",children:["\n",(0,l.jsxs)(n.li,{children:["use the result of ",(0,l.jsx)(n.code,{children:"t2"})," join ",(0,l.jsx)(n.code,{children:"t3"})," to update ",(0,l.jsx)(n.code,{children:"t1"})]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- create t1, t2, t3 tables\nCREATE TABLE t1\n  (id INT, c1 BIGINT, c2 STRING, c3 DOUBLE, c4 DATE)\nUNIQUE KEY (id)\nDISTRIBUTED BY HASH (id)\nPROPERTIES('replication_num'='1', \"function_column.sequence_col\" = \"c4\");\n\nCREATE TABLE t2\n  (id INT, c1 BIGINT, c2 STRING, c3 DOUBLE, c4 DATE)\nDISTRIBUTED BY HASH (id)\nPROPERTIES('replication_num'='1');\n\nCREATE TABLE t3\n  (id INT)\nDISTRIBUTED BY HASH (id)\nPROPERTIES('replication_num'='1');\n\n-- insert data\nINSERT INTO t1 VALUES\n  (1, 1, '1', 1.0, '2000-01-01'),\n  (2, 2, '2', 2.0, '2000-01-02'),\n  (3, 3, '3', 3.0, '2000-01-03');\n\nINSERT INTO t2 VALUES\n  (1, 10, '10', 10.0, '2000-01-10'),\n  (2, 20, '20', 20.0, '2000-01-20'),\n  (3, 30, '30', 30.0, '2000-01-30'),\n  (4, 4, '4', 4.0, '2000-01-04'),\n  (5, 5, '5', 5.0, '2000-01-05');\n\nINSERT INTO t3 VALUES\n  (1),\n  (4),\n  (5);\n\n-- update t1\nUPDATE t1\n  SET t1.c1 = t2.c1, t1.c3 = t2.c3 * 100\n  FROM t2 INNER JOIN t3 ON t2.id = t3.id\n  WHERE t1.id = t2.id;\n"})}),"\n",(0,l.jsx)(n.p,{children:"the expect result is only update the row where id = 1 in table t1"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+----+----+----+--------+------------+\n| id | c1 | c2 | c3     | c4         |\n+----+----+----+--------+------------+\n| 1  | 10 | 1  | 1000.0 | 2000-01-01 |\n| 2  | 2  | 2  |    2.0 | 2000-01-02 |\n| 3  | 3  | 3  |    3.0 | 2000-01-03 |\n+----+----+----+--------+------------+\n"})}),"\n",(0,l.jsx)(n.h3,{id:"keywords",children:"Keywords"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"UPDATE\n"})}),"\n",(0,l.jsx)(n.h3,{id:"best-practice",children:"Best Practice"})]})}function u(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return r},a:function(){return s}});var a=t(667294);let l={},i=a.createContext(l);function s(e){let n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);