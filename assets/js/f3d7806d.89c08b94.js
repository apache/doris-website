"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["786679"],{464401:function(e,n,t){t.r(n),t.d(n,{default:()=>h,frontMatter:()=>i,metadata:()=>r,assets:()=>d,toc:()=>l,contentTitle:()=>a});var r=JSON.parse('{"id":"install/deploy-on-kubernetes/integrated-storage-compute/cluster-operation","title":"Cluster Operation","description":"How to enter the container when the pod crashes","source":"@site/docs/install/deploy-on-kubernetes/integrated-storage-compute/cluster-operation.md","sourceDirName":"install/deploy-on-kubernetes/integrated-storage-compute","slug":"/install/deploy-on-kubernetes/integrated-storage-compute/cluster-operation","permalink":"/docs/dev/install/deploy-on-kubernetes/integrated-storage-compute/cluster-operation","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Cluster Operation","language":"en"},"sidebar":"docs","previous":{"title":"Access Cluster","permalink":"/docs/dev/install/deploy-on-kubernetes/integrated-storage-compute/access-cluster"},"next":{"title":"Install FoundationDB","permalink":"/docs/dev/install/deploy-on-kubernetes/separating-storage-compute/install-fdb"}}'),s=t("785893"),o=t("250065");let i={title:"Cluster Operation",language:"en"},a=void 0,d={},l=[{value:"How to enter the container when the pod crashes",id:"how-to-enter-the-container-when-the-pod-crashes",level:2},{value:"Start Debug mode",id:"start-debug-mode",level:3},{value:"Exit Debug mode",id:"exit-debug-mode",level:3},{value:"Upgrading doris cluster",id:"upgrading-doris-cluster",level:2},{value:"Things to note before upgrading",id:"things-to-note-before-upgrading",level:3},{value:"Upgrade operation",id:"upgrade-operation",level:3},{value:"Upgrade BE",id:"upgrade-be",level:4},{value:"Upgrade FE",id:"upgrade-fe",level:4},{value:"After the upgrade is completed",id:"after-the-upgrade-is-completed",level:3},{value:"Verify cluster node status",id:"verify-cluster-node-status",level:4},{value:"Restore cluster replica synchronization and balancing",id:"restore-cluster-replica-synchronization-and-balancing",level:4},{value:"Starting FE with <code>metadata_failure_recovery</code> Mode",id:"starting-fe-with-metadata_failure_recovery-mode",level:2},{value:"Starting in Recovery Mode in a Containerized Environment",id:"starting-in-recovery-mode-in-a-containerized-environment",level:3}];function c(e){let n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"how-to-enter-the-container-when-the-pod-crashes",children:"How to enter the container when the pod crashes"}),"\n",(0,s.jsxs)(n.p,{children:["In the k8s environment, the service will enter the ",(0,s.jsx)(n.code,{children:"CrashLoopBackOff"})," state due to some unexpected things. You can view the pod status and pod_name under the specified namespace through the ",(0,s.jsx)(n.code,{children:"kubectl get pod --namespace ${namespace}"})," command."]}),"\n",(0,s.jsxs)(n.p,{children:["In this state, the cause of the service problem cannot be determined simply by using the describe and logs commands. When the service enters the ",(0,s.jsx)(n.code,{children:"CrashLoopBackOff"})," state, there needs to be a mechanism that allows the pod deploying the service to enter the ",(0,s.jsx)(n.code,{children:"running"})," state so that users can enter the container for debugging through exec."]}),"\n",(0,s.jsxs)(n.p,{children:["Doris Operator provides a ",(0,s.jsx)(n.code,{children:"Debug"})," running mode. The following describes how to enter Debug mode for manual debugging when the service enters ",(0,s.jsx)(n.code,{children:"CrashLoopBackOff"}),", and how to return to normal startup state after solving the problem."]}),"\n",(0,s.jsx)(n.h3,{id:"start-debug-mode",children:"Start Debug mode"}),"\n",(0,s.jsxs)(n.p,{children:["When a pod of the service enters CrashLoopBackOff or cannot be started normally during normal operation, take the following steps to put the service into ",(0,s.jsx)(n.code,{children:"Debug"})," mode and manually start the service to find the problem."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Use the following command to add annotation to the pod with problems."})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl annotate pod ${pod_name} --namespace ${namespace} apache.com.doris/runmode=debug\n"})}),"\n",(0,s.jsxs)(n.p,{children:["When the service is restarted next time, the service will detect the annotation that identifies the ",(0,s.jsx)(n.code,{children:"Debug"})," mode startup, and will enter the ",(0,s.jsx)(n.code,{children:"Debug"})," mode to start, and the pod status will be ",(0,s.jsx)(n.code,{children:"running"}),"."]}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.strong,{children:["When the service enters ",(0,s.jsx)(n.code,{children:"Debug"})," mode, the pod of the service is displayed in a normal state. Users can enter the inside of the pod through the following command"]})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl --namespace ${namespace} exec -ti ${pod_name} bash\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.strong,{children:["Manually start the service under ",(0,s.jsx)(n.code,{children:"Debug"}),". When the user enters the pod, manually execute the ",(0,s.jsx)(n.code,{children:"start_xx.sh"})," script by modifying the port of the corresponding configuration file. The script directory is under ",(0,s.jsx)(n.code,{children:"/opt/apache-doris/xx/bin"}),"."]})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["FE needs to modify ",(0,s.jsx)(n.code,{children:"query_port"}),", BE needs to modify ",(0,s.jsx)(n.code,{children:"heartbeat_service_port"}),"\nThe main purpose is to avoid misleading the flow by accessing the crashed node through service in ",(0,s.jsx)(n.code,{children:"Debug"})," mode."]}),"\n",(0,s.jsx)(n.h3,{id:"exit-debug-mode",children:"Exit Debug mode"}),"\n",(0,s.jsxs)(n.p,{children:["When the service locates the problem, it needs to exit the ",(0,s.jsx)(n.code,{children:"Debug"})," operation. At this time, you only need to delete the corresponding pod according to the following command, and the service will start in the normal mode."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl delete pod ${pod_name} --namespace ${namespace}\n"})}),"\n",(0,s.jsxs)(n.admonition,{title:"Tip",type:"tip",children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"After entering the pod, you need to modify the port information of the configuration file before you can manually start the corresponding Doris component."})}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["FE needs to modify the ",(0,s.jsx)(n.code,{children:"query_port=9030"})," configuration with the default path: ",(0,s.jsx)(n.code,{children:"/opt/apache-doris/fe/conf/fe.conf"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["BE needs to modify the ",(0,s.jsx)(n.code,{children:"heartbeat_service_port=9050"})," configuration with the default path: ",(0,s.jsx)(n.code,{children:"/opt/apache-doris/be/conf/be.conf"}),"."]}),"\n"]})]}),"\n",(0,s.jsx)(n.h2,{id:"upgrading-doris-cluster",children:"Upgrading doris cluster"}),"\n",(0,s.jsx)(n.p,{children:"This document describes how to use updates to upgrade an Apache Doris cluster based on a Doris Operator deployment."}),"\n",(0,s.jsxs)(n.p,{children:["Similar to conventionally deployed cluster upgrades, Doris clusters deployed by Doris Operator still require rolling upgrades from BE to FE nodes. Doris Operator is based on Kubernetes'  ",(0,s.jsx)(n.a,{href:"https://kubernetes.io/docs/tutorials/kubernetes-basics/update/update-intro/",children:"Performing a Rolling Update"})," provides rolling upgrade capabilities."]}),"\n",(0,s.jsx)(n.h3,{id:"things-to-note-before-upgrading",children:"Things to note before upgrading"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"It is recommended that the upgrade operation be performed during off-peak periods."}),"\n",(0,s.jsx)(n.li,{children:"During the rolling upgrade process, the connection to the closed node will fail, causing the request to fail. For this type of business, it is recommended to add retry capabilities to the client."}),"\n",(0,s.jsxs)(n.li,{children:["Before upgrading, you can read the ",(0,s.jsx)(n.a,{href:"https://doris.apache.org/docs/dev/admin-manual/cluster-management/upgrade",children:"General Upgrade Manual"})," to help you understand some principles and precautions during the upgrade. ."]}),"\n",(0,s.jsx)(n.li,{children:"The compatibility of data and metadata cannot be verified before upgrading. Therefore, cluster upgrade must avoid single copy of data and single FE FOLLOWER node in the cluster."}),"\n",(0,s.jsx)(n.li,{children:"Nodes will be restarted during the upgrade process, so unnecessary cluster balancing and replica repair logic may be triggered. Please shut it down first with the following command."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mysql",children:'admin set frontend config("disable_balance" = "true");\nadmin set frontend config("disable_colocate_balance" = "true");\nadmin set frontend config("disable_tablet_scheduler" = "true");\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["When upgrading Doris, please follow the principle of not upgrading across two or more key node versions. If you want to upgrade across multiple key node versions, upgrade to the latest key node version first, and then upgrade in sequence. If it is a non-key node version, You can ignore skipping. For details, please refer to ",(0,s.jsx)(n.a,{href:"https://doris.apache.org/docs/dev/admin-manual/cluster-management/upgrade/#doris-release-notes",children:"Upgrade Version Instructions"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"upgrade-operation",children:"Upgrade operation"}),"\n",(0,s.jsx)(n.p,{children:"The order of node types in the upgrade process is as follows. If a certain type of node does not exist, it will be skipped:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"   cn/be -> fe -> broker\n"})}),"\n",(0,s.jsxs)(n.p,{children:["It is recommended to modify the ",(0,s.jsx)(n.code,{children:"image"})," of the corresponding cluster components in sequence and then apply the configuration. After the current type of component is fully upgraded and the status returns to normal, the rolling upgrade of the next type of node can be performed."]}),"\n",(0,s.jsx)(n.h4,{id:"upgrade-be",children:"Upgrade BE"}),"\n",(0,s.jsxs)(n.p,{children:["If you retain the cluster's crd (Doris Operator defines the abbreviation of ",(0,s.jsx)(n.code,{children:"DorisCluster"})," type resource name) file, you can upgrade by modifying the configuration file and running the ",(0,s.jsx)(n.code,{children:"kubectl apply"})," command."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Modify ",(0,s.jsx)(n.code,{children:"spec.beSpec.image"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Change ",(0,s.jsx)(n.code,{children:"apache/doris:be-2.1.8"})," to ",(0,s.jsx)(n.code,{children:"apache/doris:be-2.1.9"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ vim doriscluster-sample.yaml\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Save the changes and apply the changes to be upgraded:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl apply -f doriscluster-sample.yaml -n doris\n"})}),"\n",(0,s.jsxs)(n.p,{children:["It can also be modified directly through ",(0,s.jsx)(n.code,{children:"kubectl edit dcr"}),"."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Check the dcr list under namespace ",(0,s.jsx)(n.code,{children:"doris"})," to obtain the ",(0,s.jsx)(n.code,{children:"cluster_name"})," that needs to be updated."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl get dcr -n doris\nNAME                  FESTATUS    BESTATUS    CNSTATUS\ndoriscluster-sample   available   available\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Modify, save and take effect"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl edit dcr doriscluster-sample -n doris\n"})}),"\n",(0,s.jsxs)(n.p,{children:["After entering the text editor, you will find ",(0,s.jsx)(n.code,{children:"spec.beSpec.image"})," and change ",(0,s.jsx)(n.code,{children:"apache/doris:be-2.1.8"})," to ",(0,s.jsx)(n.code,{children:"apache/doris:be-2.1.9"})]}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"View the upgrade process and results:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl get pod -n doris\n"})}),"\n",(0,s.jsx)(n.p,{children:"When all Pods are rebuilt and enter the Running state, the upgrade is complete."}),"\n",(0,s.jsx)(n.h4,{id:"upgrade-fe",children:"Upgrade FE"}),"\n",(0,s.jsxs)(n.p,{children:["If you retain the cluster's crd (Doris Operator defines the abbreviation of the ",(0,s.jsx)(n.code,{children:"DorisCluster"})," type resource name) file, you can upgrade by modifying the configuration file and running the ",(0,s.jsx)(n.code,{children:"kubectl apply"})," command."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Modify ",(0,s.jsx)(n.code,{children:"spec.feSpec.image"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Change ",(0,s.jsx)(n.code,{children:"apache/doris:fe-2.1.8"})," to ",(0,s.jsx)(n.code,{children:"apache/doris:fe-2.1.9"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ vim doriscluster-sample.yaml\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Save the changes and apply the changes to be upgraded:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl apply -f doriscluster-sample.yaml -n doris\n"})}),"\n",(0,s.jsxs)(n.p,{children:["It can also be modified directly through ",(0,s.jsx)(n.code,{children:"kubectl edit dcr"}),"."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Modify, save and take effect"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl edit dcr doriscluster-sample -n doris\n"})}),"\n",(0,s.jsxs)(n.p,{children:["After entering the text editor, you will find ",(0,s.jsx)(n.code,{children:"spec.feSpec.image"})," and change ",(0,s.jsx)(n.code,{children:"apache/doris:fe-2.1.8"})," to ",(0,s.jsx)(n.code,{children:"apache/doris:fe-2.1.9"})]}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"View the upgrade process and results:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl get pod -n doris\n"})}),"\n",(0,s.jsx)(n.p,{children:"When all Pods are rebuilt and enter the Running state, the upgrade is complete."}),"\n",(0,s.jsx)(n.h3,{id:"after-the-upgrade-is-completed",children:"After the upgrade is completed"}),"\n",(0,s.jsx)(n.h4,{id:"verify-cluster-node-status",children:"Verify cluster node status"}),"\n",(0,s.jsxs)(n.p,{children:["Access Doris through ",(0,s.jsx)(n.code,{children:"mysql-client"})," through the method provided in the ",(0,s.jsx)(n.a,{href:"./access-cluster",children:"Access Doris Cluster"})," document."]}),"\n",(0,s.jsxs)(n.p,{children:["Use SQL such as ",(0,s.jsx)(n.code,{children:"show frontends"})," and ",(0,s.jsx)(n.code,{children:"show backends"})," to view the version and status of each component."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mysql",children:"mysql> show frontends\\G;\n*************************** 1. row ***************************\n              Name: fe_13c132aa_3281_4f4f_97e8_655d01287425\n              Host: doriscluster-sample-fe-0.doriscluster-sample-fe-internal.doris.svc.cluster.local\n       EditLogPort: 9010\n          HttpPort: 8030\n         QueryPort: 9030\n           RpcPort: 9020\nArrowFlightSqlPort: -1\n              Role: FOLLOWER\n          IsMaster: false\n         ClusterId: 1779160761\n              Join: true\n             Alive: true\n ReplayedJournalId: 2422\n     LastStartTime: 2024-02-19 06:38:47\n     LastHeartbeat: 2024-02-19 09:31:33\n          IsHelper: true\n            ErrMsg:\n           Version: doris-2.1.0\n  CurrentConnected: Yes\n*************************** 2. row ***************************\n              Name: fe_f1a9d008_d110_4780_8e60_13d392faa54e\n              Host: doriscluster-sample-fe-2.doriscluster-sample-fe-internal.doris.svc.cluster.local\n       EditLogPort: 9010\n          HttpPort: 8030\n         QueryPort: 9030\n           RpcPort: 9020\nArrowFlightSqlPort: -1\n              Role: FOLLOWER\n          IsMaster: true\n         ClusterId: 1779160761\n              Join: true\n             Alive: true\n ReplayedJournalId: 2423\n     LastStartTime: 2024-02-19 06:37:35\n     LastHeartbeat: 2024-02-19 09:31:33\n          IsHelper: true\n            ErrMsg:\n           Version: doris-2.1.0\n  CurrentConnected: No\n*************************** 3. row ***************************\n              Name: fe_e42bf9da_006f_4302_b861_770d2c955a47\n              Host: doriscluster-sample-fe-1.doriscluster-sample-fe-internal.doris.svc.cluster.local\n       EditLogPort: 9010\n          HttpPort: 8030\n         QueryPort: 9030\n           RpcPort: 9020\nArrowFlightSqlPort: -1\n              Role: FOLLOWER\n          IsMaster: false\n         ClusterId: 1779160761\n              Join: true\n             Alive: true\n ReplayedJournalId: 2422\n     LastStartTime: 2024-02-19 06:38:17\n     LastHeartbeat: 2024-02-19 09:31:33\n          IsHelper: true\n            ErrMsg:\n           Version: doris-2.1.0\n  CurrentConnected: No\n3 rows in set (0.02 sec)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If the ",(0,s.jsx)(n.code,{children:"Alive"})," status of the FE node is true and the ",(0,s.jsx)(n.code,{children:"Version"})," value is the new version, the FE node is upgraded successfully."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mysql",children:'mysql> show backends\\G;\n*************************** 1. row ***************************\n              BackendId: 10002\n                   Host: doriscluster-sample-be-0.doriscluster-sample-be-internal.doris.svc.cluster.local\n          HeartbeatPort: 9050\n                 BePort: 9060\n               HttpPort: 8040\n               BrpcPort: 8060\n     ArrowFlightSqlPort: -1\n          LastStartTime: 2024-02-19 06:37:56\n          LastHeartbeat: 2024-02-19 09:32:43\n                  Alive: true\n   SystemDecommissioned: false\n              TabletNum: 14\n       DataUsedCapacity: 0.000\n     TrashUsedCapcacity: 0.000\n          AvailCapacity: 12.719 GB\n          TotalCapacity: 295.167 GB\n                UsedPct: 95.69 %\n         MaxDiskUsedPct: 95.69 %\n     RemoteUsedCapacity: 0.000\n                    Tag: {"location" : "default"}\n                 ErrMsg:\n                Version: doris-2.1.0\n                 Status: {"lastSuccessReportTabletsTime":"2024-02-19 09:31:48","lastStreamLoadTime":-1,"isQueryDisabled":false,"isLoadDisabled":false}\nHeartbeatFailureCounter: 0\n               NodeRole: mix\n*************************** 2. row ***************************\n              BackendId: 10003\n                   Host: doriscluster-sample-be-1.doriscluster-sample-be-internal.doris.svc.cluster.local\n          HeartbeatPort: 9050\n                 BePort: 9060\n               HttpPort: 8040\n               BrpcPort: 8060\n     ArrowFlightSqlPort: -1\n          LastStartTime: 2024-02-19 06:37:35\n          LastHeartbeat: 2024-02-19 09:32:43\n                  Alive: true\n   SystemDecommissioned: false\n              TabletNum: 8\n       DataUsedCapacity: 0.000\n     TrashUsedCapcacity: 0.000\n          AvailCapacity: 12.719 GB\n          TotalCapacity: 295.167 GB\n                UsedPct: 95.69 %\n         MaxDiskUsedPct: 95.69 %\n     RemoteUsedCapacity: 0.000\n                    Tag: {"location" : "default"}\n                 ErrMsg:\n                Version: doris-2.1.0\n                 Status: {"lastSuccessReportTabletsTime":"2024-02-19 09:31:43","lastStreamLoadTime":-1,"isQueryDisabled":false,"isLoadDisabled":false}\nHeartbeatFailureCounter: 0\n               NodeRole: mix\n*************************** 3. row ***************************\n              BackendId: 11024\n                   Host: doriscluster-sample-be-2.doriscluster-sample-be-internal.doris.svc.cluster.local\n          HeartbeatPort: 9050\n                 BePort: 9060\n               HttpPort: 8040\n               BrpcPort: 8060\n     ArrowFlightSqlPort: -1\n          LastStartTime: 2024-02-19 08:50:36\n          LastHeartbeat: 2024-02-19 09:32:43\n                  Alive: true\n   SystemDecommissioned: false\n              TabletNum: 0\n       DataUsedCapacity: 0.000\n     TrashUsedCapcacity: 0.000\n          AvailCapacity: 12.719 GB\n          TotalCapacity: 295.167 GB\n                UsedPct: 95.69 %\n         MaxDiskUsedPct: 95.69 %\n     RemoteUsedCapacity: 0.000\n                    Tag: {"location" : "default"}\n                 ErrMsg:\n                Version: doris-2.1.0\n                 Status: {"lastSuccessReportTabletsTime":"2024-02-19 09:32:04","lastStreamLoadTime":-1,"isQueryDisabled":false,"isLoadDisabled":false}\nHeartbeatFailureCounter: 0\n               NodeRole: mix\n3 rows in set (0.01 sec)\n'})}),"\n",(0,s.jsxs)(n.p,{children:["If the ",(0,s.jsx)(n.code,{children:"Alive"})," status of the BE node is true and the ",(0,s.jsx)(n.code,{children:"Version"})," value is the new version, the BE node is upgraded successfully."]}),"\n",(0,s.jsx)(n.h4,{id:"restore-cluster-replica-synchronization-and-balancing",children:"Restore cluster replica synchronization and balancing"}),"\n",(0,s.jsx)(n.p,{children:"After confirming that the status of each node is correct, execute the following SQL to restore cluster balancing and replica repair:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'admin set frontend config("disable_balance" = "false");\nadmin set frontend config("disable_colocate_balance" = "false");\nadmin set frontend config("disable_tablet_scheduler" = "false");\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"starting-fe-with-metadata_failure_recovery-mode",children:["Starting FE with ",(0,s.jsx)(n.code,{children:"metadata_failure_recovery"})," Mode"]}),"\n",(0,s.jsxs)(n.p,{children:["When the Frontend (FE) service is unable to elect a leader and becomes unavailable, you can recover the cluster by selecting the node with the highest ",(0,s.jsx)(n.code,{children:"VLSN"})," and force-starting it as the master using the recovery mechanism."]}),"\n",(0,s.jsx)(n.h3,{id:"starting-in-recovery-mode-in-a-containerized-environment",children:"Starting in Recovery Mode in a Containerized Environment"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Identify the node with the highest ",(0,s.jsx)(n.code,{children:"VLSN"}),(0,s.jsx)(n.br,{}),"\nIn Kubernetes, each time an FE Pod starts, it outputs the last 10 ",(0,s.jsx)(n.code,{children:"VLSN"})," records of the node. An example is shown below:\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"the annotations value:\nthe value not equal!  debug\n/opt/apache-doris/fe/doris-meta/bdb/je.info.0:19:2025-08-05 03:42:47.650 UTC INFO [fe_f35530c4_3ff1_48fe_80d1_cc8e32dbc942] Replica-feeder fe_d8763579_92da_4d72_8c58_4e62b88bdff0 start stream at VLSN: 30\n/opt/apache-doris/fe/doris-meta/bdb/je.info.0:21:2025-08-05 03:42:47.659 UTC INFO [fe_f35530c4_3ff1_48fe_80d1_cc8e32dbc942] Replica initialization completed. Replica VLSN: -1  Heartbeat master commit VLSN: 49  DTVLSN:0 Replica VLSN delta: 50\n[Tue Aug  5 06:14:05 UTC 2025] start with meta run start_fe.sh with additional options: '--console'\n"})}),"\nIn this example, the highest ",(0,s.jsx)(n.code,{children:"VLSN"})," on the current node is 30, as indicated by the log prefix ",(0,s.jsx)(n.code,{children:"start stream at VLSN:"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Designate the Pod with the highest ",(0,s.jsx)(n.code,{children:"VLSN"})," for recovery",(0,s.jsx)(n.br,{}),"\nAfter identifying the Pod corresponding to the node with the highest ",(0,s.jsx)(n.code,{children:"VLSN"}),", annotate it to enable the recovery mechanism:\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'kubectl annotate pod {podName} "selectdb.com.doris/recovery=true"\n'})}),"\nUpon restarting, the Pod will automatically append the ",(0,s.jsx)(n.code,{children:"--metadata_failure_recovery"})," flag to its startup command and start in recovery mode."]}),"\n",(0,s.jsxs)(n.li,{children:["Remove the annotation after recovery",(0,s.jsx)(n.br,{}),"\nOnce the FE service is running normally, make sure to remove the annotation added in Step 2 to avoid unexpected behavior during future restarts."]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"Note",type:"tip",children:(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"After adding the annotation, do not restart the Pod using kubectl delete pod, as this will remove the annotation. Instead, allow kubelet to restart it automatically or manually kill the process inside the container."}),"\n",(0,s.jsxs)(n.li,{children:["Starting FE in ",(0,s.jsx)(n.code,{children:"metadata_failure_recovery"})," mode can take a long time due to extensive log replay. Before proceeding, increase the FE service's ",(0,s.jsx)(n.a,{href:"/docs/dev/install/deploy-on-kubernetes/integrated-storage-compute/install-config-cluster#startup-probe-timeout",children:"startup probe timeout"}),", and delete all FE Pods before initiating the recovery startup."]}),"\n"]})})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return i}});var r=t(667294);let s={},o=r.createContext(s);function i(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);