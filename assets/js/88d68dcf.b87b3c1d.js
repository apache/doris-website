"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["779417"],{768727:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>a,metadata:()=>s,assets:()=>c,toc:()=>o,contentTitle:()=>l});var s=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/date-time-functions/second-timestamp","title":"SECOND_TIMESTAMP","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/date-time-functions/second-timestamp.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/date-time-functions","slug":"/sql-manual/sql-functions/scalar-functions/date-time-functions/second-timestamp","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/second-timestamp","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"SECOND_TIMESTAMP","language":"en"}}'),i=t("785893"),r=t("250065");let a={title:"SECOND_TIMESTAMP",language:"en"},l=void 0,c={},o=[{value:"Description",id:"description",level:2},{value:"Alias",id:"alias",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function d(e){let n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The SECOND_TIMESTAMP function converts an input datetime value to a Unix timestamp (in seconds), which represents the total number of seconds from 1970-01-01 00:00:00 UTC to the specified datetime. This function supports processing DATETIME values, and the result will be adjusted for the machine's timezone offset. For timezone information, please refer to ",(0,i.jsx)(n.a,{href:"../../../../admin-manual/cluster-management/time-zone",children:"Timezone Management"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"alias",children:"Alias"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"UNIX_TIMESTAMP()"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SECOND_TIMESTAMP(<datetime>)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<datetime>"})}),(0,i.jsxs)(n.td,{children:["Required. The input DATETIME value representing the datetime to be converted to Unix timestamp. Supports datetime type input. For specific datetime formats, please refer to ",(0,i.jsx)(n.a,{href:"../../../../../docs/sql-manual/basic-element/sql-data-types/conversion/datetime-conversion",children:"datetime conversion"})]})]})})]}),"\n",(0,i.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsx)(n.p,{children:"Returns a BIGINT type representing the Unix timestamp (in seconds) in the current timezone corresponding to the input datetime."}),"\n",(0,i.jsx)(n.p,{children:"Special cases:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If the input is a DATE type (containing only year, month, day), the time portion defaults to 00:00:00"}),"\n",(0,i.jsx)(n.li,{children:"If the input datetime is earlier than 1970-01-01 00:00:00 UTC, returns a negative timestamp"}),"\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"<datetime>"})," is NULL, returns NULL"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"--input init datetime\nSELECT SECOND_TIMESTAMP('1970-01-01 00:00:00 UTC') AS result;\n+--------+\n| result |\n+--------+\n|      0 |\n+--------+\n\n-- DATETIME type to timestamp\nSELECT SECOND_TIMESTAMP('2025-01-23 12:34:56') AS result;\n+------------+\n| result     |\n+------------+\n| 1737606896 |\n+------------+\n\n-- DATE type (default time is 00:00:00)\nSELECT SECOND_TIMESTAMP('2023-01-01') AS result;\n+------------+\n| result     |\n+------------+\n| 1672502400 |\n+------------+\n\n-- Date earlier than 1970-01-01 (returns negative number)\nSELECT SECOND_TIMESTAMP('1964-10-31 23:59:59') AS result;\n+------------+\n| result     |\n+------------+\n| -163065601 |\n+------------+\n\n-- DATETIME with microseconds (microseconds ignored)\nSELECT SECOND_TIMESTAMP('2023-07-13 22:28:18.456789') AS result;\n+------------+\n| result     |\n+------------+\n| 1689258498 |\n+------------+\n\n-- Input is NULL (returns NULL)\nSELECT SECOND_TIMESTAMP(NULL) AS result;\n+--------+\n| result |\n+--------+\n| NULL   |\n+--------+\n"})})]})}function u(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return a}});var s=t(667294);let i={},r=s.createContext(i);function a(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);