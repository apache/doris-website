"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["217321"],{455382:function(e,n,t){t.r(n),t.d(n,{default:()=>d,frontMatter:()=>r,metadata:()=>s,assets:()=>o,toc:()=>c,contentTitle:()=>l});var s=JSON.parse('{"id":"sql-manual/sql-functions/aggregate-functions/quantile-union","title":"QUANTILE_UNION","description":"Description","source":"@site/versioned_docs/version-3.x/sql-manual/sql-functions/aggregate-functions/quantile-union.md","sourceDirName":"sql-manual/sql-functions/aggregate-functions","slug":"/sql-manual/sql-functions/aggregate-functions/quantile-union","permalink":"/docs/3.x/sql-manual/sql-functions/aggregate-functions/quantile-union","draft":false,"unlisted":false,"tags":[],"version":"3.x","frontMatter":{"title":"QUANTILE_UNION","language":"en"},"sidebar":"docs","previous":{"title":"PERCENTILE_APPROX_WEIGHTED","permalink":"/docs/3.x/sql-manual/sql-functions/aggregate-functions/percentile_approx_weighted"},"next":{"title":"REGR_INTERCEPT","permalink":"/docs/3.x/sql-manual/sql-functions/aggregate-functions/regr_intercept"}}'),i=t("785893"),a=t("250065");let r={title:"QUANTILE_UNION",language:"en"},l=void 0,o={},c=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Example",id:"example",level:2}];function u(e){let n={code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"QUANTILE_UNION"})," function is used to merge intermediate results from multiple quantile calculations. This function typically works in conjunction with ",(0,i.jsx)(n.code,{children:"QUANTILE_STATE"})," and is particularly useful in scenarios requiring multi-stage quantile calculations."]}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"QUANTILE_UNION(<query_state>)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<query_state>"})}),(0,i.jsxs)(n.td,{children:["The intermediate state generated by the ",(0,i.jsx)(n.code,{children:"TO_QUANTILE_STATE"})," function."]})]})})]}),"\n",(0,i.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsxs)(n.p,{children:["Returns an aggregation state that can be used for further quantile calculations. The result of this function remains a ",(0,i.jsx)(n.code,{children:"QUANTILE_STATE"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Create sample table\nCREATE TABLE response_times (\n    request_id INT,\n    response_time DOUBLE,\n    region STRING\n) DUPLICATE KEY(request_id)\nDISTRIBUTED BY HASH(request_id) BUCKETS AUTO\nPROPERTIES (\n    \"replication_allocation\" = \"tag.location.default: 1\"\n);\n\n-- Insert sample data\nINSERT INTO response_times VALUES\n(1, 10.5, 'east'),\n(2, 15.2, 'east'),\n(3, 20.1, 'west'),\n(4, 25.8, 'east'),\n(5, 30.3, 'west'),\n(6, 35.7, 'east'),\n(7, 40.2, 'west'),\n(8, 45.9, 'east'),\n(9, 50.4, 'west'),\n(10, 100.6, 'east');\n\n-- Calculate 50th percentile of response times by region\nSELECT \n    region,\n    QUANTILE_PERCENT(\n        QUANTILE_UNION(\n            TO_QUANTILE_STATE(response_time, 2048)\n        ),\n        0.5\n    ) AS median_response_time\nFROM response_times\nGROUP BY region;\n\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"+--------+----------------------+\n| region | median_response_time |\n+--------+----------------------+\n| west   |                35.25 |\n| east   |                30.75 |\n+--------+----------------------+\n"})})]})}function d(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return r}});var s=t(667294);let i={},a=s.createContext(i);function r(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);