"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["85768"],{606375:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>r,metadata:()=>s,assets:()=>c,toc:()=>o,contentTitle:()=>a});var s=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/date-time-functions/milliseconds-sub","title":"MILLISECONDS_SUB","description":"Description","source":"@site/versioned_docs/version-3.x/sql-manual/sql-functions/scalar-functions/date-time-functions/milliseconds-sub.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/date-time-functions","slug":"/sql-manual/sql-functions/scalar-functions/date-time-functions/milliseconds-sub","permalink":"/docs/3.x/sql-manual/sql-functions/scalar-functions/date-time-functions/milliseconds-sub","draft":false,"unlisted":false,"tags":[],"version":"3.x","frontMatter":{"title":"MILLISECONDS_SUB","language":"en"},"sidebar":"docs","previous":{"title":"MILLISECONDS_DIFF","permalink":"/docs/3.x/sql-manual/sql-functions/scalar-functions/date-time-functions/milliseconds-diff"},"next":{"title":"MINUTE","permalink":"/docs/3.x/sql-manual/sql-functions/scalar-functions/date-time-functions/minute"}}'),i=t("785893"),l=t("250065");let r={title:"MILLISECONDS_SUB",language:"en"},a=void 0,c={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Example",id:"example",level:2}];function d(e){let n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"Subtracts a specified number of milliseconds from a datetime value and returns a new datetime value."}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"MILLISECONDS_SUB(<basetime>, <delta>)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<basetime>"})}),(0,i.jsx)(n.td,{children:"The input datetime value, of type DATETIMEV2"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<delta>"})}),(0,i.jsx)(n.td,{children:"The number of milliseconds to subtract, of type INT; 1 second = 1,000 milliseconds = 1,000,000 microseconds"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsx)(n.p,{children:"Returns a value of type DATETIMEV2, representing the time value after subtracting the specified number of milliseconds from the input datetime. The precision of the return value is the same as that of the input parameter basetime."}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT MILLISECONDS_SUB('2023-09-08 16:02:08.435123', 1);\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"+--------------------------------------------------------------------------+\n| milliseconds_sub(cast('2023-09-08 16:02:08.435123' as DATETIMEV2(6)), 1) |\n+--------------------------------------------------------------------------+\n| 2023-09-08 16:02:08.434123                                               |\n+--------------------------------------------------------------------------+\n1 row in set (0.11 sec)\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Note:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"In the example, after subtracting 1 millisecond, the time decreases from .435123 to .434123."}),"\n",(0,i.jsx)(n.li,{children:"1 millisecond equals 1000 microseconds."}),"\n",(0,i.jsx)(n.li,{children:"The function's result is dependent on the precision of the input time; the example uses a precision of 6 decimal places."}),"\n",(0,i.jsx)(n.li,{children:"The result retains microsecond-level precision."}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return r}});var s=t(667294);let i={},l=s.createContext(i);function r(e){let n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);