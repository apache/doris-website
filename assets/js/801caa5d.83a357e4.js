"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["233458"],{586751:function(e,t,n){n.r(t),n.d(t,{default:()=>h,frontMatter:()=>i,metadata:()=>o,assets:()=>c,toc:()=>a,contentTitle:()=>d});var o=JSON.parse('{"id":"install/cluster-deployment/k8s-deploy/debug-crash","title":"How to enter the container when the service crashes","description":"In the k8s environment, the service will enter the CrashLoopBackOff state due to some unexpected things. You can view the pod status and pod_name under the specified namespace through the kubectl get pod --namespace $ command.","source":"@site/versioned_docs/version-2.0/install/cluster-deployment/k8s-deploy/debug-crash.md","sourceDirName":"install/cluster-deployment/k8s-deploy","slug":"/install/cluster-deployment/k8s-deploy/debug-crash","permalink":"/docs/2.0/install/cluster-deployment/k8s-deploy/debug-crash","draft":false,"unlisted":false,"tags":[],"version":"2.0","frontMatter":{"title":"How to enter the container when the service crashes","language":"en"},"sidebar":"docs","previous":{"title":"Service expansion and contraction","permalink":"/docs/2.0/install/cluster-deployment/k8s-deploy/expansion-and-contraction"},"next":{"title":"Deploying on AWS","permalink":"/docs/2.0/install/cluster-deployment/doris-on-aws"}}'),s=n("785893"),r=n("250065");let i={title:"How to enter the container when the service crashes",language:"en"},d=void 0,c={},a=[{value:"Start Debug mode",id:"start-debug-mode",level:2},{value:"Exit Debug mode",id:"exit-debug-mode",level:2},{value:"Notes",id:"notes",level:2}];function l(e){let t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["In the k8s environment, the service will enter the ",(0,s.jsx)(t.code,{children:"CrashLoopBackOff"})," state due to some unexpected things. You can view the pod status and pod_name under the specified namespace through the ",(0,s.jsx)(t.code,{children:"kubectl get pod --namespace ${namespace}"})," command."]}),"\n",(0,s.jsxs)(t.p,{children:["In this state, the cause of the service problem cannot be determined simply by using the describe and logs commands. When the service enters the ",(0,s.jsx)(t.code,{children:"CrashLoopBackOff"})," state, there needs to be a mechanism that allows the pod deploying the service to enter the ",(0,s.jsx)(t.code,{children:"running"})," state so that users can enter the container for debugging through exec."]}),"\n",(0,s.jsxs)(t.p,{children:["doris-operator provides a ",(0,s.jsx)(t.code,{children:"debug"})," running mode. In essence, the debug process occupies the active detection port of the corresponding node, bypasses the k8s active detection mechanism, and creates a smoothly running container environment to facilitate users to enter and locate problems."]}),"\n",(0,s.jsxs)(t.p,{children:["The following describes how to enter debug mode for manual debugging when the service enters ",(0,s.jsx)(t.code,{children:"CrashLoopBackOff"}),", and how to return to normal startup state after solving the problem."]}),"\n",(0,s.jsx)(t.h2,{id:"start-debug-mode",children:"Start Debug mode"}),"\n",(0,s.jsxs)(t.p,{children:["When a pod of the service enters CrashLoopBackOff or cannot be started normally during normal operation, take the following steps to put the service into ",(0,s.jsx)(t.code,{children:"debug"})," mode and manually start the service to find the problem."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"1.Use the following command to add annotation to the pod with problems."})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"$ kubectl annotate pod ${pod_name} --namespace ${namespace} selectdb.com.doris/runmode=debug\n"})}),"\n",(0,s.jsxs)(t.p,{children:["When the service is restarted next time, the service will detect the annotation that identifies the ",(0,s.jsx)(t.code,{children:"debug"})," mode startup, and will enter the ",(0,s.jsx)(t.code,{children:"debug"})," mode to start, and the pod status will be ",(0,s.jsx)(t.code,{children:"running"}),"."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.strong,{children:["2.When the service enters ",(0,s.jsx)(t.code,{children:"debug"})," mode, the pod of the service is displayed in a normal state. Users can enter the inside of the pod through the following command"]})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"$ kubectl --namespace ${namespace} exec -ti ${pod_name} bash\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.strong,{children:["3. Manually start the service under ",(0,s.jsx)(t.code,{children:"debug"}),". When the user enters the pod, manually execute the ",(0,s.jsx)(t.code,{children:"start_xx.sh"})," script by modifying the port of the corresponding configuration file. The script directory is under ",(0,s.jsx)(t.code,{children:"/opt/apache-doris/xx/bin"}),"."]})}),"\n",(0,s.jsxs)(t.p,{children:["FE needs to modify ",(0,s.jsx)(t.code,{children:"query_port"}),", BE needs to modify ",(0,s.jsx)(t.code,{children:"heartbeat_service_port"}),"\nThe main purpose is to avoid misleading the flow by accessing the crashed node through service in ",(0,s.jsx)(t.code,{children:"debug"})," mode."]}),"\n",(0,s.jsx)(t.h2,{id:"exit-debug-mode",children:"Exit Debug mode"}),"\n",(0,s.jsxs)(t.p,{children:["When the service locates the problem, it needs to exit the ",(0,s.jsx)(t.code,{children:"debug"})," operation. At this time, you only need to delete the corresponding pod according to the following command, and the service will start in the normal mode."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"$ kubectl delete pod ${pod_name} --namespace ${namespace}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"notes",children:"Notes"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"After entering the pod, you need to modify the port information of the configuration file before you can manually start the corresponding Doris component."})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["FE needs to modify the ",(0,s.jsx)(t.code,{children:"query_port=9030"})," configuration with the default path: ",(0,s.jsx)(t.code,{children:"/opt/apache-doris/fe/conf/fe.conf"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["BE needs to modify the ",(0,s.jsx)(t.code,{children:"heartbeat_service_port=9050"})," configuration with the default path: ",(0,s.jsx)(t.code,{children:"/opt/apache-doris/be/conf/be.conf"}),"."]}),"\n"]})]})}function h(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},250065:function(e,t,n){n.d(t,{Z:function(){return d},a:function(){return i}});var o=n(667294);let s={},r=o.createContext(s);function i(e){let t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);