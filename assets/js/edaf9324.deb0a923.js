"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["142234"],{976491:function(n,e,s){s.r(e),s.d(e,{default:()=>h,frontMatter:()=>c,metadata:()=>r,assets:()=>a,toc:()=>d,contentTitle:()=>l});var r=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/string-functions/concat-ws","title":"CONCAT_WS","description":"Description","source":"@site/versioned_docs/version-3.x/sql-manual/sql-functions/scalar-functions/string-functions/concat-ws.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/string-functions","slug":"/sql-manual/sql-functions/scalar-functions/string-functions/concat-ws","permalink":"/docs/3.x/sql-manual/sql-functions/scalar-functions/string-functions/concat-ws","draft":false,"unlisted":false,"tags":[],"version":"3.x","frontMatter":{"title":"CONCAT_WS","language":"en"},"sidebar":"docs","previous":{"title":"CONCAT","permalink":"/docs/3.x/sql-manual/sql-functions/scalar-functions/string-functions/concat"},"next":{"title":"COUNT_SUBSTRINGS","permalink":"/docs/3.x/sql-manual/sql-functions/scalar-functions/string-functions/count_substrings"}}'),t=s("785893"),i=s("250065");let c={title:"CONCAT_WS",language:"en"},l=void 0,a={},d=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return value",id:"return-value",level:2},{value:"Example",id:"example",level:2}];function o(n){let e={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(e.p,{children:"Use the first parameter sep as the connector to concatenate the second parameter and all subsequent parameters (or all strings in one ARRAY or multi ARRAY ) into a string. Special cases:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"If the separator is NULL, NULL is returned."}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:["The ",(0,t.jsx)(e.code,{children:"CONCAT_WS"})," function does not skip empty strings, but skips NULL values."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:["The ",(0,t.jsx)(e.code,{children:"CONCAT_WS"})," function does not skip empty strings in any ",(0,t.jsx)(e.code,{children:"ARRAY"})," parameters, but skips NULL values in ",(0,t.jsx)(e.code,{children:"ARRAY"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:["The ",(0,t.jsx)(e.code,{children:"CONCAT_WS"})," function does not skip NULL parameter if input multi arrays,return empty string."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:["The first parameters must be a ",(0,t.jsx)(e.code,{children:"string"})," type, and the others must be the same type ,belong to the ",(0,t.jsx)(e.code,{children:"string"})," or ",(0,t.jsx)(e.code,{children:"ARRAY"})," type"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"CONCAT_WS ( <sep> , <str> [ , <str> ] )\nCONCAT_WS ( <sep> , <array> [ , <array> ])\n"})}),"\n",(0,t.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"Parameter"}),(0,t.jsx)(e.th,{children:"Description"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"<sep>"})}),(0,t.jsxs)(e.td,{children:["Connector for concatenating strings, it is ",(0,t.jsx)(e.code,{children:"string"})," type or ",(0,t.jsx)(e.code,{children:"varchar"})," type"]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"<str>"})}),(0,t.jsxs)(e.td,{children:["String to be concatenated , it is ",(0,t.jsx)(e.code,{children:"string"})," or ",(0,t.jsx)(e.code,{children:"varchar"})," type"]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"<array>"})}),(0,t.jsxs)(e.td,{children:["Array to be concatenated ,it is ",(0,t.jsx)(e.code,{children:"ARRAY"})," type, and every element is ",(0,t.jsx)(e.code,{children:"string"})," or ",(0,t.jsx)(e.code,{children:"varchar"})," type"]})]})]})]}),"\n",(0,t.jsx)(e.h2,{id:"return-value",children:"Return value"}),"\n",(0,t.jsxs)(e.p,{children:["Parameter ",(0,t.jsx)(e.code,{children:"<sep>"})," or ",(0,t.jsx)(e.code,{children:"<array>"})," The string concatenated with ",(0,t.jsx)(e.code,{children:"<str>"}),". Special cases:"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"If delimiter is NULL, returns NULL."}),"\n",(0,t.jsx)(e.li,{children:"If parameters with mutlti arrays and it contains a null,function will return empty string."}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(e.p,{children:"Concatenate strings together using or"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:'SELECT CONCAT_WS("or", "d", "is"),CONCAT_WS(NULL, "d", "is"),CONCAT_WS(\'or\', \'d\', NULL, \'is\')\n'})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-text",children:"+----------------------------+----------------------------+------------------------------------------+\n| concat_ws('or', 'd', 'is') | concat_ws(NULL, 'd', 'is') | concat_ws('or', 'd', NULL, 'is') |\n+----------------------------+----------------------------+------------------------------------------+\n| doris                      | NULL                       | doris                              |\n+----------------------------+----------------------------+------------------------------------------+\n"})}),"\n",(0,t.jsx)(e.p,{children:"Concatenate array arrays together using or"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:'SELECT CONCAT_WS("or", ["d", "is"]),CONCAT_WS(NULL, ["d", "is"]),CONCAT_WS("or", ["d", NULL,"is"])\n'})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-text",children:"+------------------------------+------------------------------+------------------------------------+\n| concat_ws('or', ['d', 'is']) | concat_ws(NULL, ['d', 'is']) | concat_ws('or', ['d', NULL, 'is']) |\n+------------------------------+------------------------------+------------------------------------+\n| doris                        | NULL                         | doris                              |\n+------------------------------+------------------------------+------------------------------------+\n"})}),"\n",(0,t.jsx)(e.p,{children:"Concatenating multiple arrays"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:'mysql> SELECT CONCAT_WS("-", ["a", "b"], ["c", NULL], ["d"]);\n\n+------------------------------------------------+\n| CONCAT_WS("-", ["a", "b"], ["c", NULL], ["d"]) |\n+------------------------------------------------+\n| a-b-c-d                                        |\n+------------------------------------------------+\n'})}),"\n",(0,t.jsx)(e.p,{children:"Handling NULL in string parameters"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:'mysql> SELECT CONCAT_WS("|", "hello", "", "world", NULL);\n\n+--------------------------------------------+\n| CONCAT_WS("|", "hello", "", "world", NULL) |\n+--------------------------------------------+\n| hello||world                               |\n+--------------------------------------------+\n'})}),"\n",(0,t.jsx)(e.p,{children:"Return empty if NULL in multi arrays;"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:'mysql>  SELECT CONCAT_WS("-", ["a", "b"], null,["c", NULL], ["d"]);\n+-----------------------------------------------------+\n| CONCAT_WS("-", ["a", "b"], null,["c", NULL], ["d"]) |\n+-----------------------------------------------------+\n|                                                     |\n+-----------------------------------------------------+\n'})}),"\n",(0,t.jsx)(e.p,{children:"Mixing strings and arrays (invalid)"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:'mysql> SELECT CONCAT_WS(",", "a", ["b", "c"]);\n\nERROR 1105 (HY000): errCode = 2, detailMessage = can not cast from origin type ARRAY<VARCHAR(1)> to target type=VARCHAR(65533)\n\n'})}),"\n",(0,t.jsx)(e.p,{children:"All NULL inputs"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:'mysql> SELECT CONCAT_WS("x", NULL, NULL);\n\n+----------------------------+\n| CONCAT_WS("x", NULL, NULL) |\n+----------------------------+\n|                            |\n+----------------------------+\n'})}),"\n",(0,t.jsx)(e.p,{children:"Chiese Charactors concat"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"mysql> SELECT CONCAT_WS(\"x\", '\u4E2D\u6587', '\u4E2D\u6587');\n\n+------------------------------------+\n| CONCAT_WS(\"x\", '\u4E2D\u6587', '\u4E2D\u6587')     |\n+------------------------------------+\n| \u4E2D\u6587x\u4E2D\u6587                          |\n+------------------------------------+\n"})}),"\n",(0,t.jsx)(e.p,{children:"Chinese charactors in multi arrays"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"mysql> SELECT CONCAT_WS(\"x\", ['\u4E2D\u6587'], ['\u4E2D\u6587']);\n+----------------------------------------+\n| CONCAT_WS(\"x\", ['\u4E2D\u6587'], ['\u4E2D\u6587'])     |\n+----------------------------------------+\n| \u4E2D\u6587x\u4E2D\u6587                              |\n+----------------------------------------+\n"})}),"\n",(0,t.jsx)(e.p,{children:"Insert and concat them"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"DROP TABLE IF EXISTS test_concat_ws_1;\n\nCREATE TABLE test_concat_ws_1 (id INT, a ARRAY<VARCHAR>, b ARRAY<VARCHAR>) ENGINE=OLAP DISTRIBUTED BY HASH(id) BUCKETS 1 PROPERTIES ('replication_num' = '1')\n\nINSERT INTO test_concat_ws_1 VALUES (1, ['a','b'], ['css',null,'d']), (2, ['x',null], ['y','z']),(3,['\u4F60\u597D','\u4E16\u754C'],['Doris',null,'Nereids'])\n\nSELECT concat_ws('-', a, b) FROM test_concat_ws_1 ORDER BY id\n\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-text",children:"\n+-----------------------------+\n| concat_ws('-', a, b)        |\n+-----------------------------+\n| a-b-css-d                   |\n| x-y-z                       |\n| \u4F60\u597D-\u4E16\u754C-Doris-Nereids     |\n+-----------------------------+\n"})})]})}function h(n={}){let{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(o,{...n})}):o(n)}},250065:function(n,e,s){s.d(e,{Z:function(){return l},a:function(){return c}});var r=s(667294);let t={},i=r.createContext(t);function c(n){let e=r.useContext(i);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:c(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);