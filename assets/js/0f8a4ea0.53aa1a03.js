"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["114941"],{547064:function(e,n,s){s.r(n),s.d(n,{default:()=>h,frontMatter:()=>d,metadata:()=>i,assets:()=>a,toc:()=>l,contentTitle:()=>o});var i=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/string-functions/export-set","title":"EXPORT-SET","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/string-functions/export-set.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/string-functions","slug":"/sql-manual/sql-functions/scalar-functions/string-functions/export-set","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/export-set","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"EXPORT-SET","language":"en"},"sidebar":"docs","previous":{"title":"ENDS_WITH","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/ends-with"},"next":{"title":"ELT","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/string-functions/elt"}}'),t=s("785893"),r=s("250065");let d={title:"EXPORT-SET",language:"en"},o=void 0,a={},l=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return value",id:"return-value",level:2},{value:"Example",id:"example",level:2}];function c(e){let n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"EXPORT_SET"})," is used to convert each bit of an integer into a specified string and concatenate them into a result string. For each bit in ",(0,t.jsx)(n.code,{children:"bits"})," that is 1, the corresponding position in the result will display the ",(0,t.jsx)(n.code,{children:"on"})," string; for each bit that is 0, the ",(0,t.jsx)(n.code,{children:"off"})," string will be displayed. The bits are checked in order from right to left (i.e., from the least significant bit to the most significant bit), but concatenated into the result string from left to right. The bits are separated by the ",(0,t.jsx)(n.code,{children:"separator"})," (default is a comma ",(0,t.jsx)(n.code,{children:","}),")."]}),"\n",(0,t.jsxs)(n.p,{children:["The number of bits displayed is determined by the ",(0,t.jsx)(n.code,{children:"number_of_bits"})," parameter, with a default of 64 bits. If not specified or out of range (greater than 64), it is automatically treated as 64 bits."]}),"\n",(0,t.jsxs)(n.p,{children:["This function behaves similarly to MySQL's ",(0,t.jsx)(n.a,{href:"https://dev.mysql.com/doc/refman/8.4/en/string-functions.html#function_export-set",children:"EXPORT_SET function"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"EXPORT_SET(bits, on, off[, separator[, number_of_bits]])\n"})}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"bits"})}),(0,t.jsx)(n.td,{children:"The integer type(LARGEINT) used for conversion. If the value is less than -2^63, treat it as -2^63. If it is greater than 2^64 - 1, treat it as 2^63 - 1."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"on"})}),(0,t.jsx)(n.td,{children:"The string displayed when the bit is 1"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"off"})}),(0,t.jsx)(n.td,{children:"The string displayed when the bit is 0"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"separator"})}),(0,t.jsx)(n.td,{children:"Optional, the string used to separate the bits, default is ','"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number_of_bits"})}),(0,t.jsx)(n.td,{children:"Optional, the number of bits to display in the result, supports integer type(INT). The default value is 64, and it will be automatically handled with the default value if it exceeds the range [0, 64]."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"return-value",children:"Return value"}),"\n",(0,t.jsxs)(n.p,{children:["Returns a string. For each bit in ",(0,t.jsx)(n.code,{children:"bits"}),", from the least significant bit to the most significant bit, if it is 1, it is replaced with ",(0,t.jsx)(n.code,{children:"on"}),"; if it is 0, it is replaced with ",(0,t.jsx)(n.code,{children:"off"}),", and they are concatenated in order. The bits are separated by ",(0,t.jsx)(n.code,{children:"separator"}),", and the final result displays ",(0,t.jsx)(n.code,{children:"number_of_bits"})," bits."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"number_of_bits"})," is out of range [-2^31, 2^31 - 1] or any parameter in the function is NULL, return NULL."]}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT EXPORT_SET(-2, '1', '0');\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+---------------------------------------------------------------------------------------------------------------------------------+\n| EXPORT_SET(-2, '1', '0')                                                                                                        |\n+---------------------------------------------------------------------------------------------------------------------------------+\n| 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 |\n+---------------------------------------------------------------------------------------------------------------------------------+\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT EXPORT_SET(5, '1', '0', '||', 5);\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+----------------------------------+\n| EXPORT_SET(5, '1', '0', '||', 5) |\n+----------------------------------+\n| 1||0||1||0||0                    |\n+----------------------------------+\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT `bits`, `on`, `off`, `sep`, `num_of_b`\nFROM `test_export_set`;\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+-------------+--------+-------+-------+----------+\n| bits        | on     | off   | sep   | num_of_b |\n+-------------+--------+-------+-------+----------+\n|          -1 | 1      | 0     | ,     |       50 |\n|          -2 | 1      | 0     |       |       64 |\n|           5 | Y      | N     | ,     |        5 |\n|           5 | 1      | 0     |       |       64 |\n|           5 |        | 0     |       |       65 |\n|           6 | 1      |       |       |       63 |\n| 19284249819 | 1      | 0     | ,     |       64 |\n|           9 | apache | doris | |123| |       64 |\n|        NULL | 1      | 0     | ,     |        5 |\n|           5 | NULL   | 0     |       |        5 |\n|           5 | 1      | NULL  | ,     |       10 |\n|           5 | 1      | 0     | NULL  |       10 |\n|           5 | 1      | 0     | ,     |     NULL |\n+-------------+--------+-------+-------+----------+\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT EXPORT_SET(`bits`, `on`, `off`, `sep`, `num_of_b`)\nFROM `test_export_set`;\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",childrenn| bits        | on     | off   | sep   | num_of_b | ans|\nn|          -1 | 1      | 0     | ,     |       50 ||\n|          -2 | 1      | 0     |       |       64 ||\n|           5 | Y      | N     | ,     |        5 ||\n|           5 | 1      | 0     |       |       64 ||\n|           5 |        | 0     |       |       65 ||\n|           6 | 1      |       |       |       63 ||\n| 19284249819 | 1      | 0     | ,     |       64 | 1,1,0,1,1,0,1,1,0,0,1,1,0,0,1,0,0,1,1,1,0,1,1,0,1,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |\n|           9 | apache | doris | |123| |       64 | apache|123|doris|123|doris|123|apache|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris|123|doris |\n|        NULL | 1      | 0     | ,     |        5 ||\n|           5 | NULL   | 0     |       |        5 | NULL                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n|           5 | 1      | NULL  | ,     |       10 | NULL                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n|           5 | 1      | 0     | NULL  |       10 ||\n|           5 | 1      | 0     | ,     |     NULL ||\nn"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- max value: 2^64 - 1\nSELECT EXPORT_SET(18446744073709551615, '1', '0');\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+---------------------------------------------------------------------------------------------------------------------------------+\n| EXPORT_SET(18446744073709551615, '1', '0')                                                                                      |\n+---------------------------------------------------------------------------------------------------------------------------------+\n| 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 |\n+---------------------------------------------------------------------------------------------------------------------------------+\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- 2^64 out of bound, the bits will be set to 2^63 - 1\nSELECT EXPORT_SET(18446744073709551616, '1', '0');\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+---------------------------------------------------------------------------------------------------------------------------------+\n| EXPORT_SET(18446744073709551616, '1', '0')                                                                                      |\n+---------------------------------------------------------------------------------------------------------------------------------+\n| 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0 |\n+---------------------------------------------------------------------------------------------------------------------------------+\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- min value: -2^63\nSELECT EXPORT_SET(-9223372036854775808, '1', '0');\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+---------------------------------------------------------------------------------------------------------------------------------+\n| EXPORT_SET(-9223372036854775808, '1', '0')                                                                                      |\n+---------------------------------------------------------------------------------------------------------------------------------+\n| 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 |\n+---------------------------------------------------------------------------------------------------------------------------------+\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- out of bound, the bits will be set to -2^63\nSELECT EXPORT_SET(-184467440737095516161, '1', '0');\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+---------------------------------------------------------------------------------------------------------------------------------+\n| EXPORT_SET(-184467440737095516161, '1', '0')                                                                                    |\n+---------------------------------------------------------------------------------------------------------------------------------+\n| 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 |\n+---------------------------------------------------------------------------------------------------------------------------------+\n"})})]})}function h(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return o},a:function(){return d}});var i=s(667294);let t={},r=i.createContext(t);function d(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);