"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["272197"],{331308:function(e,i,n){n.r(i),n.d(i,{default:()=>p,frontMatter:()=>o,metadata:()=>t,assets:()=>l,toc:()=>c,contentTitle:()=>a});var t=JSON.parse('{"id":"developer-guide/pipeline-tracing","title":"Pipeline Tracing","description":"\x3c!--","source":"@site/community/developer-guide/pipeline-tracing.md","sourceDirName":"developer-guide","slug":"/developer-guide/pipeline-tracing","permalink":"/community/developer-guide/pipeline-tracing","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Pipeline Tracing","language":"en"},"sidebar":"community","previous":{"title":"Doris BE Storage Layer Benchmark Tool","permalink":"/community/developer-guide/benchmark-tool"},"next":{"title":"Setting FE Dev Env - Eclipse","permalink":"/community/developer-guide/fe-eclipse-dev"}}'),r=n("785893"),s=n("250065");let o={title:"Pipeline Tracing",language:"en"},a=void 0,l={},c=[{value:"Usage steps",id:"usage-steps",level:2},{value:"1. Record Data",id:"1-record-data",level:3},{value:"2. Format Conversion",id:"2-format-conversion",level:3},{value:"3. Visualisation",id:"3-visualisation",level:3}];function d(e){let i={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:'In the Pipeline execution engine, we split the execution plan tree of each Instance into multiple small Pipeline Tasks and execute them under our custom Pipeline scheduler. Therefore, in an environment with a large number of Pipeline Tasks executing, how these Tasks are scheduled across threads and CPU cores is an important factor for execution performance. We have developed a specialised tool to observe the scheduling process on a particular query or time period, which we call "Pipeline Tracing".'}),"\n",(0,r.jsx)(i.h2,{id:"usage-steps",children:"Usage steps"}),"\n",(0,r.jsx)(i.h3,{id:"1-record-data",children:"1. Record Data"}),"\n",(0,r.jsx)(i.p,{children:"First we need to log the Pipeline scheduling process. Whether and how to log the scheduling process can be set via the HTTP interface. These settings are associated with a specific BE:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsx)(i.li,{children:"Turn off Pipeline Tracing record"}),"\n"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",children:"curl -X POST http://{be_host}:{http_port}/api/pipeline/tracing?type=disable\n"})}),"\n",(0,r.jsxs)(i.ol,{start:"2",children:["\n",(0,r.jsx)(i.li,{children:"Generate a record for each Query"}),"\n"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",children:"curl -X POST http://{be_host}:{http_port}/api/pipeline/tracing?type=perquery\n"})}),"\n",(0,r.jsxs)(i.ol,{start:"3",children:["\n",(0,r.jsx)(i.li,{children:"Generate Tracing records for a fixed period of time"}),"\n"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",children:"curl -X POST http://{be_host}:{http_port}/api/pipeline/tracing?type=periodic\n"})}),"\n",(0,r.jsx)(i.p,{children:"Set the time period (in seconds):"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",children:"curl -X POST http://{be_host}:{http_port}/api/pipeline/tracing?dump_interval=60\n"})}),"\n",(0,r.jsx)(i.h3,{id:"2-format-conversion",children:"2. Format Conversion"}),"\n",(0,r.jsxs)(i.p,{children:["The logged data will be generated in the ",(0,r.jsx)(i.code,{children:"log/tracing"})," directory of the corresponding BE. The next step is to convert the data to a file that matches the format required by the visualisation tool. A conversion tool is provided to convert the tracing logs generated by the BE, which can be executed directly:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",children:"cd doris/tools/pipeline-tracing/\npython3 origin-to-show.py -s <SOURCE_FILE> -d <DEST>.json\n"})}),"\n",(0,r.jsxs)(i.p,{children:["to generate a json file that can be displayed. For more detailed instructions, see the ",(0,r.jsx)(i.code,{children:"README.md"})," file in this directory."]}),"\n",(0,r.jsx)(i.h3,{id:"3-visualisation",children:"3. Visualisation"}),"\n",(0,r.jsxs)(i.p,{children:["Pipeline Tracing is visualised using ",(0,r.jsx)(i.a,{href:"https://ui.perfetto.dev/",children:"Perfetto"}),'. After generating a file in the legal format, select "Open trace file" on its page to open the file and view the results:']}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{src:n(28752).Z+"",width:"2328",height:"1316"})}),"\n",(0,r.jsx)(i.p,{children:"The tool is very powerful. For example, it is easy to see how the same Task is scheduled across cores."}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{src:n(940979).Z+"",width:"3590",height:"1964"})})]})}function p(e={}){let{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28752:function(e,i,n){n.d(i,{Z:function(){return t}});let t=n.p+"assets/images/tracing1-61efbe67e9c3940b06464ec63edb049f.png"},940979:function(e,i,n){n.d(i,{Z:function(){return t}});let t=n.p+"assets/images/tracing2-fe28ba48da4a6e56a6f56f4303b76907.png"},250065:function(e,i,n){n.d(i,{Z:function(){return a},a:function(){return o}});var t=n(667294);let r={},s=t.createContext(r);function o(e){let i=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);