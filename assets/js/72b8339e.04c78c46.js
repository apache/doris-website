"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["549547"],{445358:function(e,n,s){s.r(n),s.d(n,{default:()=>u,frontMatter:()=>i,metadata:()=>r,assets:()=>o,toc:()=>c,contentTitle:()=>t});var r=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/json-functions/json-parse","title":"JSON_PARSE","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/json-functions/json-parse.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/json-functions","slug":"/sql-manual/sql-functions/scalar-functions/json-functions/json-parse","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/json-functions/json-parse","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"JSON_PARSE","language":"en"},"sidebar":"docs","previous":{"title":"JSON_OBJECT","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/json-functions/json-object"},"next":{"title":"JSON_PARSE_ERROR_TO_NULL","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/json-functions/json-parse-error-to-null"}}'),l=s("785893"),a=s("250065");let i={title:"JSON_PARSE",language:"en"},t=void 0,o={},c=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Required Parameters",id:"required-parameters",level:3},{value:"Optional Parameters",id:"optional-parameters",level:3},{value:"Return Value",id:"return-value",level:2},{value:"Usage Notes",id:"usage-notes",level:2},{value:"Examples",id:"examples",level:2}];function d(e){let n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Parse raw JSON strings into JSON binary format. To meet different exception data processing requirements, different JSON_PARSE series functions are provided, as follows:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"JSON_PARSE"})," Parse JSON strings. When the input string is not a valid JSON string, an error is reported."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"JSON_PARSE_ERROR_TO_NULL"})," Parse JSON strings. When the input string is not a valid JSON string, return NULL."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"JSON_PARSE_ERROR_TO_VALUE"})," Parse JSON strings. When the input string is not a valid JSON string, return the default value specified by the parameter default_json_value."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"JSON_PARSE (<json_str>)\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"JSON_PARSE_ERROR_TO_NULL (<json_str>)\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"JSON_PARSE_ERROR_TO_VALUE (<json_str>, <default_json_value>)\n"})}),"\n",(0,l.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsx)(n.h3,{id:"required-parameters",children:"Required Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"<json_str>"})," String type, whose content should be a valid JSON string."]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"optional-parameters",children:"Optional Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"<default_json_value>"})," JSON type, can be NULL. When ",(0,l.jsx)(n.code,{children:"<json_str>"})," parsing fails, ",(0,l.jsx)(n.code,{children:"<default_json_value>"})," is returned as the default value."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"Nullable<JSON>"})," Returns the parsed JSON object."]}),"\n",(0,l.jsx)(n.h2,{id:"usage-notes",children:"Usage Notes"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["If ",(0,l.jsx)(n.code,{children:"<json_str>"})," is NULL, the result is also NULL."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"JSONB_PARSE"}),"/",(0,l.jsx)(n.code,{children:"JSONB_PARSE_ERROR_TO_NULL"}),"/",(0,l.jsx)(n.code,{children:"JSONB_PARSE_ERROR_TO_VALUE"})," have basically the same behavior, except that the results obtained when parsing fails are different."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Normal JSON string parsing\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT json_parse(\'{"k1":"v31","k2":300}\');\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:'+-------------------------------------+\n| json_parse(\'{"k1":"v31","k2":300}\') |\n+-------------------------------------+\n| {"k1":"v31","k2":300}               |\n+-------------------------------------+\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT json_parse_error_to_null(\'{"k1":"v31","k2":300}\',\'{}\');\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:'+---------------------------------------------------+\n| json_parse_error_to_null(\'{"k1":"v31","k2":300}\') |\n+---------------------------------------------------+\n| {"k1":"v31","k2":300}                             |\n+---------------------------------------------------+\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT json_parse_error_to_value(\'{"k1":"v31","k2":300}\',\'{}\');\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:'+---------------------------------------------------------+\n| json_parse_error_to_value(\'{"k1":"v31","k2":300}\',\'{}\') |\n+---------------------------------------------------------+\n| {"k1":"v31","k2":300}                                   |\n+---------------------------------------------------------+\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT json_parse_error_to_value(\'{"k1":"v31","k2":300}\', NULL);\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:'+----------------------------------------------------------+\n| json_parse_error_to_value(\'{"k1":"v31","k2":300}\', NULL) |\n+----------------------------------------------------------+\n| {"k1":"v31","k2":300}                                    |\n+----------------------------------------------------------+\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Invalid JSON string parsing\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT json_parse('invalid json');\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:"ERROR 1105 (HY000): errCode = 2, detailMessage = [INVALID_ARGUMENT]Parse json document failed at row 0, error: [INTERNAL_ERROR]simdjson parse exception:\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT json_parse_error_to_null('invalid json');\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:"+------------------------------------------+\n| json_parse_error_to_null('invalid json') |\n+------------------------------------------+\n| NULL                                     |\n+------------------------------------------+\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT json_parse_error_to_value('invalid json');\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:"+-------------------------------------------+\n| json_parse_error_to_value('invalid json') |\n+-------------------------------------------+\n| {}                                        |\n+-------------------------------------------+\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT json_parse_error_to_value('invalid json', '{\"key\": \"default value\"}');\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:'+-----------------------------------------------------------------------+\n| json_parse_error_to_value(\'invalid json\', \'{"key": "default value"}\') |\n+-----------------------------------------------------------------------+\n| {"key":"default value"}                                               |\n+-----------------------------------------------------------------------+\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT json_parse_error_to_value('invalid json', NULL);\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:"+-------------------------------------------------+\n| json_parse_error_to_value('invalid json', NULL) |\n+-------------------------------------------------+\n| NULL                                            |\n+-------------------------------------------------+\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["NULL parameters\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT json_parse(NULL);\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:"+------------------+\n| json_parse(NULL) |\n+------------------+\n| NULL             |\n+------------------+\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT json_parse_error_to_null(NULL);\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:"+--------------------------------+\n| json_parse_error_to_null(NULL) |\n+--------------------------------+\n| NULL                           |\n+--------------------------------+\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT json_parse_error_to_value(NULL, '{}');\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:"+---------------------------------------+\n| json_parse_error_to_value(NULL, '{}') |\n+---------------------------------------+\n| NULL                                  |\n+---------------------------------------+\n"})}),"\n"]}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return t},a:function(){return i}});var r=s(667294);let l={},a=r.createContext(l);function i(e){let n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);