"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["857021"],{909972:function(n,e,t){t.r(e),t.d(e,{default:()=>d,frontMatter:()=>r,metadata:()=>s,assets:()=>o,toc:()=>c,contentTitle:()=>l});var s=JSON.parse('{"id":"sql-manual/sql-functions/window-functions/dense-rank","title":"DENSE_RANK","description":"Description","source":"@site/docs/sql-manual/sql-functions/window-functions/dense-rank.md","sourceDirName":"sql-manual/sql-functions/window-functions","slug":"/sql-manual/sql-functions/window-functions/dense-rank","permalink":"/docs/dev/sql-manual/sql-functions/window-functions/dense-rank","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"DENSE_RANK","language":"en"},"sidebar":"docs","previous":{"title":"CUME_DIST","permalink":"/docs/dev/sql-manual/sql-functions/window-functions/cume-dist"},"next":{"title":"FIRST_VALUE","permalink":"/docs/dev/sql-manual/sql-functions/window-functions/first-value"}}'),i=t("785893"),a=t("250065");let r={title:"DENSE_RANK",language:"en"},l=void 0,o={},c=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function u(n){let e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(e.p,{children:"DENSE_RANK() is a window function used to calculate rankings within a group. Unlike RANK(), DENSE_RANK() returns consecutive rankings without gaps. The ranking values start from 1 and increment sequentially. When there are identical values, they will receive the same rank."}),"\n",(0,i.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:"DENSE_RANK()\n"})}),"\n",(0,i.jsx)(e.h2,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsx)(e.p,{children:"Returns a BIGINT type ranking value, starting from 1."}),"\n",(0,i.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:"select x, y, dense_rank() over(partition by x order by y) as rank from int_t;\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-text",children:"+-----+-----+------+\n| x   | y   | rank |\n| --- | --- | ---- |\n| 1   | 1   | 1    |\n| 1   | 2   | 2    |\n| 1   | 2   | 2    | -- Same values receive the same rank |\n| 2   | 1   | 1    |\n| 2   | 2   | 2    |\n| 2   | 3   | 3    | -- Rankings are consecutive, no gaps |\n| 3   | 1   | 1    |\n| 3   | 1   | 1    |\n| 3   | 2   | 2    |\n+-----+-----+------+\n"})})]})}function d(n={}){let{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(u,{...n})}):u(n)}},250065:function(n,e,t){t.d(e,{Z:function(){return l},a:function(){return r}});var s=t(667294);let i={},a=s.createContext(i);function r(n){let e=s.useContext(a);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),s.createElement(a.Provider,{value:e},n.children)}}}]);