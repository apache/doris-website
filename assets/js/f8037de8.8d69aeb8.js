"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["272490"],{124101:function(n,e,s){s.r(e),s.d(e,{default:()=>h,frontMatter:()=>l,metadata:()=>t,assets:()=>r,toc:()=>c,contentTitle:()=>a});var t=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/spatial-functions/st-contains","title":"ST_CONTAINS","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/spatial-functions/st-contains.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/spatial-functions","slug":"/sql-manual/sql-functions/scalar-functions/spatial-functions/st-contains","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/spatial-functions/st-contains","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"ST_CONTAINS","language":"en"},"sidebar":"docs","previous":{"title":"ST_CIRCLE","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/spatial-functions/st-circle"},"next":{"title":"ST_DISJOINT","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/spatial-functions/st-disjoint"}}'),i=s("785893"),o=s("250065");let l={title:"ST_CONTAINS",language:"en"},a=void 0,r={},c=[{value:"Description",id:"description",level:2},{value:"Sytax",id:"sytax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Retuen value",id:"retuen-value",level:2},{value:"Example",id:"example",level:2}];function d(n){let e={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(e.p,{children:"Determines whether one geometric shape (shape1) completely contains another geometric shape (shape2). Returns 1 if shape1 contains all points of shape2; otherwise, returns 0."}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"For points: The point must lie inside or on the boundary of the polygon."}),"\n",(0,i.jsx)(e.li,{children:"For lines: All points of the line must lie inside or on the boundary of the polygon."}),"\n",(0,i.jsx)(e.li,{children:"For polygons: The contained polygon must be entirely inside the outer polygon (boundaries can overlap)."}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"sytax",children:"Sytax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:"ST_CONTAINS( <shape1>, <shape2>)\n"})}),"\n",(0,i.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Parameters"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"<shape1>"})}),(0,i.jsx)(e.td,{children:"The geometric shape used to check if it contains another shape, supporting the Polygon type.\u3002"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"<shape2>"})}),(0,i.jsx)(e.td,{children:"The geometric shape used to check if it is contained, supporting types such as Point, Line, Polygon, etc."})]})]})]}),"\n",(0,i.jsx)(e.h2,{id:"retuen-value",children:"Retuen value"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"1: Indicates that shape1 completely contains shape2."}),"\n",(0,i.jsx)(e.li,{children:"0: Indicates that shape1 does not contain shape2."}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"ST_CONTAINS has the following edge cases:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Returns NULL if either input parameter is NULL."}),"\n",(0,i.jsx)(e.li,{children:"Returns NULL if the input geometric shape is invalid (e.g., a self-intersecting polygon)."}),"\n",(0,i.jsx)(e.li,{children:"Returns 0 if the boundary of shape2 partially overlaps with the boundary of shape1, but part of shape2 lies outside  shape1."}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(e.p,{children:"Polygon contains a point (point inside)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:'SELECT ST_Contains(ST_Polygon("POLYGON ((0 0, 10 0, 10 10, 0 10, 0 0))"), ST_Point(5, 5));\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-text",children:"+----------------------------------------------------------------------------------------+\n| st_contains(st_polygon('POLYGON ((0 0, 10 0, 10 10, 0 10, 0 0))'), st_point(5.0, 5.0)) |\n+----------------------------------------------------------------------------------------+\n|                                                                                      1 |\n+----------------------------------------------------------------------------------------+\n"})}),"\n",(0,i.jsx)(e.p,{children:"Polygon does not contain a point (point outside)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:'SELECT ST_Contains(ST_Polygon("POLYGON ((0 0, 10 0, 10 10, 0 10, 0 0))"), ST_Point(50, 50));\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-text",children:"+------------------------------------------------------------------------------------------+\n| st_contains(st_polygon('POLYGON ((0 0, 10 0, 10 10, 0 10, 0 0))'), st_point(50.0, 50.0)) |\n+------------------------------------------------------------------------------------------+\n|                                                                                        0 |\n+------------------------------------------------------------------------------------------+\n"})}),"\n",(0,i.jsx)(e.p,{children:"Polygon contains a line (line entirely inside)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:'mysql> SELECT ST_Contains(  ST_Polygon("POLYGON ((0 0, 10 0, 10 10, 0 10, 0 0))"),  ST_Linefromtext("LINESTRING (2 2, 8 8)"));\n+-----------------------------------------------------------------------------------------------------------------+\n| ST_Contains(  ST_Polygon("POLYGON ((0 0, 10 0, 10 10, 0 10, 0 0))"),  ST_Linefromtext("LINESTRING (2 2, 8 8)")) |\n+-----------------------------------------------------------------------------------------------------------------+\n|                                                                                                               1 |\n+-----------------------------------------------------------------------------------------------------------------+\n'})}),"\n",(0,i.jsx)(e.p,{children:"Polygon does not contain a line (line partially outside)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:'\nmysql> SELECT ST_Contains(  ST_Polygon("POLYGON ((0 0, 10 0, 10 10, 0 10, 0 0))"),  ST_Linefromtext("LINESTRING (5 5, 15 15)"));\n+-------------------------------------------------------------------------------------------------------------------+\n| ST_Contains(  ST_Polygon("POLYGON ((0 0, 10 0, 10 10, 0 10, 0 0))"),  ST_Linefromtext("LINESTRING (5 5, 15 15)")) |\n+-------------------------------------------------------------------------------------------------------------------+\n|                                                                                                                 0 |\n+-------------------------------------------------------------------------------------------------------------------+\n'})}),"\n",(0,i.jsx)(e.p,{children:"Polygon contains a polygon (inner polygon entirely contained)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:'mysql> SELECT ST_Contains(  ST_Polygon("POLYGON ((0 0, 10 0, 10 10, 0 10, 0 0))"),  ST_Polygon("POLYGON ((2 2, 8 2, 8 8, 2 8, 2 2))"));\n+--------------------------------------------------------------------------------------------------------------------------+\n| ST_Contains(  ST_Polygon("POLYGON ((0 0, 10 0, 10 10, 0 10, 0 0))"),  ST_Polygon("POLYGON ((2 2, 8 2, 8 8, 2 8, 2 2))")) |\n+--------------------------------------------------------------------------------------------------------------------------+\n|                                                                                                                        1 |\n+--------------------------------------------------------------------------------------------------------------------------+\n\n'})}),"\n",(0,i.jsx)(e.p,{children:"Polygon does not contain a polygon (inner polygon partially outside)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:'mysql> SELECT ST_Contains(  ST_Polygon("POLYGON ((0 0, 10 0, 10 10, 0 10, 0 0))"),  ST_Polygon("POLYGON ((5 5, 15 5, 15 15, 5 15, 5 5))"));\n+------------------------------------------------------------------------------------------------------------------------------+\n| ST_Contains(  ST_Polygon("POLYGON ((0 0, 10 0, 10 10, 0 10, 0 0))"),  ST_Polygon("POLYGON ((5 5, 15 5, 15 15, 5 15, 5 5))")) |\n+------------------------------------------------------------------------------------------------------------------------------+\n|                                                                                                                            0 |\n+------------------------------------------------------------------------------------------------------------------------------+\n'})}),"\n",(0,i.jsx)(e.p,{children:"Polygon and boundary point (point on polygon boundary)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:'mysql> SELECT ST_Contains(  ST_Polygon("POLYGON ((0 0, 10 0, 10 10, 0 10, 0 0))"),  ST_Point(0, 5));\n+---------------------------------------------------------------------------------------+\n| ST_Contains(  ST_Polygon("POLYGON ((0 0, 10 0, 10 10, 0 10, 0 0))"),  ST_Point(0, 5)) |\n+---------------------------------------------------------------------------------------+\n|                                                                                     0 |\n+---------------------------------------------------------------------------------------+\n'})}),"\n",(0,i.jsx)(e.p,{children:"NULL parameter (returns NULL)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:"mysql> SELECT ST_Contains(NULL, ST_Point(5, 5));\n+-----------------------------------+\n| ST_Contains(NULL, ST_Point(5, 5)) |\n+-----------------------------------+\n|                              NULL |\n+-----------------------------------+\n"})}),"\n",(0,i.jsx)(e.p,{children:"Self-intersecting polygon as parameter"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:'\nmysql> SELECT ST_Contains(  ST_Polygon("POLYGON ((0 0, 1 1, 0 1, 1 0, 0 0))"), ST_Point(0.5, 0.5));\n+--------------------------------------------------------------------------------------+\n| ST_Contains(  ST_Polygon("POLYGON ((0 0, 1 1, 0 1, 1 0, 0 0))"), ST_Point(0.5, 0.5)) |\n+--------------------------------------------------------------------------------------+\n|                                                                                 NULL |\n+--------------------------------------------------------------------------------------+\n'})})]})}function h(n={}){let{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},250065:function(n,e,s){s.d(e,{Z:function(){return a},a:function(){return l}});var t=s(667294);let i={},o=t.createContext(i);function l(n){let e=t.useContext(o);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);