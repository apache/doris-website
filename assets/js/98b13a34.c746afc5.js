"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["375732"],{676541:function(e,i,n){n.r(i),n.d(i,{default:()=>h,frontMatter:()=>l,metadata:()=>t,assets:()=>o,toc:()=>c,contentTitle:()=>s});var t=JSON.parse('{"id":"data-operate/import/load-high-availability","title":"Load High Availability","description":"Overview","source":"@site/docs/data-operate/import/load-high-availability.md","sourceDirName":"data-operate/import","slug":"/data-operate/import/load-high-availability","permalink":"/docs/dev/data-operate/import/load-high-availability","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Load High Availability","language":"en-US"},"sidebar":"docs","previous":{"title":"Transforming Data During Load","permalink":"/docs/dev/data-operate/import/load-data-convert"},"next":{"title":"High Concurrency LOAD Optimization(Group Commit)","permalink":"/docs/dev/data-operate/import/group-commit-manual"}}'),a=n("785893"),r=n("250065");let l={title:"Load High Availability",language:"en-US"},s="Load High Availability",o={},c=[{value:"Overview",id:"overview",level:2},{value:"Majority Write",id:"majority-write",level:2},{value:"How It Works",id:"how-it-works",level:3},{value:"Minimum Write Replica Number",id:"minimum-write-replica-number",level:2},{value:"Feature Description",id:"feature-description",level:3},{value:"Use Cases",id:"use-cases",level:3},{value:"Configuration Methods",id:"configuration-methods",level:3},{value:"1. Single Table Configuration",id:"1-single-table-configuration",level:4},{value:"2. Global Configuration",id:"2-global-configuration",level:4},{value:"Other High Availability Mechanisms",id:"other-high-availability-mechanisms",level:2}];function d(e){let i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsx)(i.h1,{id:"load-high-availability",children:"Load High Availability"})}),"\n",(0,a.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(i.p,{children:"Doris provides various mechanisms to ensure high availability during data import. This article will detail Doris's default import behavior and additional options for improving import availability, especially the minimum write replica number feature."}),"\n",(0,a.jsx)(i.h2,{id:"majority-write",children:"Majority Write"}),"\n",(0,a.jsx)(i.p,{children:"By default, Doris adopts a majority write strategy to ensure data reliability and consistency:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"An import is considered successful when the number of successfully written replicas exceeds half of the total number of replicas."}),"\n",(0,a.jsx)(i.li,{children:"For example, for a table with three replicas, at least two replicas must be successfully written for the import to be considered successful."}),"\n"]}),"\n",(0,a.jsx)(i.h3,{id:"how-it-works",children:"How It Works"}),"\n",(0,a.jsxs)(i.ol,{children:["\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsx)(i.p,{children:"Data Distribution: The import task first distributes data to all relevant BE nodes."}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsx)(i.p,{children:"Parallel Writing: Each BE node processes data writing operations in parallel."}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsx)(i.p,{children:"Write Confirmation: After completing the data write, each BE node sends a confirmation to the FE."}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsx)(i.p,{children:"Majority Judgment: The FE counts the number of successfully written replicas, and considers the import successful when a majority is reached."}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsx)(i.p,{children:"Transaction Commit: The FE commits the import transaction, making the data visible externally."}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsx)(i.p,{children:"Asynchronous Replication: For replicas that were not successfully written, the system will asynchronously replicate data in the background to ensure eventual consistency across all replicas."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"The majority write strategy is Doris's balance between data reliability and system availability. For scenarios with special requirements, Doris provides other options such as the minimum write replica number to further enhance system flexibility."}),"\n",(0,a.jsx)(i.h2,{id:"minimum-write-replica-number",children:"Minimum Write Replica Number"}),"\n",(0,a.jsx)(i.p,{children:"While the majority write strategy ensures data reliability, it may affect system availability in certain scenarios. For example, in a two-replica situation, both replicas must be successfully written to complete the import, meaning no replica is allowed to be unavailable during the import process."}),"\n",(0,a.jsx)(i.p,{children:"To address this issue and improve import availability, Doris provides the Min Load Replica Num option."}),"\n",(0,a.jsx)(i.h3,{id:"feature-description",children:"Feature Description"}),"\n",(0,a.jsx)(i.p,{children:"The minimum write replica number allows users to specify the minimum number of replicas that need to be successfully written during data import. The import is considered successful when the number of successfully written replicas is greater than or equal to this value."}),"\n",(0,a.jsx)(i.h3,{id:"use-cases",children:"Use Cases"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsx)(i.p,{children:"When some nodes are unavailable, but data import still needs to be guaranteed."}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsx)(i.p,{children:"When there are high requirements for data import speed, and users are willing to sacrifice some reliability for higher availability."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(i.h3,{id:"configuration-methods",children:"Configuration Methods"}),"\n",(0,a.jsx)(i.h4,{id:"1-single-table-configuration",children:"1. Single Table Configuration"}),"\n",(0,a.jsx)(i.p,{children:"a. Set when creating a table:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-sql",children:"CREATE TABLE example_table\n(\nid INT,\nname STRING\n)\nDUPLICATE KEY(id)\nDISTRIBUTED BY HASH(id) BUCKETS 10\nPROPERTIES\n(\n'replication_num' = '3',\n'min_load_replica_num' = '2'\n);\n"})}),"\n",(0,a.jsx)(i.p,{children:"b. Modify an existing table:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-sql",children:"ALTER TABLE example_table\nSET ( 'min_load_replica_num' = '2' );\n"})}),"\n",(0,a.jsx)(i.h4,{id:"2-global-configuration",children:"2. Global Configuration"}),"\n",(0,a.jsxs)(i.p,{children:["Set through the FE configuration item ",(0,a.jsx)(i.code,{children:"min_load_replica_num"}),"."]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsx)(i.p,{children:"Valid values: greater than 0"}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsx)(i.p,{children:"Default value: -1 (indicating that the global minimum write replica number is not enabled)"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Priority: Table property > Global configuration > Default majority rule"}),"\n",(0,a.jsxs)(i.p,{children:["If the table property is not set or invalid, and the global configuration is valid, the minimum write replica number for the table is:\n",(0,a.jsx)(i.code,{children:"min(FE configured min_load_replica_num, table's replica number/2 + 1)"})]}),"\n",(0,a.jsxs)(i.p,{children:["For viewing and modifying FE configuration items, please refer to the ",(0,a.jsx)(i.a,{href:"/docs/dev/admin-manual/config/fe-config",children:"FE Configuration Document"}),"."]}),"\n",(0,a.jsx)(i.h2,{id:"other-high-availability-mechanisms",children:"Other High Availability Mechanisms"}),"\n",(0,a.jsx)(i.p,{children:"In addition to the minimum write replica number option, Doris also adopts the following mechanisms to improve import availability:"}),"\n",(0,a.jsxs)(i.ol,{children:["\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsx)(i.p,{children:"Import Retry: Automatically retry failed import tasks caused by temporary failures."}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsx)(i.p,{children:"Load Balancing: Distribute import tasks to different BE nodes to avoid excessive pressure on a single point."}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsx)(i.p,{children:"Transaction Mechanism: Ensure data consistency, automatically rollback in case of failure."}),"\n"]}),"\n"]})]})}function h(e={}){let{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},250065:function(e,i,n){n.d(i,{Z:function(){return s},a:function(){return l}});var t=n(667294);let a={},r=t.createContext(a);function l(e){let i=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);