"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["83950"],{772995:function(e,n,t){t.r(n),t.d(n,{default:()=>d,frontMatter:()=>l,metadata:()=>s,assets:()=>c,toc:()=>u,contentTitle:()=>i});var s=JSON.parse('{"id":"sql-manual/sql-functions/aggregate-functions/kurt","title":"KURT,KURT_POP,KURTOSIS","description":"Description","source":"@site/docs/sql-manual/sql-functions/aggregate-functions/kurt.md","sourceDirName":"sql-manual/sql-functions/aggregate-functions","slug":"/sql-manual/sql-functions/aggregate-functions/kurt","permalink":"/docs/dev/sql-manual/sql-functions/aggregate-functions/kurt","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"KURT,KURT_POP,KURTOSIS","language":"en"},"sidebar":"docs","previous":{"title":"INTERSECT_COUNT","permalink":"/docs/dev/sql-manual/sql-functions/aggregate-functions/intersect-count"},"next":{"title":"LINEAR_HISTOGRAM","permalink":"/docs/dev/sql-manual/sql-functions/aggregate-functions/linear-histogram"}}'),a=t("785893"),r=t("250065");let l={title:"KURT,KURT_POP,KURTOSIS",language:"en"},i=void 0,c={},u=[{value:"Description",id:"description",level:2},{value:"Alias",id:"alias",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Example",id:"example",level:2}];function o(e){let n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,a.jsxs)(n.p,{children:["The KURTOSIS function calculates the ",(0,a.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Kurtosis",children:"kurtosis"})," of the data. The formula used is: fourth central moment / (variance squared) - 3."]}),"\n",(0,a.jsx)(n.h2,{id:"alias",children:"Alias"}),"\n",(0,a.jsx)(n.p,{children:"KURT_POP, KURTOSIS"}),"\n",(0,a.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"KURTOSIS(<expr>)\nKURT_POP(<expr>)\nKURT(<expr>)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsx)(n.tbody,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"<expr>"})}),(0,a.jsx)(n.td,{children:"The expression to calculate, type Double supported."})]})})]}),"\n",(0,a.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,a.jsx)(n.p,{children:"Returns a DOUBLE value.\nReturns NULL when variance is zero.\nReturns NULL when there is no valid data in the group."}),"\n",(0,a.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'-- setup\ncreate table statistic_test(\n    tag int,\n    val1 double,\n    val2 double\n) distributed by hash(tag) buckets 1\nproperties ("replication_num"="1");\ninsert into statistic_test values\n    (1, -10, -10),\n    (2, -20, null),\n    (3, 100, null),\n    (4, 100, null),\n    (5, 1000, 1000);\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"select kurt(val1), kurt(val2) from statistic_test;\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"+---------------------+------------+\n| kurt(val1)          | kurt(val2) |\n+---------------------+------------+\n| 0.16212458373485106 |         -2 |\n+---------------------+------------+\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"select kurt(val1), kurt(val2) from statistic_test group by tag;\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"+------------+------------+\n| kurt(val1) | kurt(val2) |\n+------------+------------+\n|       NULL |       NULL |\n|       NULL |       NULL |\n|       NULL |       NULL |\n|       NULL |       NULL |\n|       NULL |       NULL |\n+------------+------------+\n"})})]})}function d(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return i},a:function(){return l}});var s=t(667294);let a={},r=s.createContext(a);function l(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);