"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["968446"],{871241:function(e,n,t){t.r(n),t.d(n,{default:()=>h,frontMatter:()=>d,metadata:()=>i,assets:()=>o,toc:()=>c,contentTitle:()=>s});var i=JSON.parse('{"id":"table-design/data-partitioning/dynamic-partitioning","title":"Dynamic Partitioning","description":"Dynamic partitioning will add and remove partitions in a rolling manner according to predefined rules, thereby managing the lifecycle of table partitions (TTL) and reducing data storage pressure. In scenarios such as log management and time-series data management, dynamic partitioning can typically be used to roll-delete expired data.","source":"@site/docs/table-design/data-partitioning/dynamic-partitioning.md","sourceDirName":"table-design/data-partitioning","slug":"/table-design/data-partitioning/dynamic-partitioning","permalink":"/docs/dev/table-design/data-partitioning/dynamic-partitioning","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Dynamic Partitioning","language":"zh-CN"},"sidebar":"docs","previous":{"title":"Manual partitioning","permalink":"/docs/dev/table-design/data-partitioning/manual-partitioning"},"next":{"title":"Auto Partition","permalink":"/docs/dev/table-design/data-partitioning/auto-partitioning"}}'),a=t("785893"),r=t("250065");let d={title:"Dynamic Partitioning",language:"zh-CN"},s=void 0,o={},c=[{value:"Usage Restrictions",id:"usage-restrictions",level:2},{value:"Creating Dynamic Partitions",id:"creating-dynamic-partitions",level:2},{value:"Managing Dynamic Partitions",id:"managing-dynamic-partitions",level:2},{value:"Modifying Dynamic Partition Properties",id:"modifying-dynamic-partition-properties",level:3},{value:"\u67E5\u770B\u52A8\u6001\u5206\u533A\u8C03\u5EA6\u60C5\u51B5",id:"\u67E5\u770B\u52A8\u6001\u5206\u533A\u8C03\u5EA6\u60C5\u51B5",level:3},{value:"Historical Partition Management",id:"historical-partition-management",level:3},{value:"Dynamic Partition Parameter Description",id:"dynamic-partition-parameter-description",level:2},{value:"Dynamic Partition Property Parameters",id:"dynamic-partition-property-parameters",level:3},{value:"FE Configuration Parameters",id:"fe-configuration-parameters",level:3},{value:"Dynamic Partition Best Practices",id:"dynamic-partition-best-practices",level:2}];function l(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Dynamic partitioning will add and remove partitions in a rolling manner according to predefined rules, thereby managing the lifecycle of table partitions (TTL) and reducing data storage pressure. In scenarios such as log management and time-series data management, dynamic partitioning can typically be used to roll-delete expired data."}),"\n",(0,a.jsx)(n.p,{children:"The diagram below illustrates lifecycle management using dynamic partitioning, with the following rules specified:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["The dynamic partition scheduling unit ",(0,a.jsx)(n.code,{children:"dynamic_partition.time_unit"})," is set to DAY, organizing partitions by day;"]}),"\n",(0,a.jsxs)(n.li,{children:["The dynamic partition start offset ",(0,a.jsx)(n.code,{children:"dynamic_partition.start"})," is set to -1, retaining the partition from one day ago;"]}),"\n",(0,a.jsxs)(n.li,{children:["The dynamic partition end offset ",(0,a.jsx)(n.code,{children:"dynamic_partition.end"})," is set to 2, retaining partitions for the next two days."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"According to the above rules, as time progresses, a total of 4 partitions will always be retained: the partition from the past day, the current day partition, and the partitions for the next two days."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"dynamic-partition",src:t(105527).Z+"",width:"3196",height:"1668"})}),"\n",(0,a.jsx)(n.h2,{id:"usage-restrictions",children:"Usage Restrictions"}),"\n",(0,a.jsx)(n.p,{children:"When using dynamic partitioning, the following rules must be followed:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Dynamic partitioning will fail when used simultaneously with Cross-Cluster Replication (CCR)."}),"\n",(0,a.jsx)(n.li,{children:"Dynamic partitioning only supports Range type partitions on DATE/DATETIME columns."}),"\n",(0,a.jsx)(n.li,{children:"Dynamic partitioning only supports a single partition key."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"creating-dynamic-partitions",children:"Creating Dynamic Partitions"}),"\n",(0,a.jsxs)(n.p,{children:["When creating a table, you can create a dynamic partitioned table by specifying the ",(0,a.jsx)(n.code,{children:"dynamic_partition"})," property."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE test_dynamic_partition(\n    order_id    BIGINT,\n    create_dt   DATE,\n    username    VARCHAR(20)\n)\nDUPLICATE KEY(order_id)\nPARTITION BY RANGE(create_dt) ()\nDISTRIBUTED BY HASH(order_id) BUCKETS 10\nPROPERTIES(\n    "dynamic_partition.enable" = "true",\n    "dynamic_partition.time_unit" = "DAY",\n    "dynamic_partition.start" = "-1",\n    "dynamic_partition.end" = "2",\n    "dynamic_partition.prefix" = "p",\n    "dynamic_partition.create_history_partition" = "true"\n);\n'})}),"\n",(0,a.jsx)(n.p,{children:"In the example above, a dynamic partitioned table was created with the following specifications."}),"\n",(0,a.jsxs)(n.p,{children:["For detailed ",(0,a.jsx)(n.code,{children:"dynamic_partition"})," parameters, refer to ",(0,a.jsx)(n.a,{href:"#dynamic-partition-property-parameters",children:"Dynamic Partition Parameter Description"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"managing-dynamic-partitions",children:"Managing Dynamic Partitions"}),"\n",(0,a.jsx)(n.h3,{id:"modifying-dynamic-partition-properties",children:"Modifying Dynamic Partition Properties"}),"\n",(0,a.jsx)(n.admonition,{title:"Tip:",type:"info",children:(0,a.jsxs)(n.p,{children:["When using the ALTER TABLE statement to modify dynamic partitioning, the changes will not take effect immediately. The dynamic partitions will be polled and checked at intervals specified by the ",(0,a.jsx)(n.code,{children:"dynamic_partition_check_interval_seconds"})," parameter to complete the necessary partition creation and deletion operations."]})}),"\n",(0,a.jsx)(n.p,{children:"In the example below, the ALTER TABLE statement is used to modify a non-dynamic partitioned table to a dynamic partitioned table:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE test_dynamic_partition(\n    order_id    BIGINT,\n    create_dt   DATE,\n    username    VARCHAR(20)\n)\nDUPLICATE KEY(order_id)\nDISTRIBUTED BY HASH(order_id) BUCKETS 10;\n\nALTER TABLE test_partition SET (\n    "dynamic_partition.enable" = "true",\n    "dynamic_partition.time_unit" = "DAY",\n    "dynamic_partition.start" = "-1",\n    "dynamic_partition.end" = "2",\n    "dynamic_partition.prefix" = "p",\n    "dynamic_partition.create_history_partition" = "true"\n);\n\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\u67E5\u770B\u52A8\u6001\u5206\u533A\u8C03\u5EA6\u60C5\u51B5",children:"\u67E5\u770B\u52A8\u6001\u5206\u533A\u8C03\u5EA6\u60C5\u51B5"}),"\n",(0,a.jsxs)(n.p,{children:["\u901A\u8FC7 ",(0,a.jsx)(n.a,{href:"/docs/dev/sql-manual/sql-statements/table-and-view/table/SHOW-DYNAMIC-PARTITION-TABLES",children:"SHOW-DYNAMIC-PARTITION"})," \u53EF\u4EE5\u67E5\u770B\u5F53\u524D\u6570\u636E\u5E93\u4E0B\uFF0C\u6240\u6709\u52A8\u6001\u5206\u533A\u8868\u7684\u8C03\u5EA6\u60C5\u51B5\uFF1A"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SHOW DYNAMIC PARTITION TABLES;\n+-----------+--------+----------+-------------+------+--------+---------+-----------+----------------+---------------------+--------+------------------------+----------------------+-------------------------+\n| TableName | Enable | TimeUnit | Start       | End  | Prefix | Buckets | StartOf   | LastUpdateTime | LastSchedulerTime   | State  | LastCreatePartitionMsg | LastDropPartitionMsg | ReservedHistoryPeriods  |\n+-----------+--------+----------+-------------+------+--------+---------+-----------+----------------+---------------------+--------+------------------------+----------------------+-------------------------+\n| d3        | true   | WEEK     | -3          | 3    | p      | 1       | MONDAY    | N/A            | 2020-05-25 14:29:24 | NORMAL | N/A                    | N/A                  | [2021-12-01,2021-12-31] |\n| d5        | true   | DAY      | -7          | 3    | p      | 32      | N/A       | N/A            | 2020-05-25 14:29:24 | NORMAL | N/A                    | N/A                  | NULL                    |\n| d4        | true   | WEEK     | -3          | 3    | p      | 1       | WEDNESDAY | N/A            | 2020-05-25 14:29:24 | NORMAL | N/A                    | N/A                  | NULL                    | \n| d6        | true   | MONTH    | -2147483648 | 2    | p      | 8       | 3rd       | N/A            | 2020-05-25 14:29:24 | NORMAL | N/A                    | N/A                  | NULL                    |\n| d2        | true   | DAY      | -3          | 3    | p      | 32      | N/A       | N/A            | 2020-05-25 14:29:24 | NORMAL | N/A                    | N/A                  | NULL                    |\n| d7        | true   | MONTH    | -2147483648 | 5    | p      | 8       | 24th      | N/A            | 2020-05-25 14:29:24 | NORMAL | N/A                    | N/A                  | NULL                    |\n+-----------+--------+----------+-------------+------+--------+---------+-----------+----------------+---------------------+--------+------------------------+----------------------+-------------------------+\n7 rows in set (0.02 sec)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"historical-partition-management",children:"Historical Partition Management"}),"\n",(0,a.jsxs)(n.p,{children:["When specifying the number of dynamic partitions using the ",(0,a.jsx)(n.code,{children:"start"})," and ",(0,a.jsx)(n.code,{children:"end"})," attributes, historical partitions are not created all at once to avoid long waiting times. Only partitions after the current time are created. If you need to create all partitions at once, you must enable the ",(0,a.jsx)(n.code,{children:"create_history_partition"})," parameter."]}),"\n",(0,a.jsxs)(n.p,{children:["For example, if the current date is 2024-10-11 and you set ",(0,a.jsx)(n.code,{children:"start = -2"})," and ",(0,a.jsx)(n.code,{children:"end = 2"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["If ",(0,a.jsx)(n.code,{children:"create_history_partition = true"})," is specified, all partitions are created immediately, resulting in five partitions: [10-09, 10-13]."]}),"\n",(0,a.jsxs)(n.li,{children:["If ",(0,a.jsx)(n.code,{children:"create_history_partition = false"})," is specified, only partitions from 10-11 onwards are created, resulting in three partitions: [10-11, 10-13]."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"dynamic-partition-parameter-description",children:"Dynamic Partition Parameter Description"}),"\n",(0,a.jsx)(n.h3,{id:"dynamic-partition-property-parameters",children:"Dynamic Partition Property Parameters"}),"\n",(0,a.jsxs)(n.p,{children:["Dynamic partition rule parameters are prefixed with ",(0,a.jsx)(n.code,{children:"dynamic_partition"})," and can be set with the following rule parameters:"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Required"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"dynamic_partition.enable"})}),(0,a.jsx)(n.td,{children:"No"}),(0,a.jsx)(n.td,{children:"Whether to enable the dynamic partition feature. Can be set to TRUE or FALSE. If other required dynamic partition parameters are specified, it defaults to TRUE."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"dynamic_partition.time_unit"})}),(0,a.jsx)(n.td,{children:"Yes"}),(0,a.jsxs)(n.td,{children:["The unit of dynamic partition scheduling. Can be set to ",(0,a.jsx)(n.code,{children:"HOUR"}),", ",(0,a.jsx)(n.code,{children:"DAY"}),", ",(0,a.jsx)(n.code,{children:"WEEK"}),", ",(0,a.jsx)(n.code,{children:"MONTH"}),", or ",(0,a.jsx)(n.code,{children:"YEAR"}),", indicating partition creation or deletion by hour, day, week, month, or year respectively."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"dynamic_partition.start"})}),(0,a.jsx)(n.td,{children:"No"}),(0,a.jsxs)(n.td,{children:["The starting offset for dynamic partitions, which is a negative number. The default value is -2147483648, meaning historical partitions are not deleted. Depending on the ",(0,a.jsx)(n.code,{children:"time_unit"})," attribute, partitions before this offset based on the current day (week/month) will be deleted. Whether historical partitions after this offset up to the current time are created depends on ",(0,a.jsx)(n.code,{children:"dynamic_partition.create_history_partition"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"dynamic_partition.end"})}),(0,a.jsx)(n.td,{children:"Yes"}),(0,a.jsxs)(n.td,{children:["The ending offset for dynamic partitions, which is a positive number. Depending on the ",(0,a.jsx)(n.code,{children:"time_unit"})," attribute, partitions within the specified range ahead of the current day (week/month) are created in advance."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"dynamic_partition.prefix"})}),(0,a.jsx)(n.td,{children:"Yes"}),(0,a.jsx)(n.td,{children:"The prefix for dynamically created partition names."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"dynamic_partition.buckets"})}),(0,a.jsx)(n.td,{children:"No"}),(0,a.jsxs)(n.td,{children:["The number of buckets corresponding to dynamically created partitions. Setting this parameter will override the number of buckets specified in ",(0,a.jsx)(n.code,{children:"DISTRIBUTED"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"dynamic_partition.replication_num"})}),(0,a.jsx)(n.td,{children:"No"}),(0,a.jsx)(n.td,{children:"The number of replicas corresponding to dynamically created partitions. If not specified, it defaults to the number of replicas specified when the table was created."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"dynamic_partition.create_history_partition"})}),(0,a.jsx)(n.td,{children:"No"}),(0,a.jsxs)(n.td,{children:["Defaults to false. When set to true, Doris will automatically create all partitions according to the rules below. Additionally, the FE parameter ",(0,a.jsx)(n.code,{children:"max_dynamic_partition_num"})," will limit the total number of partitions to avoid creating too many partitions at once. If the number of partitions to be created exceeds the ",(0,a.jsx)(n.code,{children:"max_dynamic_partition_num"})," value, the operation will be prohibited. This parameter does not take effect if the ",(0,a.jsx)(n.code,{children:"start"})," attribute is not specified."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"dynamic_partition.history_partition_num"})}),(0,a.jsx)(n.td,{children:"No"}),(0,a.jsxs)(n.td,{children:["When ",(0,a.jsx)(n.code,{children:"create_history_partition"})," is set to ",(0,a.jsx)(n.code,{children:"true"}),", this parameter specifies the number of historical partitions to create. The default value is -1, meaning it is not set. This variable functions the same as ",(0,a.jsx)(n.code,{children:"dynamic_partition.start"}),", and it is recommended to set only one of them simultaneously."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"dynamic_partition.start_day_of_week"})}),(0,a.jsx)(n.td,{children:"No"}),(0,a.jsxs)(n.td,{children:["When ",(0,a.jsx)(n.code,{children:"time_unit"})," is set to ",(0,a.jsx)(n.code,{children:"WEEK"}),", this parameter specifies the starting day of the week. Values range from 1 to 7, where 1 represents Monday and 7 represents Sunday. The default is 1, meaning the week starts on Monday."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"dynamic_partition.start_day_of_month"})}),(0,a.jsx)(n.td,{children:"No"}),(0,a.jsxs)(n.td,{children:["When ",(0,a.jsx)(n.code,{children:"time_unit"})," is set to ",(0,a.jsx)(n.code,{children:"MONTH"}),", this parameter specifies the starting date of the month. Values range from 1 to 28, where 1 represents the first day of the month and 28 represents the 28th day. The default is 1, meaning the month starts on the first day. Starting on the 29th, 30th, or 31st is not supported to avoid ambiguities caused by leap years or leap months."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"dynamic_partition.reserved_history_periods"})}),(0,a.jsx)(n.td,{children:"No"}),(0,a.jsxs)(n.td,{children:["The time range of historical partitions that need to be retained. When ",(0,a.jsx)(n.code,{children:"dynamic_partition.time_unit"}),' is set to "DAY/WEEK/MONTH/YEAR", it should be set in the format ',(0,a.jsx)(n.code,{children:"[yyyy-MM-dd,yyyy-MM-dd],[...,...]"}),". When ",(0,a.jsx)(n.code,{children:"dynamic_partition.time_unit"}),' is set to "HOUR", it should be set in the format ',(0,a.jsx)(n.code,{children:"[yyyy-MM-dd HH:mm:ss,yyyy-MM-dd HH:mm:ss],[...,...]"}),". If not set, it defaults to ",(0,a.jsx)(n.code,{children:'"NULL"'}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"dynamic_partition.time_zone"})}),(0,a.jsx)(n.td,{children:"No"}),(0,a.jsxs)(n.td,{children:["The time zone for dynamic partitioning, which defaults to the server's system time zone, such as ",(0,a.jsx)(n.code,{children:"Asia/Shanghai"}),". For more time zone settings, refer to ",(0,a.jsx)(n.a,{href:"../../admin-manual/cluster-management/time-zone",children:"Time Zone Management"}),"."]})]})]})]}),"\n",(0,a.jsx)(n.h3,{id:"fe-configuration-parameters",children:"FE Configuration Parameters"}),"\n",(0,a.jsxs)(n.p,{children:["Dynamic partition parameter configurations in FE can be modified in the FE configuration file or via the ",(0,a.jsx)(n.code,{children:"ADMIN SET FRONTEND CONFIG"})," command:"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Default Value"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"dynamic_partition_enable"})}),(0,a.jsx)(n.td,{children:"false"}),(0,a.jsx)(n.td,{children:"Whether to enable Doris's dynamic partition feature. This parameter only affects partition operations of dynamic partition tables and does not affect regular tables."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"dynamic_partition_check_interval_seconds"})}),(0,a.jsx)(n.td,{children:"600"}),(0,a.jsx)(n.td,{children:"The execution frequency of the dynamic partition thread, in seconds."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"max_dynamic_partition_num"})}),(0,a.jsx)(n.td,{children:"500"}),(0,a.jsx)(n.td,{children:"Limits the maximum number of partitions that can be created when creating a dynamic partition table to avoid creating too many partitions at once."})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"dynamic-partition-best-practices",children:"Dynamic Partition Best Practices"}),"\n",(0,a.jsx)(n.p,{children:"Example 1: Partition by day, retain partitions for the past 7 days and the current day, and pre-create partitions for the next 3 days."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE tbl1 (\n    order_id    BIGINT,\n    create_dt   DATE,\n    username    VARCHAR(20)\n)\nPARTITION BY RANGE(create_dt) ()\nDISTRIBUTED BY HASH(create_dt)\nPROPERTIES (\n    "dynamic_partition.enable" = "true",\n    "dynamic_partition.time_unit" = "DAY",\n    "dynamic_partition.start" = "-7",\n    "dynamic_partition.end" = "3",\n    "dynamic_partition.prefix" = "p",\n    "dynamic_partition.buckets" = "32"\n);\n'})}),"\n",(0,a.jsx)(n.p,{children:"Example 2: Partition by month, do not delete historical partitions, and pre-create partitions for the next 2 months. Additionally, set the starting day to the 3rd of each month."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE tbl1 (\n    order_id    BIGINT,\n    create_dt   DATE,\n    username    VARCHAR(20)\n)\nPARTITION BY RANGE(create_dt) ()\nDISTRIBUTED BY HASH(create_dt)\nPROPERTIES (\n    "dynamic_partition.enable" = "true",\n    "dynamic_partition.time_unit" = "MONTH",\n    "dynamic_partition.end" = "2",\n    "dynamic_partition.prefix" = "p",\n    "dynamic_partition.buckets" = "8",\n    "dynamic_partition.start_day_of_month" = "3"\n);\n'})}),"\n",(0,a.jsx)(n.p,{children:"Example 3: Partition by day, retain partitions for the past 10 days and the next 10 days, and retain historical data during the periods [2020-06-01, 2020-06-20] and [2020-10-31, 2020-11-15]."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE tbl1 (\n    order_id    BIGINT,\n    create_dt   DATE,\n    username    VARCHAR(20)\n)\nPARTITION BY RANGE(create_dt) ()\nDISTRIBUTED BY HASH(create_dt)\nPROPERTIES (\n    "dynamic_partition.enable" = "true",\n    "dynamic_partition.time_unit" = "DAY",\n    "dynamic_partition.start" = "-10",\n    "dynamic_partition.end" = "10",\n    "dynamic_partition.prefix" = "p",\n    "dynamic_partition.buckets" = "8",\n    "dynamic_partition.reserved_history_periods"="[2020-06-01,2020-06-20],[2020-10-31,2020-11-15]"\n);\n'})})]})}function h(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},105527:function(e,n,t){t.d(n,{Z:function(){return i}});let i=t.p+"assets/images/dynamic-partition-cbc81f6bbb5876c1d7f81a6c921cb533.png"},250065:function(e,n,t){t.d(n,{Z:function(){return s},a:function(){return d}});var i=t(667294);let a={},r=i.createContext(a);function d(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);