"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["470804"],{362481:function(e,i,s){s.r(i),s.d(i,{assets:function(){return c},contentTitle:function(){return l},default:function(){return o},frontMatter:function(){return t},metadata:function(){return n},toc:function(){return a}});var n=s(634346),r=s(785893),h=s(250065);let t={title:"Apache Doris 3.0.1 just released",summary:"In this version, Apache Doris has improvements in compute-storage decoupling, lakehouse, semi-structured data analysis and more.",description:"In this version, Apache Doris has improvements in compute-storage decoupling, lakehouse, semi-structured data analysis and more.",date:"2024-08-23",author:"Apache Doris",tags:["Release Notes"],image:"/images/3.0.1.jpg"},l=void 0,c={authorsImageUrls:[void 0]},a=[{value:"Behavior Changes",id:"behavior-changes",level:2},{value:"Query Optimizer",id:"query-optimizer",level:3},{value:"Query Execution",id:"query-execution",level:3},{value:"Storage",id:"storage",level:3},{value:"New Features",id:"new-features",level:2},{value:"Job Scheduling",id:"job-scheduling",level:3},{value:"Compute-Storage Decoupled",id:"compute-storage-decoupled",level:3},{value:"Lakehouse",id:"lakehouse",level:3},{value:"Asynchronous Materialized Views",id:"asynchronous-materialized-views",level:3},{value:"Query Execution",id:"query-execution-1",level:3},{value:"Semi-Structured Data Management",id:"semi-structured-data-management",level:3},{value:"Other",id:"other",level:3},{value:"Improvements",id:"improvements",level:2},{value:"Storage",id:"storage-1",level:3},{value:"Compute-Storage Decoupled",id:"compute-storage-decoupled-1",level:3},{value:"Lakehouse",id:"lakehouse-1",level:3},{value:"Asynchronous Materialized Views",id:"asynchronous-materialized-views-1",level:3},{value:"MySQL Compatibility",id:"mysql-compatibility",level:3},{value:"Query Optimizer",id:"query-optimizer-1",level:3},{value:"Query Execution",id:"query-execution-2",level:3},{value:"Semi-Structured Data Management",id:"semi-structured-data-management-1",level:3},{value:"Other",id:"other-1",level:3},{value:"Bug Fixes",id:"bug-fixes",level:2},{value:"Upgrade",id:"upgrade",level:3},{value:"Load",id:"load",level:3},{value:"Storage",id:"storage-2",level:3},{value:"Compute-Storage Decoupled",id:"compute-storage-decoupled-2",level:3},{value:"Lakehouse",id:"lakehouse-2",level:3},{value:"MySQL Compatibility",id:"mysql-compatibility-1",level:3},{value:"Asynchronous Materialized Views",id:"asynchronous-materialized-views-2",level:3},{value:"Synchronous Materialized Views",id:"synchronous-materialized-views",level:3},{value:"Query Optimizer",id:"query-optimizer-2",level:3},{value:"Query Execution",id:"query-execution-3",level:3},{value:"Semi-Structured Data Management",id:"semi-structured-data-management-2",level:3},{value:"Other",id:"other-2",level:3},{value:"Credits",id:"credits",level:2}];function d(e){let i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,h.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:"Dear community members, the Apache Doris 3.0.1 version was officially released on August 23, 2024, featuring updates and improvements in compute-storage decoupling, lakehouse, semi-structured data analysis, asynchronous materialized views, and more."}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Quick Download:"})," ",(0,r.jsx)(i.a,{href:"https://doris.apache.org/download/",children:"https://doris.apache.org/download/"})]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"GitHub Release:"})," ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/releases",children:"https://github.com/apache/doris/releases"})]}),"\n",(0,r.jsx)(i.h2,{id:"behavior-changes",children:"Behavior Changes"}),"\n",(0,r.jsx)(i.h3,{id:"query-optimizer",children:"Query Optimizer"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Added the variable ",(0,r.jsx)(i.code,{children:"use_max_length_of_varchar_in_ctas"})," to control the length behavior of VARCHAR type when executing ",(0,r.jsx)(i.code,{children:"CREATE TABLE AS SELECT"})," (CTAS) operations.  ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37069",children:"#37069"})]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"This variable is set to true by default."}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"When set to true, if the VARCHAR type column originates from a table, the derived length is used; otherwise, the maximum length is used."}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"When set to false, the VARCHAR type will always use the derived length."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["All data types will now be displayed in lowercase to maintain compatibility with MySQL format. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38012",children:"#38012"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Multiple query statements in the same query request must now be separated by semicolons. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38670",children:"#38670"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"query-execution",children:"Query Execution"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["The default number of parallel tasks after shuffle operations in the cluster is set to 100, which will improve query stability and concurrent processing capability in large clusters. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38196",children:"#38196"})]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"storage",children:"Storage"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["The default value of ",(0,r.jsx)(i.code,{children:"trash_file_expire_time_sec"})," has been changed from 86400 seconds to 0 seconds, which means that if files are deleted by mistake and the FE trash is cleared, the data cannot be recovered."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["The table attribute ",(0,r.jsx)(i.code,{children:"enable_mow_delete_on_delete_predicate"})," (introduced in version 3.0.0) has been renamed to ",(0,r.jsx)(i.code,{children:"enable_mow_light_delete"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"Explicit transactions are now prohibited from performing delete operations on tables with written data."}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"Heavy schema change operations are prohibited on tables with auto-increment fields."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"new-features",children:"New Features"}),"\n",(0,r.jsx)(i.h3,{id:"job-scheduling",children:"Job Scheduling"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Optimized the execution logic of internal scheduling jobs, decoupling the strong association between start time and immediate execution parameters. Now, tasks can be created with a specified start time or selected for immediate execution, without conflict, enhancing scheduling flexibility. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/36805",children:"#36805"})]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"compute-storage-decoupled",children:"Compute-Storage Decoupled"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Supports dynamic modification of the upper limit for file cache usage. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37484",children:"#37484"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Recycler now supports object storage rate limiting and server-side rate limiting retry functionality. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37663",children:"#37663"})," ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37680",children:"#37680"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"lakehouse",children:"Lakehouse"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Added the session variable ",(0,r.jsx)(i.code,{children:"serde_dialect"})," to set the output format for complex types. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37039",children:"#37039"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"SQL interception now supports external tables."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["For more information, refer to the documentation on  ",(0,r.jsx)(i.a,{href:"https://doris.apache.org/docs/admin-manual/query-admin/sql-interception",children:"SQL Interception"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Insert overwrite now supports Iceberg tables. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37191",children:"#37191"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"asynchronous-materialized-views",children:"Asynchronous Materialized Views"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Supports partition roll-up and build at the hourly level. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37678",children:"#37678"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Supports atomic replacement of asynchronous materialized view definition statements. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/36749",children:"#36749"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Transparent rewriting now supports Insert statements. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38115",children:"#38115"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Transparent rewriting now supports the VARIANT type. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37929",children:"#37929"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"query-execution-1",children:"Query Execution"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["The group concat function now supports DISTINCT and ORDER BY options. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38744",children:"#38744"})]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"semi-structured-data-management",children:"Semi-Structured Data Management"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["The ES Catalog now maps ",(0,r.jsx)(i.code,{children:"nested"})," or ",(0,r.jsx)(i.code,{children:"object"})," types in Elasticsearch to the JSON type in Doris. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37101",children:"#37101"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Added the ",(0,r.jsx)(i.code,{children:"MULTI_MATCH"})," function, which supports matching keywords across multiple fields and can leverage inverted indexes to accelerate searches. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37722",children:"#37722"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Added the ",(0,r.jsx)(i.code,{children:"explode_json_object"})," function, which can unfold objects in JSON data into multiple rows. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/36887",children:"#36887"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Inverted indexes now support memtable advancement, requiring index construction only once during multi-replica writes, reducing CPU consumption and improving performance. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/35891",children:"#35891"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Added ",(0,r.jsx)(i.code,{children:"MATCH_PHRASE"})," support for positive slop, e.g., ",(0,r.jsx)(i.code,{children:"msg MATCH_PHRASE 'a b 2+'"})," can match instances containing words a and b with a slop of no more than two, and a preceding b; regular slop without the final ",(0,r.jsx)(i.code,{children:"+"})," does not guarantee this order. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/36356",children:"#36356"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"other",children:"Other"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Added the FE parameter ",(0,r.jsx)(i.code,{children:"skip_audit_user_list"}),", where user operations specified in this configuration will not be recorded in the audit log. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38310",children:"#38310"})]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["For more information, refer to the documentation on ",(0,r.jsx)(i.a,{href:"https://doris.apache.org/docs/admin-manual/audit-plugin/",children:"Audit Plugin"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"improvements",children:"Improvements"}),"\n",(0,r.jsx)(i.h3,{id:"storage-1",children:"Storage"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Reduced the likelihood of write failures caused by disk balancing within a single BE. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38000",children:"#38000"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Decreased memory consumption by the memtable limiter. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37511",children:"#37511"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Moved old partitions to the FE trash during partition replacement operations. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/36361",children:"#36361"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized memory consumption during compaction. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37099",children:"#37099"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Added a session variable to control audit logs for JDBC PreparedStatement, with default setting to not print. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38419",children:"#38419"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized the logic for selecting BEs for group commits. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/35558",children:"#35558"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Improved the performance of column updates. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38487",children:"#38487"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized the use of ",(0,r.jsx)(i.code,{children:"delete bitmap cache"}),". ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38761",children:"#38761"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Added a configuration to control query affinity during hot and cold tiering. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37492",children:"#37492"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"compute-storage-decoupled-1",children:"Compute-Storage Decoupled"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Implemented automatic retries when encountering object storage server rate limiting. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37199",children:"#37199"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Adapted the number of threads for memtable flush in the compute-storage decoupled mode. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38789",children:"#38789"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"Added Azure as a compile option to support compilation in environments without Azure support."}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized the observability of object storage access rate limiting. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38294",children:"#38294"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Allowed the file cache TTL queue to perform LRU eviction, enhancing TTL queue usability. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37312",children:"#37312"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized the number of balance writeeditlog IO operations in the storage and compute separation mode. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37787",children:"#37787"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Improved table creation speed in the storage and compute separation mode by sending tablet creation requests in batches. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/36786",children:"#36786"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized read failures caused by potential inconsistencies in the local file cache through backoff retries. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38645",children:"#38645"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"lakehouse-1",children:"Lakehouse"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized memory statistics for Parquet/ORC format read and write operations. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37234",children:"#37234"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Trino Connector Catalog now supports predicate pushdown. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37874",children:"#37874"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Added a session variable ",(0,r.jsx)(i.code,{children:"enable_count_push_down_for_external_table"})," to control whether to enable ",(0,r.jsx)(i.code,{children:"count(*)"})," pushdown optimization for external tables. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37046",children:"#37046"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized the read logic for Hudi snapshot reads, returning an empty set when the snapshot is empty, consistent with Spark behavior. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37702",children:"#37702"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Improved the read performance of partition columns for Hive tables. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37377",children:"#37377"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"asynchronous-materialized-views-1",children:"Asynchronous Materialized Views"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Improved transparent rewrite plan speed by 20%. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37197",children:"#37197"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Eliminated roll-up during transparent rewrite if the group key satisfies data uniqueness for better nested matching. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38387",children:"#38387"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Transparent rewrite now performs better aggregation elimination to improve the matching success rate of nested materialized views. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/36888",children:"#36888"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"mysql-compatibility",children:"MySQL Compatibility"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Now correctly populates the database name, table name, and original name in the MySQL protocol result columns. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38126",children:"#38126"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Supported the hint format ",(0,r.jsx)(i.code,{children:"/*+ func(value) */"}),". ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37720",children:"#37720"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"query-optimizer-1",children:"Query Optimizer"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Significantly improved the plan speed for complex queries. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38317",children:"#38317"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Adaptively chose whether to perform bucket shuffle based on the number of data buckets to avoid performance degradation in extreme cases. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/36784",children:"#36784"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized the cost estimation logic for SEMI / ANTI JOIN. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37951",children:"#37951"})," ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37060",children:"#37060"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Supported pushing Limit down to the first stage of aggregation to improve performance. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/34853",children:"#34853"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Partition pruning now supports filter conditions containing the ",(0,r.jsx)(i.code,{children:"date_trunc"})," or ",(0,r.jsx)(i.code,{children:"date"})," function. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38025",children:"#38025"})," ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38743",children:"#38743"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["SQL cache now supports query scenarios that include user variables. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37915",children:"#37915"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized error messages for invalid aggregation semantics. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38122",children:"#38122"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"query-execution-2",children:"Query Execution"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Adapted AggState compatibility from 2.1 to 3.x and fixed Coredump issues. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37104",children:"#37104"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Refactored the strategy selection for local shuffle without Join. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37282",children:"#37282"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Modified the scanner for internal table queries to be asynchronous to prevent stalling during such queries. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38403",children:"#38403"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized the block merge process during Hash table construction for Join operators. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37471",children:"#37471"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized the duration of lock holding for MultiCast. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37462",children:"#37462"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized gRPC keepAliveTime and added link monitoring to reduce the probability of query failure due to RPC errors. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37304",children:"#37304"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Cleaned up all dirty pages in jemalloc when memory limits were exceeded. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37164",children:"#37164"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized the processing performance of ",(0,r.jsx)(i.code,{children:"aes_encrypt"}),"/",(0,r.jsx)(i.code,{children:"decrypt"})," functions for constant types. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37194",children:"#37194"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized the processing performance of the ",(0,r.jsx)(i.code,{children:"json_extract"})," function for constant data. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/36927",children:"#36927"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized the processing performance of the ",(0,r.jsx)(i.code,{children:"ParseUrl"})," function for constant data. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/36882",children:"#36882"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"semi-structured-data-management-1",children:"Semi-Structured Data Management"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Bitmap indexes now default to using inverted indexes, with ",(0,r.jsx)(i.code,{children:"enable_create_bitmap_index_as_inverted_index"})," set to true by default. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/36692",children:"#36692"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["In the compute-storage decoupled mode, DESC can now view sub-columns of VARIANT type. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38143",children:"#38143"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Removed the step of checking file existence during inverted index queries to reduce access latency to remote storage. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/36945",children:"#36945"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Complex types ARRAY / MAP / STRUCT now support ",(0,r.jsx)(i.code,{children:"replace_if_not_null"})," for AGG tables. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38304",children:"#38304"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Escape characters for JSON data are now supported. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37176",children:"#37176"})," ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37251",children:"#37251"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Inverted index queries now behave consistently on MOW tables and DUP tables. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37428",children:"#37428"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized the performance of inverted index acceleration for IN queries. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37395",children:"#37395"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Reduced unnecessary memory allocation during TOPN queries to improve performance. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37429",children:"#37429"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["When creating an inverted index with tokenization, the ",(0,r.jsx)(i.code,{children:"support_phrase"})," option is now automatically enabled to accelerate ",(0,r.jsx)(i.code,{children:"match_phrase"})," series phrase queries. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37949",children:"#37949"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"other-1",children:"Other"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Audit log now can record SQL types. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37790",children:"#37790"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Added support for ",(0,r.jsx)(i.code,{children:"information_schema.processlist"})," to show all FE. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38701",children:"#38701"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Cached ranger's ",(0,r.jsx)(i.code,{children:"atamask"})," and ",(0,r.jsx)(i.code,{children:"rowpolicy"})," to accelerate query efficiency. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37723",children:"#37723"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized metadata management in job manager to release locks immediately after modifying metadata, reducing lock holding time. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38162",children:"#38162"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"bug-fixes",children:"Bug Fixes"}),"\n",(0,r.jsx)(i.h3,{id:"upgrade",children:"Upgrade"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue where ",(0,r.jsx)(i.code,{children:"mtmv load"})," fails during upgrade from version 2.1. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38799",children:"#38799"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve the issue where ",(0,r.jsx)(i.code,{children:"null_type"})," cannot be found during the upgrade to version 2.1. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/39373",children:"#39373"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Address the compatibility issue with permission persistence during the upgrade from version 2.1 to 3.0. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/39288",children:"#39288"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"load",children:"Load"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue where parsing fails when the newline character is surrounded by delimiters in CSV format parsing. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38347",children:"#38347"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve potential exception issues when FE forwards group commit. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38228",children:"#38228"})," ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38265",children:"#38265"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Group commit now supports the new optimizer. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37002",children:"#37002"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue where group commit reports data errors when JDBC setNull is used. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38262",children:"#38262"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimize the retry logic for group commit when encountering ",(0,r.jsx)(i.code,{children:"delete bitmap lock"})," errors. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37600",children:"#37600"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve the issue where routine load cannot use CSV delimiters and escape characters. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38402",children:"#38402"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue where routine load job names with mixed case cannot be displayed. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38523",children:"#38523"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimize the logic for actively recovering routine load during FE master-slave switching. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37876",children:"#37876"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve the issue where routine load pauses when all data in Kafka is expired. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37288",children:"#37288"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue where ",(0,r.jsx)(i.code,{children:"show routine load"})," returns empty results. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38199",children:"#38199"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve the memory leak issue during multi-table stream import in routine load. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38255",children:"#38255"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue where stream load does not return the error URL. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38325",children:"#38325"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve potential load channel leak issues. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38031",children:"#38031"})," ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37500",children:"#37500"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue where no error may be reported when importing fewer segments than expected. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/36753",children:"#36753"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve the load stream leak issue. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38912",children:"#38912"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimize the impact of offline nodes on import operations. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38198",children:"#38198"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue where transactions do not end when inserting into empty data. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38991",children:"#38991"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"storage-2",children:"Storage"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"01 Backup and Restoration"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue where tables cannot be written after backup and restoration. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37089",children:"#37089"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve the issue where view database names are incorrect after backup and restoration. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37412",children:"#37412"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"02 Compaction"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue where cumu compaction handles delete errors incorrectly during ordered data compression. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38742",children:"#38742"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve the issue of duplicate keys in aggregate tables caused by sequential compression optimization. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38224",children:"#38224"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue where compression operations cause coredump in large wide tables. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37960",children:"#37960"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve the compression starvation issue caused by inaccurate concurrent statistics of compression tasks. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37318",children:"#37318"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"03 MOW Unique Key"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve the issue of inconsistent data between replicas caused by cumulative compression deletion of delete sign. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37950",children:"#37950"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["MOW delete now uses partial column updates with the new optimizer. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38751",children:"#38751"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the potential duplicate key issue in MOW tables under compute-storage decoupled. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/39018",children:"#39018"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve the issue where MOW unique and duplicate tables cannot modify column order. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37067",children:"#37067"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the potential data correctness issue caused by segcompaction. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37760",children:"#37760"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve the potential memory leak issue during column updates. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37706",children:"#37706"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"04 Other"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the small probability of exceptions in TOPN queries. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/39119",children:"#39119"})," ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/39199",children:"#39199"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve the issue where auto-increment IDs may duplicate during FE restart. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37306",children:"#37306"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the potential queuing issue in the delete operation priority queue. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37169",children:"#37169"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimize the delete retry logic. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37363",children:"#37363"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve the issue with ",(0,r.jsx)(i.code,{children:"bucket = 0"})," in table creation statements under the new optimizer. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38971",children:"#38971"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue where FE reports success incorrectly when image generation fails. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37508",children:"#37508"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve the issue where using the wrong nodename during FE offline nodes may cause inconsistent FE members. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37987",children:"#37987"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue where CCR partition addition may fail. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37295",children:"#37295"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve the ",(0,r.jsx)(i.code,{children:"int32"})," overflow issue in inverted index files. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38891",children:"#38891"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue where TRUNCATE TABLE failure may cause BE to fail to go offline. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37334",children:"#37334"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Resolve the issue where publish cannot continue due to null pointers. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37724",children:"#37724"})," ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37531",children:"#37531"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the potential coredump issue when manually triggering disk migration. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37712",children:"#37712"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"compute-storage-decoupled-2",children:"Compute-Storage Decoupled"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where ",(0,r.jsx)(i.code,{children:"show create table"})," might display the ",(0,r.jsx)(i.code,{children:"file_cache_ttl_seconds"})," attribute twice. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38052",children:"#38052"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where segment Footer TTL was not set correctly after setting file cache TTL. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37485",children:"#37485"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where file cache might cause coredump due to massive conversion of cache types. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38518",children:"#38518"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the potential file descriptor (fd) leak in file cache. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38051",children:"#38051"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where schema change Job overwriting compaction Job prevented base tablet compaction from completing normally. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38210",children:"#38210"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the potential inaccuracy of base compaction score due to data race. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38006",children:"#38006"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where error messages from imports might not be uploaded correctly to object storage. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38359",children:"#38359"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the inconsistency in return information between compute-storage decoupled mode and storage and compute integration mode for 2PC imports. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38076",children:"#38076"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue where incorrect file size setting during file cache warm-up leads to coredump. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38939",children:"#38939"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where partial column updates did not correctly dequeue delete operations. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37151",children:"#37151"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed compatibility issues with permission persistence in compute-storage decoupled mode. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38136",children:"#38136"})," ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37708",children:"#37708"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where observer did not retry correctly when encountering a ",(0,r.jsx)(i.code,{children:"-230"})," error. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37625",children:"#37625"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where ",(0,r.jsx)(i.code,{children:"show load"})," with conditions did not perform correct analysis. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37656",children:"#37656"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where ",(0,r.jsx)(i.code,{children:"show streamload"})," in compute-storage decoupled mode caused BE coredump. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37903",children:"#37903"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where ",(0,r.jsx)(i.code,{children:"copy into"})," did not correctly verify column names in strict mode. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37650",children:"#37650"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where multi-stream imports into a single table lacked permissions. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38878",children:"#38878"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the potential overflow issue in ",(0,r.jsx)(i.code,{children:"getVersionUpdateTimeMs"}),". ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38074",children:"#38074"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where FE azure blob list was not implemented correctly. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37986",children:"#37986"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where inaccurate azure blob recycling time calculation prevented recycling. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37535",children:"#37535"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where inverted index files were not deleted in compute-storage decoupled mode. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38306",children:"#38306"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"lakehouse-2",children:"Lakehouse"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue with reading binary data from Oracle Catalog. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37078",children:"#37078"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the potential deadlock issue when acquiring external table metadata in multi-FE scenarios. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37756",children:"#37756"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where JNI scanner failure caused BE nodes to crash. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37697",children:"#37697"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue with slow reading of date types from Trino Connector Catalog. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37266",children:"#37266"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Optimized kerberos authentication logic for Hive Catalog. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37301",children:"#37301"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where region attributes might be parsed incorrectly when parsing MinIO properties. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37249",children:"#37249"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where creating too many FileSystems by FE caused memory leaks. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/36954",children:"#36954"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue with reading incorrect time zone information from Paimon. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37716",children:"#37716"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the potential thread leak issue caused by Hive write-back operations. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/36990",children:"#36990"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the null pointer issue caused by enabling Hive metastore event synchronization. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38421",children:"#38421"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where error messages were unclear or caused stalling when creating catalogs. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37551",children:"#37551"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where reading Hive text format tables behaved differently from Hive. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37638",children:"#37638"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the logic error when switching between catalogs and databases. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37828",children:"#37828"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"mysql-compatibility-1",children:"MySQL Compatibility"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Fixed the issue where certain flags in the MySQL protocol were set incorrectly when SSL was enabled. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38086",children:"#38086"})]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"asynchronous-materialized-views-2",children:"Asynchronous Materialized Views"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where construction might fail when the base table had a very large number of partitions. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37589",children:"#37589"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where nested materialized views incorrectly performed full table refreshes even when partition refreshes were possible. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38698",children:"#38698"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where partition refresh could not handle the simultaneous existence of valid and invalid dependencies when analyzing partition dependencies. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38367",children:"#38367"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where the final result containing NULL type might cause asynchronous materialized views to fail. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37019",children:"#37019"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the planning error that might occur during transparent rewriting when both synchronous and asynchronous materialized views with the same name were present. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37311",children:"#37311"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"synchronous-materialized-views",children:"Synchronous Materialized Views"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["The rewritten synchronous materialized views now can correctly perform partition pruning. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38527",children:"#38527"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["When rewriting synchronous materialized views, those with unready data are no longer selected. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38148",children:"#38148"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"query-optimizer-2",children:"Query Optimizer"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the deadlock issue that might occur when queries and delete operations are performed simultaneously. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38660",children:"#38660"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where bucket pruning might incorrectly prune on decimal column buckets. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37889",children:"#37889"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where planning might be incorrect when mark join participates in join reorder. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/39152",children:"#39152"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where the result is incorrect when the correlation condition of a correlated subquery is not a simple column. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37644",children:"#37644"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where partition pruning cannot correctly handle or expressions. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38897",children:"#38897"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the planning error that might occur when optimizing the execution order of JOIN and AGG. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37343",children:"#37343"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where ",(0,r.jsx)(i.code,{children:"str_to_date"})," performs incorrect constant folding calculations on datev1 types. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37360",children:"#37360"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where the ACOS function's constant folding returns non-NaN values. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37932",children:"#37932"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:['Fixed the occasional planning error: "The children format needs to be [WhenClause+, DefaultValue?]". ',(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38491",children:"#38491"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where planning might be incorrect when the projection includes window functions and there is both the original column and its alias. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38166",children:"#38166"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where planning might report an error when the aggregation parameter contains a lambda expression. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37109",children:"#37109"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:['Fixed the insert error that might occur in extreme cases: "MultiCastDataSink cannot be cast to DataStreamSink". ',(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38526",children:"#38526"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where the new optimizer does not correctly handle ",(0,r.jsx)(i.code,{children:"char(0)/varchar(0)"})," when creating a table. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38427",children:"#38427"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the incorrect behavior of ",(0,r.jsx)(i.code,{children:"char(255) toSql"}),". ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37340",children:"#37340"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where the nullable attribute within the ",(0,r.jsx)(i.code,{children:"agg_state"})," type might lead to planning errors. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37489",children:"#37489"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where row count statistics are inaccurate during mark Join. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38270",children:"#38270"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"query-execution-3",children:"Query Execution"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed issues where the Pipeline execution engine was stuck, causing queries to not end, in multiple scenarios. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38657",children:"#38657"}),", ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38206",children:"#38206"}),", ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38885",children:"#38885"}),", ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38151",children:"#38151"}),", ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37297",children:"#37297"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the coredump issue caused by NULL and non-NULL columns during set difference calculations. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38750",children:"#38750"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the error when using the DECIMAL type with pure decimals in delete statements. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37801",children:"#37801"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where the ",(0,r.jsx)(i.code,{children:"width_bucket"})," function returned incorrect results. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37892",children:"#37892"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the query error when a single row of data was very large and the result set was also large (exceeding 2GB). ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37990",children:"#37990"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the coredump issue caused by incorrect release of rpc connections during single-replica imports. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38087",children:"#38087"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the coredump issue caused by processing NULL values with the ",(0,r.jsx)(i.code,{children:"foreach"})," function. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37349",children:"#37349"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where stddev returned incorrect results for DECIMALV2 types. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38731",children:"#38731"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the slow performance of ",(0,r.jsx)(i.code,{children:"bitmap union"})," calculations. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37816",children:"#37816"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where RowsProduced for aggregation operators was not set in the profile. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38271",children:"#38271"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the overflow issue when calculating the number of buckets for the hash table under hash join. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37193",children:"#37193"}),", ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37493",children:"#37493"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the inaccurate recording of the ",(0,r.jsx)(i.code,{children:"jemalloc cache memory tracker"}),". ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37464",children:"#37464"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Added the ",(0,r.jsx)(i.code,{children:"enable_stacktrace"})," configuration option, allowing users to control whether exception stacks are output in BE logs. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37713",children:"#37713"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where Arrow Flight SQL did not work correctly when ",(0,r.jsx)(i.code,{children:"enable_parallel_result_sink"})," was set to false. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37779",children:"#37779"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the incorrect use of colocate Join. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37361",children:"#37361"}),", ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37729",children:"#37729"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the calculation overflow issue of the ",(0,r.jsx)(i.code,{children:"round"})," function on DECIMAL128 types. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37733",children:"#37733"}),", ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38106",children:"#38106"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the coredump issue when passing a const string to the ",(0,r.jsx)(i.code,{children:"sleep"})," function. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37681",children:"#37681"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Increased the queue length for audit logs, solving the issue where audit logs could not be recorded normally under high concurrency scenarios with thousands of concurrent connections. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37786",children:"#37786"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where creating a workload group caused too many threads, leading to BE coredump. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38096",children:"#38096"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the coredump issue caused by the ",(0,r.jsx)(i.code,{children:"MULTI_MATCH_ANY"})," function. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37959",children:"#37959"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the transaction rollback issue caused by ",(0,r.jsx)(i.code,{children:"insert overwrite auto partition"}),". ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38103",children:"#38103"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where the TimeUtils formatter did not use the correct time zone. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37465",children:"#37465"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where results were incorrect under constant folding scenarios for week/yearweek. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37376",children:"#37376"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where the ",(0,r.jsx)(i.code,{children:"convert_tz"})," function returned incorrect results. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37358",children:"#37358"}),", ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38764",children:"#38764"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the coredump issue when using the ",(0,r.jsx)(i.code,{children:"collect_set"})," function with window functions. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38234",children:"#38234"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the coredump issue caused by ",(0,r.jsx)(i.code,{children:"percentile_approx"})," during rolling upgrades. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/39321",children:"#39321"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the coredump issue caused by the ",(0,r.jsx)(i.code,{children:"mod"})," function when encountering abnormal input. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37999",children:"#37999"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where the hash table was not fully built when the broadcast join probe started running. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37643",children:"#37643"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where executing the same expression in multithreaded environments might lead to incorrect results for Java UDFs. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38612",children:"#38612"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the overflow issue caused by incorrect return types of the ",(0,r.jsx)(i.code,{children:"conv"})," function. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38001",children:"#38001"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where the ",(0,r.jsx)(i.code,{children:"json_replace"})," function returned incorrect types. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37014",children:"#3701"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where the nullable attribute setting was unreasonable for the ",(0,r.jsx)(i.code,{children:"percentile"})," aggregation function. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37330",children:"#37330"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where the results of the ",(0,r.jsx)(i.code,{children:"histogram"})," function were unstable. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38608",children:"#38608"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where task state was displayed incorrectly in the profile. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38082",children:"#38082"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fixed the issue where some queries were incorrectly canceled when the system just started. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37662",children:"#37662"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"semi-structured-data-management-2",children:"Semi-Structured Data Management"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix some issues with time series compression. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/39170",children:"#39170"})," ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/39176",children:"#39176"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue of incorrect index size statistics during compression. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37232",children:"#37232"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the potential incorrect matching of ultra-long strings without tokenization in inverted indexes. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37679",children:"#37679"})," ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38218",children:"#38218"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the high memory usage issue of ",(0,r.jsx)(i.code,{children:"array_range"})," and ",(0,r.jsx)(i.code,{children:"array_with_const"})," functions when dealing with large data volumes. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38284",children:"#38284"})," ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37495",children:"#37495"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the potential coredump issue when selecting columns of ARRAY / MAP / STRUCT types. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37936",children:"#37936"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the import failure issue caused by simdjson parsing errors when specifying jsonpath in Stream Load. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38490",children:"#38490"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the exception handling issue when there are duplicate keys in JSON data. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38146",children:"#38146"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the potential query error after DROP INDEX. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37646",children:"#37646"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the error return issue in row merging checks during index compression. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38732",children:"#38732"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Inverted index v2 format now supports renaming columns. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38079",children:"#38079"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the coredump issue when the ",(0,r.jsx)(i.code,{children:"MATCH"})," function matches an empty string without an index. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37947",children:"#37947"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the handling of NULL values in inverted indexes. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37921",children:"#37921"})," ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37842",children:"#37842"})," ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38741",children:"#38741"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the incorrect ",(0,r.jsx)(i.code,{children:"row_store_page_size"})," after FE restart. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38240",children:"#38240"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"other-2",children:"Other"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the timezone configuration issue. The default timezone is no longer fixed at UTC+8 and is now obtained from system configuration. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37294",children:"#37294"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the class conflict issue when using ranger due to multiple JSR specification implementations. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37575",children:"#37575"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the potential uninitialized field issue in some BE code. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37403",children:"#37403"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the error in delete statements for random distributed tables. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/37985",children:"#37985"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the incorrect requirement for ",(0,r.jsx)(i.code,{children:"alter_priv"})," permission on the base table when creating a synchronized materialized view. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/38011",children:"#38011"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Fix the issue of not authenticating resources when used in TVF. ",(0,r.jsx)(i.a,{href:"https://github.com/apache/doris/pull/36928",children:"#36928"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"credits",children:"Credits"}),"\n",(0,r.jsx)(i.p,{children:"Thanks all who contribute to this release:"}),"\n",(0,r.jsx)(i.p,{children:"@133tosakarin, @924060929, @AshinGau, @Baymine, @BePPPower, @BiteTheDDDDt, @ByteYue, @CalvinKirs, @Ceng23333, @DarvenDuan, @FreeOnePlus, @Gabriel39, @HappenLee, @JNSimba, @Jibing-Li, @KassieZ, @Lchangliang, @LiBinfeng-01, @Mryange, @SWJTU-ZhangLei, @TangSiyang2001, @Tech-Circle-48, @Vallishp, @Yukang-Lian, @Yulei-Yang, @airborne12, @amorynan, @bobhan1, @cambyzju, @cjj2010, @csun5285, @dataroaring, @deardeng, @eldenmoon, @englefly, @feiniaofeiafei, @felixwluo, @freemandealer, @gavinchou, @ghkang98, @hello-stephen, @hubgeter, @hust-hhb, @jacktengg, @kaijchen, @kaka11chen, @keanji-x, @liaoxin01, @liutang123, @luwei16, @luzhijing, @lxr599, @morningman, @morrySnow, @mrhhsg, @mymeiyi, @platoneko, @qidaye, @qzsee, @seawinde, @shuke987, @sollhui, @starocean999, @suxiaogang223, @w41ter, @wangbo, @wangshuo128, @whutpencil, @wsjz, @wuwenchi, @wyxxxcat, @xiaokang, @xiedeyantu, @xinyiZzz, @xy720, @xzj7019, @yagagagaga, @yiguolei, @yujun777, @z404289981, @zclllyybb, @zddr, @zfr9527, @zhangbutao, @zhangstar333, @zhannngchen, @zhiqiang-hhhh, @zjj, @zy-kkk, @zzzxl1993"})]})}function o(e={}){let{wrapper:i}={...(0,h.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},250065:function(e,i,s){s.d(i,{Z:function(){return l},a:function(){return t}});var n=s(667294);let r={},h=n.createContext(r);function t(e){let i=n.useContext(h);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),n.createElement(h.Provider,{value:i},e.children)}},634346:function(e){e.exports=JSON.parse('{"permalink":"/blog/release-note-3.0.1","source":"@site/blog/release-note-3.0.1.md","title":"Apache Doris 3.0.1 just released","description":"In this version, Apache Doris has improvements in compute-storage decoupling, lakehouse, semi-structured data analysis and more.","date":"2024-08-23T00:00:00.000Z","tags":[{"inline":true,"label":"Release Notes","permalink":"/blog/tags/release-notes"}],"hasTruncateMarker":false,"authors":[{"name":"Apache Doris","key":null,"page":null}],"frontMatter":{"title":"Apache Doris 3.0.1 just released","summary":"In this version, Apache Doris has improvements in compute-storage decoupling, lakehouse, semi-structured data analysis and more.","description":"In this version, Apache Doris has improvements in compute-storage decoupling, lakehouse, semi-structured data analysis and more.","date":"2024-08-23","author":"Apache Doris","tags":["Release Notes"],"image":"/images/3.0.1.jpg"},"unlisted":false,"prevItem":{"title":"Creator of Talkie migrated from Loki and built a PB-scale logging system with Apache Doris","permalink":"/blog/ai-unicorn-minimax-from-loki-and-built-a-pb-scale-logging-system-with-doris"},"nextItem":{"title":"Automatic and flexible data sharding: Auto Partition in Apache Doris","permalink":"/blog/auto-partition-in-apache-doris"}}')}}]);