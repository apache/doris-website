"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["166394"],{713706:function(e,n,t){t.r(n),t.d(n,{default:()=>c,frontMatter:()=>a,metadata:()=>i,assets:()=>m,toc:()=>l,contentTitle:()=>o});var i=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/date-time-functions/from-unixtime","title":"FROM_UNIXTIME","description":"Description","source":"@site/docs/sql-manual/sql-functions/scalar-functions/date-time-functions/from-unixtime.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/date-time-functions","slug":"/sql-manual/sql-functions/scalar-functions/date-time-functions/from-unixtime","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/from-unixtime","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"FROM_UNIXTIME","language":"en"},"sidebar":"docs","previous":{"title":"FROM_SECOND","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/from-second"},"next":{"title":"GET_FORMAT","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/date-time-functions/get-format"}}'),r=t("785893"),s=t("250065");let a={title:"FROM_UNIXTIME",language:"en"},o=void 0,m={},l=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function d(e){let n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(n.p,{children:"The FROM_UNIXTIME function is used to convert a Unix timestamp (in seconds) to a date-time string or VARCHAR type value in a specified format. The reference time for Unix timestamps is 1970-01-01 00:00:00 UTC, and the function generates the corresponding date-time representation based on the input timestamp and format string."}),"\n",(0,r.jsxs)(n.p,{children:["This function is consistent with the ",(0,r.jsx)(n.a,{href:"https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_from-unixtime",children:"from_unixtime function"})," in MySQL."]}),"\n",(0,r.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"FROM_UNIXTIME(<unix_timestamp> [, <string_format>])\n"})}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<unix_timestamp>"})}),(0,r.jsx)(n.td,{children:"Input Unix timestamp, of integer type BIGINT, representing the number of seconds from 1970-01-01 00:00:00 UTC"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<string_format>"})}),(0,r.jsxs)(n.td,{children:["Format string, supports varchar and string types, default is %Y-%m-%d %H:%i:%s. For specific formats, please refer to ",(0,r.jsx)(n.a,{href:"./date-format",children:"date-format"})]})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,r.jsx)(n.p,{children:"Returns date in specified format, of type VARCHAR, returning the result of converting the UTC timezone unix timestamp to the current timezone time."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Currently supported unix_timestamp range is [0, 253402271999] corresponding to dates from 1970-01-01 00:00:00 to 9999-12-31 23:59:59, unix_timestamp outside this range will return an error"}),"\n",(0,r.jsx)(n.li,{children:"If string_format is invalid, returns a string that does not meet expectations."}),"\n",(0,r.jsx)(n.li,{children:"If any parameter is NULL, returns NULL"}),"\n",(0,r.jsx)(n.li,{children:"If the format length is over 128 characters, returns error"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"\n----Since the current timezone is East 8th zone, the returned time is 8 hours ahead of UTC\nselect from_unixtime(0);\n+---------------------+\n| from_unixtime(0)    |\n+---------------------+\n| 1970-01-01 08:00:00 |\n+---------------------+\n\n---Default format %Y-%m-%d %H:%i:%s return\nmysql> select from_unixtime(1196440219);\n+---------------------------+\n| from_unixtime(1196440219) |\n+---------------------------+\n| 2007-12-01 00:30:19       |\n+---------------------------+\n\n---Specify yyyy-MM-dd HH:mm:ss format return\nmysql> select from_unixtime(1196440219, 'yyyy-MM-dd HH:mm:ss');\n+--------------------------------------------------+\n| from_unixtime(1196440219, 'yyyy-MM-dd HH:mm:ss') |\n+--------------------------------------------------+\n| 2007-12-01 00:30:19                              |\n+--------------------------------------------------+\n\n\n---Specify %Y-%m-%d date-only format return\nmysql> select from_unixtime(1196440219, '%Y-%m-%d');\n+-----------------------------------------+\n| from_unixtime(1196440219, '%Y-%m-%d') |\n+-----------------------------------------+\n| 2007-12-01                              |\n+-----------------------------------------+\n\n---Specify %Y-%m-%d %H:%i:%s format return\nmysql> select from_unixtime(1196440219, '%Y-%m-%d %H:%i:%s');\n+--------------------------------------------------+\n| from_unixtime(1196440219, '%Y-%m-%d %H:%i:%s') |\n+--------------------------------------------------+\n| 2007-12-01 00:30:19                              |\n+--------------------------------------------------+\n\n---Exceeds maximum range, returns error\nselect from_unixtime(253402281999);\nERROR 1105 (HY000): errCode = 2, detailMessage = (10.16.10.3)[INVALID_ARGUMENT]Operation from_unixtime_new of 253402281999, yyyy-MM-dd HH:mm:ss is invalid\n\n---result over max length\nselect from_unixtime(32536799,repeat('a',129));\nERROR 1105 (HY000): errCode = 2, detailMessage = (10.16.10.3)[INVALID_ARGUMENT]Operation from_unixtime_new of invalid or oversized format is invalid\n\n---string-format does not reference any time values\nmysql> select from_unixtime(32536799,\"gdaskpdp\");\n+------------------------------------+\n| from_unixtime(32536799,\"gdaskpdp\") |\n+------------------------------------+\n| gdaskpdp                           |\n+------------------------------------+\n\n---Input is NULL, returns NULL\nmysql> select from_unixtime(NULL);\n+---------------------+\n| from_unixtime(NULL) |\n+---------------------+\n| NULL                |\n+---------------------+\n\n"})})]})}function c(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return o},a:function(){return a}});var i=t(667294);let r={},s=i.createContext(r);function a(e){let n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);